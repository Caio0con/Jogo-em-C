

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jun 05 22:09:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 17/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   0016BC                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _ball_dir_y
    77   0016BC  0001               	dw	1
    78                           
    79                           ;initializer for _ball_dir_x
    80   0016BE  0001               	dw	1
    81                           
    82                           ;initializer for _ball_y
    83   0016C0  0002               	dw	2
    84                           
    85                           ;initializer for _ball_x
    86   0016C2  000A               	dw	10
    87                           
    88                           ;initializer for _player2_pos
    89   0016C4  0002               	dw	2
    90                           
    91                           ;initializer for _player1_pos
    92   0016C6  0002               	dw	2
    93                           
    94                           ;initializer for _data2
    95   0016C8  00                 	db	0
    96   0016C9  00                 	db	0
    97   0016CA  0E                 	db	14
    98   0016CB  0E                 	db	14
    99   0016CC  0E                 	db	14
   100   0016CD  0E                 	db	14
   101   0016CE  00                 	db	0
   102   0016CF  00                 	db	0
   103                           
   104                           ;initializer for _data1
   105   0016D0  03                 	db	3
   106   0016D1  03                 	db	3
   107   0016D2  03                 	db	3
   108   0016D3  03                 	db	3
   109   0016D4  03                 	db	3
   110   0016D5  03                 	db	3
   111   0016D6  03                 	db	3
   112   0016D7  03                 	db	3
   113   000000                     _PORTB	set	3969
   114   000000                     _PORTBbits	set	3969
   115   000000                     _PORTD	set	3971
   116   000000                     _TRISB	set	3987
   117   000000                     _T0CON	set	4053
   118   000000                     _INTCONbits	set	4082
   119   000000                     _PORTEbits	set	3972
   120   000000                     _TMR0L	set	4054
   121   000000                     _TRISD	set	3989
   122   000000                     _ADCON1	set	4033
   123   000000                     _TRISE	set	3990
   124                           
   125                           	psect	smallconst
   126   000800                     __psmallconst:
   127                           	callstack 0
   128   000800  00                 	db	0
   129   000801                     STR_2:
   130   000801  47                 	db	71	;'G'
   131   000802  41                 	db	65	;'A'
   132   000803  4D                 	db	77	;'M'
   133   000804  45                 	db	69	;'E'
   134   000805  20                 	db	32
   135   000806  4F                 	db	79	;'O'
   136   000807  56                 	db	86	;'V'
   137   000808  45                 	db	69	;'E'
   138   000809  52                 	db	82	;'R'
   139   00080A  20                 	db	32
   140   00080B  2D                 	db	45
   141   00080C  3E                 	db	62	;'>'
   142   00080D  52                 	db	82	;'R'
   143   00080E  45                 	db	69	;'E'
   144   00080F  53                 	db	83	;'S'
   145   000810  45                 	db	69	;'E'
   146   000811  54                 	db	84	;'T'
   147   000812  00                 	db	0
   148   000813                     STR_1:
   149   000813  3A                 	db	58	;':'
   150   000814  00                 	db	0
   151   000815  00                 	db	0	; dummy byte at the end
   152   000000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   001606                     __pcinit:
   157                           	callstack 0
   158   001606                     start_initialization:
   159                           	callstack 0
   160   001606                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (28 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165   001606  0EBC               	movlw	low __pidataCOMRAM
   166   001608  6EF6               	movwf	tblptrl,c
   167   00160A  0E16               	movlw	high __pidataCOMRAM
   168   00160C  6EF7               	movwf	tblptrh,c
   169   00160E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170   001610  6EF8               	movwf	tblptru,c
   171   001612  EE00  F001         	lfsr	0,__pdataCOMRAM
   172   001616  EE10 F01C          	lfsr	1,28
   173   00161A                     copy_data0:
   174   00161A  0009               	tblrd		*+
   175   00161C  CFF5 FFEE          	movff	tablat,postinc0
   176   001620  50E5               	movf	postdec1,w,c
   177   001622  50E1               	movf	fsr1l,w,c
   178   001624  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to COMRAM (6 bytes)
   181   001626  6A3C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   182   001628  6A3B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   183   00162A  6A3A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   184   00162C  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
   185   00162E  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
   186   001630  6A37               	clrf	__pbssCOMRAM& (0+255),c
   187   001632                     end_of_initialization:
   188                           	callstack 0
   189   001632                     __end_of__initialization:
   190                           	callstack 0
   191   001632  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   192   001634  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   193   001636  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194   001638  6EF8               	movwf	tblptru,c
   195   00163A  0100               	movlb	0
   196   00163C  EF95  F006         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199   000037                     __pbssCOMRAM:
   200                           	callstack 0
   201   000037                     _score2:
   202                           	callstack 0
   203   000037                     	ds	2
   204   000039                     _score1:
   205                           	callstack 0
   206   000039                     	ds	2
   207   00003B                     _tecla_pres:
   208                           	callstack 0
   209   00003B                     	ds	1
   210   00003C                     _tecla:
   211                           	callstack 0
   212   00003C                     	ds	1
   213                           
   214                           	psect	dataCOMRAM
   215   000001                     __pdataCOMRAM:
   216                           	callstack 0
   217   000001                     _ball_dir_y:
   218                           	callstack 0
   219   000001                     	ds	2
   220   000003                     _ball_dir_x:
   221                           	callstack 0
   222   000003                     	ds	2
   223   000005                     _ball_y:
   224                           	callstack 0
   225   000005                     	ds	2
   226   000007                     _ball_x:
   227                           	callstack 0
   228   000007                     	ds	2
   229   000009                     _player2_pos:
   230                           	callstack 0
   231   000009                     	ds	2
   232   00000B                     _player1_pos:
   233                           	callstack 0
   234   00000B                     	ds	2
   235   00000D                     _data2:
   236                           	callstack 0
   237   00000D                     	ds	8
   238   000015                     _data1:
   239                           	callstack 0
   240   000015                     	ds	8
   241                           
   242                           	psect	cstackCOMRAM
   243   00001D                     __pcstackCOMRAM:
   244                           	callstack 0
   245   00001D                     ?___awdiv:
   246                           	callstack 0
   247   00001D                     ?___lwmod:
   248                           	callstack 0
   249   00001D                     varre_teclas@key:
   250                           	callstack 0
   251   00001D                     lcd_wr@val:
   252                           	callstack 0
   253   00001D                     atraso_ms@valor:
   254                           	callstack 0
   255   00001D                     lcd_pos@line:
   256                           	callstack 0
   257   00001D                     ___awdiv@dividend:
   258                           	callstack 0
   259   00001D                     ___lwmod@dividend:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x0
   263   00001D                     	ds	1
   264   00001E                     ??_trata_teclas:
   265                           
   266                           ; 1 bytes @ 0x1
   267   00001E                     	ds	1
   268   00001F                     trata_teclas@t:
   269                           	callstack 0
   270   00001F                     atraso_ms@i:
   271                           	callstack 0
   272   00001F                     lcd_pos@col:
   273                           	callstack 0
   274   00001F                     ___awdiv@divisor:
   275                           	callstack 0
   276   00001F                     ___lwmod@divisor:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x2
   280   00001F                     	ds	2
   281   000021                     ??_lcd_pos:
   282   000021                     atraso_ms@j:
   283                           	callstack 0
   284   000021                     ___awdiv@counter:
   285                           	callstack 0
   286   000021                     ___lwmod@counter:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290   000021                     	ds	1
   291   000022                     ?___lwdiv:
   292                           	callstack 0
   293   000022                     lcd_cmd@val:
   294                           	callstack 0
   295   000022                     lcd_dat@val:
   296                           	callstack 0
   297   000022                     ___awdiv@sign:
   298                           	callstack 0
   299   000022                     ___lwdiv@dividend:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x5
   303   000022                     	ds	1
   304   000023                     lcd_set_cursor@row:
   305                           	callstack 0
   306   000023                     special_char@data:
   307                           	callstack 0
   308   000023                     ___awdiv@quotient:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x6
   312   000023                     	ds	1
   313   000024                     lcd_set_cursor@col:
   314                           	callstack 0
   315   000024                     special_char@cgram_loc:
   316                           	callstack 0
   317   000024                     ___lwdiv@divisor:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x7
   321   000024                     	ds	1
   322   000025                     lcd_set_cursor@address:
   323                           	callstack 0
   324   000025                     print_special_character@lcd_loc:
   325                           	callstack 0
   326   000025                     special_char@j:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330   000025                     	ds	1
   331   000026                     print_special_character@cgram_loc:
   332                           	callstack 0
   333   000026                     ___lwdiv@quotient:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x9
   337   000026                     	ds	2
   338   000028                     ___lwdiv@counter:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xB
   342   000028                     	ds	1
   343   000029                     itoa@val:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xC
   347   000029                     	ds	2
   348   00002B                     itoa@str:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0xE
   352   00002B                     	ds	1
   353   00002C                     lcd_str@str:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xF
   357   00002C                     	ds	2
   358   00002E                     ??_lcd_str:
   359                           
   360                           ; 1 bytes @ 0x11
   361   00002E                     	ds	2
   362   000030                     lcd_str@i:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x13
   366   000030                     	ds	1
   367   000031                     ??_main:
   368                           
   369                           ; 1 bytes @ 0x14
   370   000031                     	ds	2
   371   000033                     main@buff:
   372                           	callstack 0
   373                           
   374                           ; 3 bytes @ 0x16
   375   000033                     	ds	3
   376   000036                     main@tecla_atual:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x19
   380   000036                     	ds	1
   381                           
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 201 in file "../../../Documents/P2/PONG/pong.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  tecla_atual     1   25[COMRAM] unsigned char 
   392 ;;  buff            3   22[COMRAM] unsigned char [3]
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         0       0       0       0       0       0       0       0       0
   403 ;;      Locals:         4       0       0       0       0       0       0       0       0
   404 ;;      Temps:          2       0       0       0       0       0       0       0       0
   405 ;;      Totals:         6       0       0       0       0       0       0       0       0
   406 ;;Total ram usage:        6 bytes
   407 ;; Hardware stack levels required when called: 4
   408 ;; This function calls:
   409 ;;		_init_interrupts
   410 ;;		_init_timer0
   411 ;;		_itoa
   412 ;;		_lcd_cmd
   413 ;;		_lcd_init
   414 ;;		_lcd_pos
   415 ;;		_lcd_set_cursor
   416 ;;		_lcd_str
   417 ;;		_print_special_character
   418 ;;		_special_char
   419 ;;		_trata_teclas
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text0
   426   000D2A                     __ptext0:
   427                           	callstack 0
   428   000D2A                     _main:
   429                           	callstack 27
   430   000D2A                     
   431                           ;pong.c: 203: TRISB = 0xF0;
   432   000D2A  0EF0               	movlw	240
   433   000D2C  6E93               	movwf	147,c	;volatile
   434                           
   435                           ;pong.c: 204: PORTB = 0x00;
   436   000D2E  0E00               	movlw	0
   437   000D30  6E81               	movwf	129,c	;volatile
   438                           
   439                           ;pong.c: 206: TRISD=0x00;
   440   000D32  0E00               	movlw	0
   441   000D34  6E95               	movwf	149,c	;volatile
   442                           
   443                           ;pong.c: 207: TRISE=0x00;
   444   000D36  0E00               	movlw	0
   445   000D38  6E96               	movwf	150,c	;volatile
   446                           
   447                           ;pong.c: 208: ADCON1 = 0x0F;
   448   000D3A  0E0F               	movlw	15
   449   000D3C  6EC1               	movwf	193,c	;volatile
   450   000D3E                     
   451                           ;pong.c: 210: lcd_init();
   452   000D3E  EC66  F00A         	call	_lcd_init	;wreg free
   453   000D42                     
   454                           ;pong.c: 211: lcd_cmd(0x0C);
   455   000D42  0E0C               	movlw	12
   456   000D44  EC35  F00B         	call	_lcd_cmd
   457   000D48                     
   458                           ;pong.c: 212: lcd_cmd(0x01);
   459   000D48  0E01               	movlw	1
   460   000D4A  EC35  F00B         	call	_lcd_cmd
   461   000D4E                     
   462                           ;pong.c: 216: init_interrupts();
   463   000D4E  EC77  F00B         	call	_init_interrupts	;wreg free
   464   000D52                     
   465                           ;pong.c: 217: init_timer0();
   466   000D52  EC6C  F00B         	call	_init_timer0	;wreg free
   467   000D56                     
   468                           ;pong.c: 219: special_char(64, data1);
   469   000D56  0E15               	movlw	low _data1
   470   000D58  6E23               	movwf	special_char@data^0,c
   471   000D5A  0E40               	movlw	64
   472   000D5C  ECE4  F00A         	call	_special_char
   473   000D60                     
   474                           ;pong.c: 220: special_char(72, data2);
   475   000D60  0E0D               	movlw	low _data2
   476   000D62  6E23               	movwf	special_char@data^0,c
   477   000D64  0E48               	movlw	72
   478   000D66  ECE4  F00A         	call	_special_char
   479   000D6A                     l259:
   480                           
   481                           ;pong.c: 224: lcd_cmd(0x01);
   482   000D6A  0E01               	movlw	1
   483   000D6C  EC35  F00B         	call	_lcd_cmd
   484                           
   485                           ;pong.c: 227: print_special_character(64, lcd_pos(player1_pos, 3));
   486   000D70  C00B  F01D         	movff	_player1_pos,lcd_pos@line	;volatile
   487   000D74  C00C  F01E         	movff	_player1_pos+1,lcd_pos@line+1	;volatile
   488   000D78  0E00               	movlw	0
   489   000D7A  6E20               	movwf	(lcd_pos@col+1)^0,c
   490   000D7C  0E03               	movlw	3
   491   000D7E  6E1F               	movwf	lcd_pos@col^0,c
   492   000D80  EC0B  F004         	call	_lcd_pos	;wreg free
   493   000D84  6E25               	movwf	print_special_character@lcd_loc^0,c
   494   000D86  0E40               	movlw	64
   495   000D88  EC4A  F00B         	call	_print_special_character
   496                           
   497                           ;pong.c: 228: print_special_character(64, lcd_pos(player2_pos, 17));
   498   000D8C  C009  F01D         	movff	_player2_pos,lcd_pos@line	;volatile
   499   000D90  C00A  F01E         	movff	_player2_pos+1,lcd_pos@line+1	;volatile
   500   000D94  0E00               	movlw	0
   501   000D96  6E20               	movwf	(lcd_pos@col+1)^0,c
   502   000D98  0E11               	movlw	17
   503   000D9A  6E1F               	movwf	lcd_pos@col^0,c
   504   000D9C  EC0B  F004         	call	_lcd_pos	;wreg free
   505   000DA0  6E25               	movwf	print_special_character@lcd_loc^0,c
   506   000DA2  0E40               	movlw	64
   507   000DA4  EC4A  F00B         	call	_print_special_character
   508                           
   509                           ;pong.c: 231: print_special_character(72, lcd_pos(ball_y, ball_x));
   510   000DA8  C005  F01D         	movff	_ball_y,lcd_pos@line	;volatile
   511   000DAC  C006  F01E         	movff	_ball_y+1,lcd_pos@line+1	;volatile
   512   000DB0  C007  F01F         	movff	_ball_x,lcd_pos@col	;volatile
   513   000DB4  C008  F020         	movff	_ball_x+1,lcd_pos@col+1	;volatile
   514   000DB8  EC0B  F004         	call	_lcd_pos	;wreg free
   515   000DBC  6E25               	movwf	print_special_character@lcd_loc^0,c
   516   000DBE  0E48               	movlw	72
   517   000DC0  EC4A  F00B         	call	_print_special_character
   518                           
   519                           ;pong.c: 233: lcd_set_cursor(8, 1);
   520   000DC4  0E01               	movlw	1
   521   000DC6  6E23               	movwf	lcd_set_cursor@row^0,c
   522   000DC8  0E08               	movlw	8
   523   000DCA  EC94  F00A         	call	_lcd_set_cursor
   524   000DCE                     
   525                           ;pong.c: 234: lcd_str(itoa(score1, buff));
   526   000DCE  C039  F029         	movff	_score1,itoa@val	;volatile
   527   000DD2  C03A  F02A         	movff	_score1+1,itoa@val+1	;volatile
   528   000DD6  0E33               	movlw	low main@buff
   529   000DD8  6E2B               	movwf	itoa@str^0,c
   530   000DDA  EC00  F00A         	call	_itoa	;wreg free
   531   000DDE  6E31               	movwf	??_main^0,c
   532   000DE0  C031  F02C         	movff	??_main,lcd_str@str
   533   000DE4  6A2D               	clrf	(lcd_str@str+1)^0,c
   534   000DE6  EC53  F009         	call	_lcd_str	;wreg free
   535   000DEA                     
   536                           ;pong.c: 235: lcd_set_cursor(11, 1);
   537   000DEA  0E01               	movlw	1
   538   000DEC  6E23               	movwf	lcd_set_cursor@row^0,c
   539   000DEE  0E0B               	movlw	11
   540   000DF0  EC94  F00A         	call	_lcd_set_cursor
   541   000DF4                     
   542                           ;pong.c: 236: lcd_str(":");
   543   000DF4  0E13               	movlw	low STR_1
   544   000DF6  6E2C               	movwf	lcd_str@str^0,c
   545   000DF8  502C               	movf	lcd_str@str^0,w,c
   546   000DFA  A4D8               	btfss	status,2,c
   547   000DFC  0E08               	movlw	high __smallconst
   548   000DFE  6E2D               	movwf	(lcd_str@str+1)^0,c
   549   000E00  EC53  F009         	call	_lcd_str	;wreg free
   550   000E04                     
   551                           ;pong.c: 237: lcd_set_cursor(13, 0);
   552   000E04  0E00               	movlw	0
   553   000E06  6E23               	movwf	lcd_set_cursor@row^0,c
   554   000E08  0E0D               	movlw	13
   555   000E0A  EC94  F00A         	call	_lcd_set_cursor
   556   000E0E                     
   557                           ;pong.c: 238: lcd_str(itoa(score2, buff));
   558   000E0E  C037  F029         	movff	_score2,itoa@val	;volatile
   559   000E12  C038  F02A         	movff	_score2+1,itoa@val+1	;volatile
   560   000E16  0E33               	movlw	low main@buff
   561   000E18  6E2B               	movwf	itoa@str^0,c
   562   000E1A  EC00  F00A         	call	_itoa	;wreg free
   563   000E1E  6E31               	movwf	??_main^0,c
   564   000E20  C031  F02C         	movff	??_main,lcd_str@str
   565   000E24  6A2D               	clrf	(lcd_str@str+1)^0,c
   566   000E26  EC53  F009         	call	_lcd_str	;wreg free
   567   000E2A                     
   568                           ;pong.c: 242: char tecla_atual = trata_teclas();
   569   000E2A  ECC9  F009         	call	_trata_teclas	;wreg free
   570   000E2E  6E36               	movwf	main@tecla_atual^0,c
   571   000E30                     
   572                           ;pong.c: 243: if (tecla_atual != ' ') {
   573   000E30  0E20               	movlw	32
   574   000E32  1836               	xorwf	main@tecla_atual^0,w,c
   575   000E34  B4D8               	btfsc	status,2,c
   576   000E36  EF1F  F007         	goto	u731
   577   000E3A  EF21  F007         	goto	u730
   578   000E3E                     u731:
   579   000E3E  EF80  F007         	goto	l2428
   580   000E42                     u730:
   581   000E42  EF6D  F007         	goto	l2426
   582   000E46                     l2408:
   583                           
   584                           ;pong.c: 248: if (player1_pos > 1){
   585   000E46  BE0C               	btfsc	(_player1_pos+1)^0,7,c	;volatile
   586   000E48  EF2F  F007         	goto	u741
   587   000E4C  500C               	movf	(_player1_pos+1)^0,w,c	;volatile
   588   000E4E  E109               	bnz	u740
   589   000E50  0E02               	movlw	2
   590   000E52  5C0B               	subwf	_player1_pos^0,w,c	;volatile
   591   000E54  A0D8               	btfss	status,0,c
   592   000E56  EF2F  F007         	goto	u741
   593   000E5A  EF31  F007         	goto	u740
   594   000E5E                     u741:
   595   000E5E  EF80  F007         	goto	l2428
   596   000E62                     u740:
   597   000E62                     
   598                           ;pong.c: 249: player1_pos--;
   599   000E62  060B               	decf	_player1_pos^0,f,c	;volatile
   600   000E64  A0D8               	btfss	status,0,c
   601   000E66  060C               	decf	(_player1_pos+1)^0,f,c	;volatile
   602   000E68  EF80  F007         	goto	l2428
   603   000E6C                     l2412:
   604                           
   605                           ;pong.c: 254: if (player1_pos < 4){
   606   000E6C  BE0C               	btfsc	(_player1_pos+1)^0,7,c	;volatile
   607   000E6E  EF44  F007         	goto	u750
   608   000E72  500C               	movf	(_player1_pos+1)^0,w,c	;volatile
   609   000E74  E107               	bnz	u751
   610   000E76  0E04               	movlw	4
   611   000E78  5C0B               	subwf	_player1_pos^0,w,c	;volatile
   612   000E7A  B0D8               	btfsc	status,0,c
   613   000E7C  EF42  F007         	goto	u751
   614   000E80  EF44  F007         	goto	u750
   615   000E84                     u751:
   616   000E84  EF80  F007         	goto	l2428
   617   000E88                     u750:
   618   000E88                     
   619                           ;pong.c: 255: player1_pos++;
   620   000E88  4A0B               	infsnz	_player1_pos^0,f,c	;volatile
   621   000E8A  2A0C               	incf	(_player1_pos+1)^0,f,c	;volatile
   622   000E8C  EF80  F007         	goto	l2428
   623   000E90                     l2416:
   624                           
   625                           ;pong.c: 259: if (player2_pos > 1){
   626   000E90  BE0A               	btfsc	(_player2_pos+1)^0,7,c	;volatile
   627   000E92  EF54  F007         	goto	u761
   628   000E96  500A               	movf	(_player2_pos+1)^0,w,c	;volatile
   629   000E98  E109               	bnz	u760
   630   000E9A  0E02               	movlw	2
   631   000E9C  5C09               	subwf	_player2_pos^0,w,c	;volatile
   632   000E9E  A0D8               	btfss	status,0,c
   633   000EA0  EF54  F007         	goto	u761
   634   000EA4  EF56  F007         	goto	u760
   635   000EA8                     u761:
   636   000EA8  EF80  F007         	goto	l2428
   637   000EAC                     u760:
   638   000EAC                     
   639                           ;pong.c: 260: player2_pos--;
   640   000EAC  0609               	decf	_player2_pos^0,f,c	;volatile
   641   000EAE  A0D8               	btfss	status,0,c
   642   000EB0  060A               	decf	(_player2_pos+1)^0,f,c	;volatile
   643   000EB2  EF80  F007         	goto	l2428
   644   000EB6                     l2420:
   645                           
   646                           ;pong.c: 265: if (player2_pos < 4){
   647   000EB6  BE0A               	btfsc	(_player2_pos+1)^0,7,c	;volatile
   648   000EB8  EF69  F007         	goto	u770
   649   000EBC  500A               	movf	(_player2_pos+1)^0,w,c	;volatile
   650   000EBE  E107               	bnz	u771
   651   000EC0  0E04               	movlw	4
   652   000EC2  5C09               	subwf	_player2_pos^0,w,c	;volatile
   653   000EC4  B0D8               	btfsc	status,0,c
   654   000EC6  EF67  F007         	goto	u771
   655   000ECA  EF69  F007         	goto	u770
   656   000ECE                     u771:
   657   000ECE  EF80  F007         	goto	l2428
   658   000ED2                     u770:
   659   000ED2                     
   660                           ;pong.c: 266: player2_pos++;
   661   000ED2  4A09               	infsnz	_player2_pos^0,f,c	;volatile
   662   000ED4  2A0A               	incf	(_player2_pos+1)^0,f,c	;volatile
   663   000ED6  EF80  F007         	goto	l2428
   664   000EDA                     l2426:
   665   000EDA  5036               	movf	main@tecla_atual^0,w,c
   666                           
   667                           ; Switch size 1, requested type "simple"
   668                           ; Number of cases is 4, Range of values is 49 to 65
   669                           ; switch strategies available:
   670                           ; Name         Instructions Cycles
   671                           ; simple_byte           13     7 (average)
   672                           ;	Chosen strategy is simple_byte
   673   000EDC  0A31               	xorlw	49	; case 49
   674   000EDE  B4D8               	btfsc	status,2,c
   675   000EE0  EF23  F007         	goto	l2408
   676   000EE4  0A03               	xorlw	3	; case 50
   677   000EE6  B4D8               	btfsc	status,2,c
   678   000EE8  EF36  F007         	goto	l2412
   679   000EEC  0A01               	xorlw	1	; case 51
   680   000EEE  B4D8               	btfsc	status,2,c
   681   000EF0  EF48  F007         	goto	l2416
   682   000EF4  0A72               	xorlw	114	; case 65
   683   000EF6  B4D8               	btfsc	status,2,c
   684   000EF8  EF5B  F007         	goto	l2420
   685   000EFC  EF80  F007         	goto	l2428
   686   000F00                     l2428:
   687                           
   688                           ;pong.c: 272: };pong.c: 273: if (score1 == 10 ) {lcd_str("GAME OVER ->RESET"); break;}
   689   000F00  0E0A               	movlw	10
   690   000F02  1839               	xorwf	_score1^0,w,c	;volatile
   691   000F04  103A               	iorwf	(_score1+1)^0,w,c	;volatile
   692   000F06  A4D8               	btfss	status,2,c
   693   000F08  EF88  F007         	goto	u781
   694   000F0C  EF8A  F007         	goto	u780
   695   000F10                     u781:
   696   000F10  EF94  F007         	goto	l2432
   697   000F14                     u780:
   698   000F14  0E01               	movlw	low STR_2
   699   000F16  6E2C               	movwf	lcd_str@str^0,c
   700   000F18  502C               	movf	lcd_str@str^0,w,c
   701   000F1A  A4D8               	btfss	status,2,c
   702   000F1C  0E08               	movlw	high __smallconst
   703   000F1E  6E2D               	movwf	(lcd_str@str+1)^0,c
   704   000F20  EC53  F009         	call	_lcd_str	;wreg free
   705   000F24  EFB5  F007         	goto	l276
   706   000F28                     l2432:
   707                           
   708                           ;pong.c: 274: if (score2 == 10 ) {lcd_str("GAME OVER ->RESET"); break;}
   709   000F28  0E0A               	movlw	10
   710   000F2A  1837               	xorwf	_score2^0,w,c	;volatile
   711   000F2C  1038               	iorwf	(_score2+1)^0,w,c	;volatile
   712   000F2E  A4D8               	btfss	status,2,c
   713   000F30  EF9C  F007         	goto	u791
   714   000F34  EF9E  F007         	goto	u790
   715   000F38                     u791:
   716   000F38  EFA8  F007         	goto	l2436
   717   000F3C                     u790:
   718   000F3C  0E01               	movlw	low STR_2
   719   000F3E  6E2C               	movwf	lcd_str@str^0,c
   720   000F40  502C               	movf	lcd_str@str^0,w,c
   721   000F42  A4D8               	btfss	status,2,c
   722   000F44  0E08               	movlw	high __smallconst
   723   000F46  6E2D               	movwf	(lcd_str@str+1)^0,c
   724   000F48  EC53  F009         	call	_lcd_str	;wreg free
   725   000F4C  EFB5  F007         	goto	l276
   726   000F50                     l2436:
   727                           
   728                           ;pong.c: 275: _delay((unsigned long)((50)*(48000000/4000.0)));
   729   000F50  0E04               	movlw	4
   730   000F52  6E32               	movwf	(??_main+1)^0,c
   731   000F54  0E0C               	movlw	12
   732   000F56  6E31               	movwf	??_main^0,c
   733   000F58  0E34               	movlw	52
   734   000F5A                     u807:
   735   000F5A  2EE8               	decfsz	wreg,f,c
   736   000F5C  D7FE               	bra	u807
   737   000F5E  2E31               	decfsz	??_main^0,f,c
   738   000F60  D7FC               	bra	u807
   739   000F62  2E32               	decfsz	(??_main+1)^0,f,c
   740   000F64  D7FA               	bra	u807
   741   000F66  EFB5  F006         	goto	l259
   742   000F6A                     l276:
   743   000F6A  EF07  F000         	goto	start
   744   000F6E                     __end_of_main:
   745                           	callstack 0
   746                           
   747 ;; *************** function _trata_teclas *****************
   748 ;; Defined at:
   749 ;;		line 51 in file "../../../Documents/P2/PONG/16Keys.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  t               1    2[COMRAM] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      unsigned char 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   763 ;;      Params:         0       0       0       0       0       0       0       0       0
   764 ;;      Locals:         1       0       0       0       0       0       0       0       0
   765 ;;      Temps:          1       0       0       0       0       0       0       0       0
   766 ;;      Totals:         2       0       0       0       0       0       0       0       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 2
   770 ;; This function calls:
   771 ;;		_varre_teclas
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text1
   778   001392                     __ptext1:
   779                           	callstack 0
   780   001392                     _trata_teclas:
   781                           	callstack 28
   782   001392                     
   783                           ;16Keys.c: 52: char t;;16Keys.c: 54: t = varre_teclas();
   784   001392  ECB7  F007         	call	_varre_teclas	;wreg free
   785   001396  6E1F               	movwf	trata_teclas@t^0,c
   786   001398                     
   787                           ;16Keys.c: 55: if ((t != ' ') && (!tecla_pres)) {
   788   001398  0E20               	movlw	32
   789   00139A  181F               	xorwf	trata_teclas@t^0,w,c
   790   00139C  B4D8               	btfsc	status,2,c
   791   00139E  EFD3  F009         	goto	u311
   792   0013A2  EFD5  F009         	goto	u310
   793   0013A6                     u311:
   794   0013A6  EFFC  F009         	goto	l1266
   795   0013AA                     u310:
   796   0013AA  503B               	movf	_tecla_pres^0,w,c
   797   0013AC  A4D8               	btfss	status,2,c
   798   0013AE  EFDB  F009         	goto	u321
   799   0013B2  EFDD  F009         	goto	u320
   800   0013B6                     u321:
   801   0013B6  EFFC  F009         	goto	l1266
   802   0013BA                     u320:
   803   0013BA                     
   804                           ;16Keys.c: 56: tecla_pres = 1;
   805   0013BA  0E01               	movlw	1
   806   0013BC  6E3B               	movwf	_tecla_pres^0,c
   807                           
   808                           ;16Keys.c: 57: if (t != tecla) {
   809   0013BE  501F               	movf	trata_teclas@t^0,w,c
   810   0013C0  B4D8               	btfsc	status,2,c
   811   0013C2  EFE5  F009         	goto	u331
   812   0013C6  EFE7  F009         	goto	u330
   813   0013CA                     u331:
   814   0013CA  EFFC  F009         	goto	l1266
   815   0013CE                     u330:
   816   0013CE                     
   817                           ;16Keys.c: 59: _delay((unsigned long)((10)*(48000000/4000.0)));
   818   0013CE  0E9C               	movlw	156
   819   0013D0  6E1E               	movwf	??_trata_teclas^0,c
   820   0013D2  0ED7               	movlw	215
   821   0013D4                     u817:
   822   0013D4  2EE8               	decfsz	wreg,f,c
   823   0013D6  D7FE               	bra	u817
   824   0013D8  2E1E               	decfsz	??_trata_teclas^0,f,c
   825   0013DA  D7FC               	bra	u817
   826   0013DC  0000               	nop	
   827   0013DE                     
   828                           ;16Keys.c: 63: if (varre_teclas() == t) return t;
   829   0013DE  ECB7  F007         	call	_varre_teclas	;wreg free
   830   0013E2  181F               	xorwf	trata_teclas@t^0,w,c
   831   0013E4  A4D8               	btfss	status,2,c
   832   0013E6  EFF7  F009         	goto	u341
   833   0013EA  EFF9  F009         	goto	u340
   834   0013EE                     u341:
   835   0013EE  EFFC  F009         	goto	l1266
   836   0013F2                     u340:
   837   0013F2  501F               	movf	trata_teclas@t^0,w,c
   838   0013F4  EFFF  F009         	goto	l33
   839   0013F8                     l1266:
   840                           
   841                           ;16Keys.c: 64: };16Keys.c: 65: };16Keys.c: 66: tecla_pres = 0;
   842   0013F8  0E00               	movlw	0
   843   0013FA  6E3B               	movwf	_tecla_pres^0,c
   844   0013FC                     
   845                           ;16Keys.c: 67: return ' ';
   846   0013FC  0E20               	movlw	32
   847   0013FE                     l33:
   848   0013FE  0012               	return		;funcret
   849   001400                     __end_of_trata_teclas:
   850                           	callstack 0
   851                           
   852 ;; *************** function _varre_teclas *****************
   853 ;; Defined at:
   854 ;;		line 17 in file "../../../Documents/P2/PONG/16Keys.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  key             1    0[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      unsigned char 
   861 ;; Registers used:
   862 ;;		wreg, status,2
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         0       0       0       0       0       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         1       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_trata_teclas
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text2
   883   000F6E                     __ptext2:
   884                           	callstack 0
   885   000F6E                     _varre_teclas:
   886                           	callstack 28
   887   000F6E                     
   888                           ;16Keys.c: 18: char key = ' ';
   889   000F6E  0E20               	movlw	32
   890   000F70  6E1D               	movwf	varre_teclas@key^0,c
   891   000F72                     
   892                           ;16Keys.c: 22: PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1; PORTBbits.RB0 = 
      +                          0;
   893   000F72  8681               	bsf	129,3,c	;volatile
   894   000F74  8481               	bsf	129,2,c	;volatile
   895   000F76  8281               	bsf	129,1,c	;volatile
   896   000F78  9081               	bcf	129,0,c	;volatile
   897   000F7A                     
   898                           ;16Keys.c: 23: _delay((unsigned long)((10)*(48000000/4000000.0)));
   899   000F7A  0E28               	movlw	40
   900   000F7C                     u827:
   901   000F7C  2EE8               	decfsz	wreg,f,c
   902   000F7E  D7FE               	bra	u827
   903   000F80                     
   904                           ;16Keys.c: 24: if (!PORTBbits.RB4) key = '1';
   905   000F80  B881               	btfsc	129,4,c	;volatile
   906   000F82  EFC5  F007         	goto	u31
   907   000F86  EFC7  F007         	goto	u30
   908   000F8A                     u31:
   909   000F8A  EFC9  F007         	goto	l1058
   910   000F8E                     u30:
   911   000F8E  0E31               	movlw	49
   912   000F90  6E1D               	movwf	varre_teclas@key^0,c
   913   000F92                     l1058:
   914                           
   915                           ;16Keys.c: 25: if (!PORTBbits.RB5) key = '4';
   916   000F92  BA81               	btfsc	129,5,c	;volatile
   917   000F94  EFCE  F007         	goto	u41
   918   000F98  EFD0  F007         	goto	u40
   919   000F9C                     u41:
   920   000F9C  EFD2  F007         	goto	l1062
   921   000FA0                     u40:
   922   000FA0  0E34               	movlw	52
   923   000FA2  6E1D               	movwf	varre_teclas@key^0,c
   924   000FA4                     l1062:
   925                           
   926                           ;16Keys.c: 26: if (!PORTBbits.RB6) key = '7';
   927   000FA4  BC81               	btfsc	129,6,c	;volatile
   928   000FA6  EFD7  F007         	goto	u51
   929   000FAA  EFD9  F007         	goto	u50
   930   000FAE                     u51:
   931   000FAE  EFDB  F007         	goto	l1066
   932   000FB2                     u50:
   933   000FB2  0E37               	movlw	55
   934   000FB4  6E1D               	movwf	varre_teclas@key^0,c
   935   000FB6                     l1066:
   936                           
   937                           ;16Keys.c: 27: if (!PORTBbits.RB7) key = '*';
   938   000FB6  BE81               	btfsc	129,7,c	;volatile
   939   000FB8  EFE0  F007         	goto	u61
   940   000FBC  EFE2  F007         	goto	u60
   941   000FC0                     u61:
   942   000FC0  EFE4  F007         	goto	l1070
   943   000FC4                     u60:
   944   000FC4  0E2A               	movlw	42
   945   000FC6  6E1D               	movwf	varre_teclas@key^0,c
   946   000FC8                     l1070:
   947                           
   948                           ;16Keys.c: 28: PORTBbits.RB0 = 1; PORTBbits.RB1 = 0;
   949   000FC8  8081               	bsf	129,0,c	;volatile
   950   000FCA  9281               	bcf	129,1,c	;volatile
   951   000FCC                     
   952                           ;16Keys.c: 29: _delay((unsigned long)((10)*(48000000/4000000.0)));
   953   000FCC  0E28               	movlw	40
   954   000FCE                     u837:
   955   000FCE  2EE8               	decfsz	wreg,f,c
   956   000FD0  D7FE               	bra	u837
   957   000FD2                     
   958                           ;16Keys.c: 30: if (!PORTBbits.RB4) key = '2';
   959   000FD2  B881               	btfsc	129,4,c	;volatile
   960   000FD4  EFEE  F007         	goto	u71
   961   000FD8  EFF0  F007         	goto	u70
   962   000FDC                     u71:
   963   000FDC  EFF2  F007         	goto	l1080
   964   000FE0                     u70:
   965   000FE0  0E32               	movlw	50
   966   000FE2  6E1D               	movwf	varre_teclas@key^0,c
   967   000FE4                     l1080:
   968                           
   969                           ;16Keys.c: 31: if (!PORTBbits.RB5) key = '5';
   970   000FE4  BA81               	btfsc	129,5,c	;volatile
   971   000FE6  EFF7  F007         	goto	u81
   972   000FEA  EFF9  F007         	goto	u80
   973   000FEE                     u81:
   974   000FEE  EFFB  F007         	goto	l1084
   975   000FF2                     u80:
   976   000FF2  0E35               	movlw	53
   977   000FF4  6E1D               	movwf	varre_teclas@key^0,c
   978   000FF6                     l1084:
   979                           
   980                           ;16Keys.c: 32: if (!PORTBbits.RB6) key = '8';
   981   000FF6  BC81               	btfsc	129,6,c	;volatile
   982   000FF8  EF00  F008         	goto	u91
   983   000FFC  EF02  F008         	goto	u90
   984   001000                     u91:
   985   001000  EF04  F008         	goto	l1088
   986   001004                     u90:
   987   001004  0E38               	movlw	56
   988   001006  6E1D               	movwf	varre_teclas@key^0,c
   989   001008                     l1088:
   990                           
   991                           ;16Keys.c: 33: if (!PORTBbits.RB7) key = '0';
   992   001008  BE81               	btfsc	129,7,c	;volatile
   993   00100A  EF09  F008         	goto	u101
   994   00100E  EF0B  F008         	goto	u100
   995   001012                     u101:
   996   001012  EF0D  F008         	goto	l1092
   997   001016                     u100:
   998   001016  0E30               	movlw	48
   999   001018  6E1D               	movwf	varre_teclas@key^0,c
  1000   00101A                     l1092:
  1001                           
  1002                           ;16Keys.c: 34: PORTBbits.RB1 = 1; PORTBbits.RB2 = 0;
  1003   00101A  8281               	bsf	129,1,c	;volatile
  1004   00101C  9481               	bcf	129,2,c	;volatile
  1005   00101E                     
  1006                           ;16Keys.c: 35: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1007   00101E  0E28               	movlw	40
  1008   001020                     u847:
  1009   001020  2EE8               	decfsz	wreg,f,c
  1010   001022  D7FE               	bra	u847
  1011   001024                     
  1012                           ;16Keys.c: 36: if (!PORTBbits.RB4) key = '3';
  1013   001024  B881               	btfsc	129,4,c	;volatile
  1014   001026  EF17  F008         	goto	u111
  1015   00102A  EF19  F008         	goto	u110
  1016   00102E                     u111:
  1017   00102E  EF1B  F008         	goto	l1102
  1018   001032                     u110:
  1019   001032  0E33               	movlw	51
  1020   001034  6E1D               	movwf	varre_teclas@key^0,c
  1021   001036                     l1102:
  1022                           
  1023                           ;16Keys.c: 37: if (!PORTBbits.RB5) key = '6';
  1024   001036  BA81               	btfsc	129,5,c	;volatile
  1025   001038  EF20  F008         	goto	u121
  1026   00103C  EF22  F008         	goto	u120
  1027   001040                     u121:
  1028   001040  EF24  F008         	goto	l1106
  1029   001044                     u120:
  1030   001044  0E36               	movlw	54
  1031   001046  6E1D               	movwf	varre_teclas@key^0,c
  1032   001048                     l1106:
  1033                           
  1034                           ;16Keys.c: 38: if (!PORTBbits.RB6) key = '9';
  1035   001048  BC81               	btfsc	129,6,c	;volatile
  1036   00104A  EF29  F008         	goto	u131
  1037   00104E  EF2B  F008         	goto	u130
  1038   001052                     u131:
  1039   001052  EF2D  F008         	goto	l1110
  1040   001056                     u130:
  1041   001056  0E39               	movlw	57
  1042   001058  6E1D               	movwf	varre_teclas@key^0,c
  1043   00105A                     l1110:
  1044                           
  1045                           ;16Keys.c: 39: if (!PORTBbits.RB7) key = '#';
  1046   00105A  BE81               	btfsc	129,7,c	;volatile
  1047   00105C  EF32  F008         	goto	u141
  1048   001060  EF34  F008         	goto	u140
  1049   001064                     u141:
  1050   001064  EF36  F008         	goto	l1114
  1051   001068                     u140:
  1052   001068  0E23               	movlw	35
  1053   00106A  6E1D               	movwf	varre_teclas@key^0,c
  1054   00106C                     l1114:
  1055                           
  1056                           ;16Keys.c: 40: PORTBbits.RB2 = 1; PORTBbits.RB3 = 0;
  1057   00106C  8481               	bsf	129,2,c	;volatile
  1058   00106E  9681               	bcf	129,3,c	;volatile
  1059   001070                     
  1060                           ;16Keys.c: 41: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1061   001070  0E28               	movlw	40
  1062   001072                     u857:
  1063   001072  2EE8               	decfsz	wreg,f,c
  1064   001074  D7FE               	bra	u857
  1065   001076                     
  1066                           ;16Keys.c: 42: if (!PORTBbits.RB4) key = 'A';
  1067   001076  B881               	btfsc	129,4,c	;volatile
  1068   001078  EF40  F008         	goto	u151
  1069   00107C  EF42  F008         	goto	u150
  1070   001080                     u151:
  1071   001080  EF44  F008         	goto	l1124
  1072   001084                     u150:
  1073   001084  0E41               	movlw	65
  1074   001086  6E1D               	movwf	varre_teclas@key^0,c
  1075   001088                     l1124:
  1076                           
  1077                           ;16Keys.c: 43: if (!PORTBbits.RB5) key = 'B';
  1078   001088  BA81               	btfsc	129,5,c	;volatile
  1079   00108A  EF49  F008         	goto	u161
  1080   00108E  EF4B  F008         	goto	u160
  1081   001092                     u161:
  1082   001092  EF4D  F008         	goto	l1128
  1083   001096                     u160:
  1084   001096  0E42               	movlw	66
  1085   001098  6E1D               	movwf	varre_teclas@key^0,c
  1086   00109A                     l1128:
  1087                           
  1088                           ;16Keys.c: 44: if (!PORTBbits.RB6) key = 'C';
  1089   00109A  BC81               	btfsc	129,6,c	;volatile
  1090   00109C  EF52  F008         	goto	u171
  1091   0010A0  EF54  F008         	goto	u170
  1092   0010A4                     u171:
  1093   0010A4  EF56  F008         	goto	l1132
  1094   0010A8                     u170:
  1095   0010A8  0E43               	movlw	67
  1096   0010AA  6E1D               	movwf	varre_teclas@key^0,c
  1097   0010AC                     l1132:
  1098                           
  1099                           ;16Keys.c: 45: if (!PORTBbits.RB7) key = 'D';
  1100   0010AC  BE81               	btfsc	129,7,c	;volatile
  1101   0010AE  EF5B  F008         	goto	u181
  1102   0010B2  EF5D  F008         	goto	u180
  1103   0010B6                     u181:
  1104   0010B6  EF5F  F008         	goto	l1136
  1105   0010BA                     u180:
  1106   0010BA  0E44               	movlw	68
  1107   0010BC  6E1D               	movwf	varre_teclas@key^0,c
  1108   0010BE                     l1136:
  1109                           
  1110                           ;16Keys.c: 46: PORTBbits.RB3 = 1;
  1111   0010BE  8681               	bsf	129,3,c	;volatile
  1112                           
  1113                           ;16Keys.c: 48: return key;
  1114   0010C0  501D               	movf	varre_teclas@key^0,w,c
  1115   0010C2  0012               	return		;funcret
  1116   0010C4                     __end_of_varre_teclas:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _special_char *****************
  1120 ;; Defined at:
  1121 ;;		line 17 in file "../../../Documents/P2/PONG/pong.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  cgram_loc       1    wreg     unsigned char 
  1124 ;;  data            1    6[COMRAM] PTR unsigned char 
  1125 ;;		 -> data2(8), data1(8), 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  cgram_loc       1    7[COMRAM] unsigned char 
  1128 ;;  j               2    8[COMRAM] unsigned int 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         1       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        4 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 3
  1145 ;; This function calls:
  1146 ;;		_lcd_cmd
  1147 ;;		_lcd_dat
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text3
  1154   0015C8                     __ptext3:
  1155                           	callstack 0
  1156   0015C8                     _special_char:
  1157                           	callstack 27
  1158                           
  1159                           ;incstack = 0
  1160                           ;special_char@cgram_loc stored from wreg
  1161   0015C8  6E24               	movwf	special_char@cgram_loc^0,c
  1162   0015CA                     
  1163                           ;pong.c: 18: unsigned int j = 0;
  1164   0015CA  0E00               	movlw	0
  1165   0015CC  6E26               	movwf	(special_char@j+1)^0,c
  1166   0015CE  0E00               	movlw	0
  1167   0015D0  6E25               	movwf	special_char@j^0,c
  1168   0015D2                     
  1169                           ;pong.c: 19: lcd_cmd(cgram_loc);
  1170   0015D2  5024               	movf	special_char@cgram_loc^0,w,c
  1171   0015D4  EC35  F00B         	call	_lcd_cmd
  1172                           
  1173                           ;pong.c: 20: while(j < 8) {
  1174   0015D8  EFF7  F00A         	goto	l1998
  1175   0015DC                     l1994:
  1176                           
  1177                           ;pong.c: 21: lcd_dat(data[j]);
  1178   0015DC  5023               	movf	special_char@data^0,w,c
  1179   0015DE  2425               	addwf	special_char@j^0,w,c
  1180   0015E0  6ED9               	movwf	fsr2l,c
  1181   0015E2  6ADA               	clrf	fsr2h,c
  1182   0015E4  50DF               	movf	indf2,w,c
  1183   0015E6  EC20  F00B         	call	_lcd_dat
  1184   0015EA                     
  1185                           ;pong.c: 22: j++;
  1186   0015EA  4A25               	infsnz	special_char@j^0,f,c
  1187   0015EC  2A26               	incf	(special_char@j+1)^0,f,c
  1188   0015EE                     l1998:
  1189   0015EE  5026               	movf	(special_char@j+1)^0,w,c
  1190   0015F0  E109               	bnz	u720
  1191   0015F2  0E08               	movlw	8
  1192   0015F4  5C25               	subwf	special_char@j^0,w,c
  1193   0015F6  A0D8               	btfss	status,0,c
  1194   0015F8  EF00  F00B         	goto	u721
  1195   0015FC  EF02  F00B         	goto	u720
  1196   001600                     u721:
  1197   001600  EFEE  F00A         	goto	l1994
  1198   001604                     u720:
  1199   001604  0012               	return		;funcret
  1200   001606                     __end_of_special_char:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _print_special_character *****************
  1204 ;; Defined at:
  1205 ;;		line 26 in file "../../../Documents/P2/PONG/pong.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  cgram_loc       1    wreg     unsigned char 
  1208 ;;  lcd_loc         1    8[COMRAM] unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  cgram_loc       1    9[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         1       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        2 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		___awdiv
  1229 ;;		_lcd_cmd
  1230 ;;		_lcd_dat
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text4
  1237   001694                     __ptext4:
  1238                           	callstack 0
  1239   001694                     _print_special_character:
  1240                           	callstack 27
  1241                           
  1242                           ;incstack = 0
  1243                           ;print_special_character@cgram_loc stored from wreg
  1244   001694  6E26               	movwf	print_special_character@cgram_loc^0,c
  1245   001696                     
  1246                           ;pong.c: 27: lcd_cmd(lcd_loc);
  1247   001696  5025               	movf	print_special_character@lcd_loc^0,w,c
  1248   001698  EC35  F00B         	call	_lcd_cmd
  1249                           
  1250                           ;pong.c: 28: lcd_dat((cgram_loc-64)/8);
  1251   00169C  0EC0               	movlw	192
  1252   00169E  2426               	addwf	print_special_character@cgram_loc^0,w,c
  1253   0016A0  6E1D               	movwf	___awdiv@dividend^0,c
  1254   0016A2  6A1E               	clrf	(___awdiv@dividend+1)^0,c
  1255   0016A4  0EFF               	movlw	255
  1256   0016A6  221E               	addwfc	(___awdiv@dividend+1)^0,f,c
  1257   0016A8  0E00               	movlw	0
  1258   0016AA  6E20               	movwf	(___awdiv@divisor+1)^0,c
  1259   0016AC  0E08               	movlw	8
  1260   0016AE  6E1F               	movwf	___awdiv@divisor^0,c
  1261   0016B0  ECF1  F008         	call	___awdiv	;wreg free
  1262   0016B4  501D               	movf	?___awdiv^0,w,c
  1263   0016B6  EC20  F00B         	call	_lcd_dat
  1264   0016BA  0012               	return		;funcret
  1265   0016BC                     __end_of_print_special_character:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function ___awdiv *****************
  1269 ;; Defined at:
  1270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\awdiv.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  dividend        2    0[COMRAM] int 
  1273 ;;  divisor         2    2[COMRAM] int 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  quotient        2    6[COMRAM] int 
  1276 ;;  sign            1    5[COMRAM] unsigned char 
  1277 ;;  counter         1    4[COMRAM] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    0[COMRAM] int 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1287 ;;      Params:         4       0       0       0       0       0       0       0       0
  1288 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1290 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1291 ;;Total ram usage:        8 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_print_special_character
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text5
  1302   0011E2                     __ptext5:
  1303                           	callstack 0
  1304   0011E2                     ___awdiv:
  1305                           	callstack 28
  1306   0011E2  0E00               	movlw	0
  1307   0011E4  6E22               	movwf	___awdiv@sign^0,c
  1308   0011E6  BE20               	btfsc	(___awdiv@divisor+1)^0,7,c
  1309   0011E8  EFFA  F008         	goto	u570
  1310   0011EC  EFF8  F008         	goto	u571
  1311   0011F0                     u571:
  1312   0011F0  EF00  F009         	goto	l1882
  1313   0011F4                     u570:
  1314   0011F4  6C1F               	negf	___awdiv@divisor^0,c
  1315   0011F6  1E20               	comf	(___awdiv@divisor+1)^0,f,c
  1316   0011F8  B0D8               	btfsc	status,0,c
  1317   0011FA  2A20               	incf	(___awdiv@divisor+1)^0,f,c
  1318   0011FC  0E01               	movlw	1
  1319   0011FE  6E22               	movwf	___awdiv@sign^0,c
  1320   001200                     l1882:
  1321   001200  BE1E               	btfsc	(___awdiv@dividend+1)^0,7,c
  1322   001202  EF07  F009         	goto	u580
  1323   001206  EF05  F009         	goto	u581
  1324   00120A                     u581:
  1325   00120A  EF0D  F009         	goto	l1888
  1326   00120E                     u580:
  1327   00120E  6C1D               	negf	___awdiv@dividend^0,c
  1328   001210  1E1E               	comf	(___awdiv@dividend+1)^0,f,c
  1329   001212  B0D8               	btfsc	status,0,c
  1330   001214  2A1E               	incf	(___awdiv@dividend+1)^0,f,c
  1331   001216  0E01               	movlw	1
  1332   001218  1A22               	xorwf	___awdiv@sign^0,f,c
  1333   00121A                     l1888:
  1334   00121A  0E00               	movlw	0
  1335   00121C  6E24               	movwf	(___awdiv@quotient+1)^0,c
  1336   00121E  0E00               	movlw	0
  1337   001220  6E23               	movwf	___awdiv@quotient^0,c
  1338   001222  501F               	movf	___awdiv@divisor^0,w,c
  1339   001224  1020               	iorwf	(___awdiv@divisor+1)^0,w,c
  1340   001226  B4D8               	btfsc	status,2,c
  1341   001228  EF18  F009         	goto	u591
  1342   00122C  EF1A  F009         	goto	u590
  1343   001230                     u591:
  1344   001230  EF42  F009         	goto	l1910
  1345   001234                     u590:
  1346   001234  0E01               	movlw	1
  1347   001236  6E21               	movwf	___awdiv@counter^0,c
  1348   001238  EF22  F009         	goto	l1896
  1349   00123C                     l1894:
  1350   00123C  90D8               	bcf	status,0,c
  1351   00123E  361F               	rlcf	___awdiv@divisor^0,f,c
  1352   001240  3620               	rlcf	(___awdiv@divisor+1)^0,f,c
  1353   001242  2A21               	incf	___awdiv@counter^0,f,c
  1354   001244                     l1896:
  1355   001244  AE20               	btfss	(___awdiv@divisor+1)^0,7,c
  1356   001246  EF27  F009         	goto	u601
  1357   00124A  EF29  F009         	goto	u600
  1358   00124E                     u601:
  1359   00124E  EF1E  F009         	goto	l1894
  1360   001252                     u600:
  1361   001252                     l1898:
  1362   001252  90D8               	bcf	status,0,c
  1363   001254  3623               	rlcf	___awdiv@quotient^0,f,c
  1364   001256  3624               	rlcf	(___awdiv@quotient+1)^0,f,c
  1365   001258  501F               	movf	___awdiv@divisor^0,w,c
  1366   00125A  5C1D               	subwf	___awdiv@dividend^0,w,c
  1367   00125C  5020               	movf	(___awdiv@divisor+1)^0,w,c
  1368   00125E  581E               	subwfb	(___awdiv@dividend+1)^0,w,c
  1369   001260  A0D8               	btfss	status,0,c
  1370   001262  EF35  F009         	goto	u611
  1371   001266  EF37  F009         	goto	u610
  1372   00126A                     u611:
  1373   00126A  EF3C  F009         	goto	l1906
  1374   00126E                     u610:
  1375   00126E  501F               	movf	___awdiv@divisor^0,w,c
  1376   001270  5E1D               	subwf	___awdiv@dividend^0,f,c
  1377   001272  5020               	movf	(___awdiv@divisor+1)^0,w,c
  1378   001274  5A1E               	subwfb	(___awdiv@dividend+1)^0,f,c
  1379   001276  8023               	bsf	___awdiv@quotient^0,0,c
  1380   001278                     l1906:
  1381   001278  90D8               	bcf	status,0,c
  1382   00127A  3220               	rrcf	(___awdiv@divisor+1)^0,f,c
  1383   00127C  321F               	rrcf	___awdiv@divisor^0,f,c
  1384   00127E  2E21               	decfsz	___awdiv@counter^0,f,c
  1385   001280  EF29  F009         	goto	l1898
  1386   001284                     l1910:
  1387   001284  5022               	movf	___awdiv@sign^0,w,c
  1388   001286  B4D8               	btfsc	status,2,c
  1389   001288  EF48  F009         	goto	u621
  1390   00128C  EF4A  F009         	goto	u620
  1391   001290                     u621:
  1392   001290  EF4E  F009         	goto	l1914
  1393   001294                     u620:
  1394   001294  6C23               	negf	___awdiv@quotient^0,c
  1395   001296  1E24               	comf	(___awdiv@quotient+1)^0,f,c
  1396   001298  B0D8               	btfsc	status,0,c
  1397   00129A  2A24               	incf	(___awdiv@quotient+1)^0,f,c
  1398   00129C                     l1914:
  1399   00129C  C023  F01D         	movff	___awdiv@quotient,?___awdiv
  1400   0012A0  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
  1401   0012A4  0012               	return		;funcret
  1402   0012A6                     __end_of___awdiv:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _lcd_str *****************
  1406 ;; Defined at:
  1407 ;;		line 52 in file "../../../Documents/P2/PONG/lcd.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  str             2   15[COMRAM] PTR const unsigned char 
  1410 ;;		 -> STR_3(18), STR_2(18), STR_1(2), main@buff(3), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  i               1   19[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         2       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        5 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 3
  1429 ;; This function calls:
  1430 ;;		_lcd_dat
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text6
  1437   0012A6                     __ptext6:
  1438                           	callstack 0
  1439   0012A6                     _lcd_str:
  1440                           	callstack 27
  1441   0012A6                     
  1442                           ;lcd.c: 54: unsigned char i=0;
  1443   0012A6  0E00               	movlw	0
  1444   0012A8  6E30               	movwf	lcd_str@i^0,c
  1445                           
  1446                           ;lcd.c: 56: while(str[i] != 0 )
  1447   0012AA  EF70  F009         	goto	l1968
  1448   0012AE                     l1964:
  1449                           
  1450                           ;lcd.c: 57: {;lcd.c: 58: lcd_dat(str[i]);
  1451   0012AE  5030               	movf	lcd_str@i^0,w,c
  1452   0012B0  242C               	addwf	lcd_str@str^0,w,c
  1453   0012B2  6E2E               	movwf	??_lcd_str^0,c
  1454   0012B4  0E00               	movlw	0
  1455   0012B6  202D               	addwfc	(lcd_str@str+1)^0,w,c
  1456   0012B8  6E2F               	movwf	(??_lcd_str+1)^0,c
  1457   0012BA  C02E  FFF6         	movff	??_lcd_str,tblptrl
  1458   0012BE  C02F  FFF7         	movff	??_lcd_str+1,tblptrh
  1459   0012C2  6AF8               	clrf	tblptru,c
  1460   0012C4  0E07               	movlw	(high __ramtop+-1)
  1461   0012C6  64F7               	cpfsgt	tblptrh,c
  1462   0012C8  D003               	bra	u697
  1463   0012CA  0008               	tblrd		*
  1464   0012CC  50F5               	movf	tablat,w,c
  1465   0012CE  D005               	bra	u690
  1466   0012D0                     u697:
  1467   0012D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1468   0012D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1469   0012D8  50EF               	movf	indf0,w,c
  1470   0012DA                     u690:
  1471   0012DA  EC20  F00B         	call	_lcd_dat
  1472   0012DE                     
  1473                           ;lcd.c: 59: i++;
  1474   0012DE  2A30               	incf	lcd_str@i^0,f,c
  1475   0012E0                     l1968:
  1476   0012E0  5030               	movf	lcd_str@i^0,w,c
  1477   0012E2  242C               	addwf	lcd_str@str^0,w,c
  1478   0012E4  6E2E               	movwf	??_lcd_str^0,c
  1479   0012E6  0E00               	movlw	0
  1480   0012E8  202D               	addwfc	(lcd_str@str+1)^0,w,c
  1481   0012EA  6E2F               	movwf	(??_lcd_str+1)^0,c
  1482   0012EC  C02E  FFF6         	movff	??_lcd_str,tblptrl
  1483   0012F0  C02F  FFF7         	movff	??_lcd_str+1,tblptrh
  1484   0012F4  6AF8               	clrf	tblptru,c
  1485   0012F6  0E07               	movlw	(high __ramtop+-1)
  1486   0012F8  64F7               	cpfsgt	tblptrh,c
  1487   0012FA  D003               	bra	u707
  1488   0012FC  0008               	tblrd		*
  1489   0012FE  50F5               	movf	tablat,w,c
  1490   001300  D005               	bra	u700
  1491   001302                     u707:
  1492   001302  CFF6 FFE9          	movff	tblptrl,fsr0l
  1493   001306  CFF7 FFEA          	movff	tblptrh,fsr0h
  1494   00130A  50EF               	movf	indf0,w,c
  1495   00130C                     u700:
  1496   00130C  0900               	iorlw	0
  1497   00130E  A4D8               	btfss	status,2,c
  1498   001310  EF8C  F009         	goto	u711
  1499   001314  EF8E  F009         	goto	u710
  1500   001318                     u711:
  1501   001318  EF57  F009         	goto	l1964
  1502   00131C                     u710:
  1503   00131C  0012               	return		;funcret
  1504   00131E                     __end_of_lcd_str:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _lcd_dat *****************
  1508 ;; Defined at:
  1509 ;;		line 21 in file "../../../Documents/P2/PONG/lcd.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  val             1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  val             1    5[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 2
  1530 ;; This function calls:
  1531 ;;		_atraso_ms
  1532 ;;		_lcd_wr
  1533 ;; This function is called by:
  1534 ;;		_lcd_str
  1535 ;;		_special_char
  1536 ;;		_print_special_character
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text7
  1541   001640                     __ptext7:
  1542                           	callstack 0
  1543   001640                     _lcd_dat:
  1544                           	callstack 27
  1545                           
  1546                           ;incstack = 0
  1547                           ;lcd_dat@val stored from wreg
  1548   001640  6E22               	movwf	lcd_dat@val^0,c
  1549   001642                     
  1550                           ;lcd.c: 23: PORTEbits.RE1=1;
  1551   001642  8284               	bsf	132,1,c	;volatile
  1552   001644                     
  1553                           ;lcd.c: 24: lcd_wr(val);
  1554   001644  5022               	movf	lcd_dat@val^0,w,c
  1555   001646  EC73  F00B         	call	_lcd_wr
  1556   00164A                     
  1557                           ;lcd.c: 25: PORTEbits.RE0=1;
  1558   00164A  8084               	bsf	132,0,c	;volatile
  1559   00164C                     
  1560                           ;lcd.c: 26: atraso_ms(4);
  1561   00164C  0E00               	movlw	0
  1562   00164E  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  1563   001650  0E04               	movlw	4
  1564   001652  6E1D               	movwf	atraso_ms@valor^0,c
  1565   001654  ECC0  F00A         	call	_atraso_ms	;wreg free
  1566   001658                     
  1567                           ;lcd.c: 27: PORTEbits.RE1=0;
  1568   001658  9284               	bcf	132,1,c	;volatile
  1569   00165A                     
  1570                           ;lcd.c: 28: atraso_ms(4);
  1571   00165A  0E00               	movlw	0
  1572   00165C  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  1573   00165E  0E04               	movlw	4
  1574   001660  6E1D               	movwf	atraso_ms@valor^0,c
  1575   001662  ECC0  F00A         	call	_atraso_ms	;wreg free
  1576   001666                     
  1577                           ;lcd.c: 29: PORTEbits.RE1=1;
  1578   001666  8284               	bsf	132,1,c	;volatile
  1579   001668  0012               	return		;funcret
  1580   00166A                     __end_of_lcd_dat:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _lcd_set_cursor *****************
  1584 ;; Defined at:
  1585 ;;		line 63 in file "../../../Documents/P2/PONG/lcd.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  col             1    wreg     unsigned char 
  1588 ;;  row             1    6[COMRAM] unsigned char 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  col             1    7[COMRAM] unsigned char 
  1591 ;;  address         1    8[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         1       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        3 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 3
  1608 ;; This function calls:
  1609 ;;		_lcd_cmd
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text8
  1616   001528                     __ptext8:
  1617                           	callstack 0
  1618   001528                     _lcd_set_cursor:
  1619                           	callstack 27
  1620                           
  1621                           ;incstack = 0
  1622                           ;lcd_set_cursor@col stored from wreg
  1623   001528  6E24               	movwf	lcd_set_cursor@col^0,c
  1624   00152A                     
  1625                           ;lcd.c: 65: unsigned char address;;lcd.c: 67: switch(row)
  1626   00152A  EFA7  F00A         	goto	l1984
  1627   00152E                     l1972:
  1628                           
  1629                           ;lcd.c: 70: address = 0x80;
  1630   00152E  0E80               	movlw	128
  1631   001530  6E25               	movwf	lcd_set_cursor@address^0,c
  1632                           
  1633                           ;lcd.c: 71: break;
  1634   001532  EFBA  F00A         	goto	l1986
  1635   001536                     l1974:
  1636                           
  1637                           ;lcd.c: 73: address = 0xC0;
  1638   001536  0EC0               	movlw	192
  1639   001538  6E25               	movwf	lcd_set_cursor@address^0,c
  1640                           
  1641                           ;lcd.c: 74: break;
  1642   00153A  EFBA  F00A         	goto	l1986
  1643   00153E                     l1976:
  1644                           
  1645                           ;lcd.c: 76: address = 0x94;
  1646   00153E  0E94               	movlw	148
  1647   001540  6E25               	movwf	lcd_set_cursor@address^0,c
  1648                           
  1649                           ;lcd.c: 77: break;
  1650   001542  EFBA  F00A         	goto	l1986
  1651   001546                     l1978:
  1652                           
  1653                           ;lcd.c: 79: address = 0xD4;
  1654   001546  0ED4               	movlw	212
  1655   001548  6E25               	movwf	lcd_set_cursor@address^0,c
  1656                           
  1657                           ;lcd.c: 80: break;
  1658   00154A  EFBA  F00A         	goto	l1986
  1659   00154E                     l1984:
  1660   00154E  5023               	movf	lcd_set_cursor@row^0,w,c
  1661                           
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 4, Range of values is 1 to 4
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte           13     7 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668   001550  0A01               	xorlw	1	; case 1
  1669   001552  B4D8               	btfsc	status,2,c
  1670   001554  EF97  F00A         	goto	l1972
  1671   001558  0A03               	xorlw	3	; case 2
  1672   00155A  B4D8               	btfsc	status,2,c
  1673   00155C  EF9B  F00A         	goto	l1974
  1674   001560  0A01               	xorlw	1	; case 3
  1675   001562  B4D8               	btfsc	status,2,c
  1676   001564  EF9F  F00A         	goto	l1976
  1677   001568  0A07               	xorlw	7	; case 4
  1678   00156A  B4D8               	btfsc	status,2,c
  1679   00156C  EFA3  F00A         	goto	l1978
  1680   001570  EF97  F00A         	goto	l1972
  1681   001574                     l1986:
  1682                           
  1683                           ;lcd.c: 85: address += (col - 1);
  1684   001574  0424               	decf	lcd_set_cursor@col^0,w,c
  1685   001576  2625               	addwf	lcd_set_cursor@address^0,f,c
  1686   001578                     
  1687                           ;lcd.c: 86: lcd_cmd(address);
  1688   001578  5025               	movf	lcd_set_cursor@address^0,w,c
  1689   00157A  EC35  F00B         	call	_lcd_cmd
  1690   00157E  0012               	return		;funcret
  1691   001580                     __end_of_lcd_set_cursor:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _lcd_pos *****************
  1695 ;; Defined at:
  1696 ;;		line 33 in file "../../../Documents/P2/PONG/pong.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  line            2    0[COMRAM] int 
  1699 ;;  col             2    2[COMRAM] int 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         4       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        6 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text9
  1726   000816                     __ptext9:
  1727                           	callstack 0
  1728   000816                     _lcd_pos:
  1729                           	callstack 29
  1730   000816                     
  1731                           ;pong.c: 35: switch (line) {
  1732   000816  EF75  F006         	goto	l2342
  1733   00081A                     l2004:
  1734   00081A  0E80               	movlw	128
  1735   00081C  EF94  F006         	goto	l125
  1736   000820                     l2008:
  1737   000820  0E81               	movlw	129
  1738   000822  EF94  F006         	goto	l125
  1739   000826                     l2012:
  1740   000826  0E82               	movlw	130
  1741   000828  EF94  F006         	goto	l125
  1742   00082C                     l2016:
  1743   00082C  0E83               	movlw	131
  1744   00082E  EF94  F006         	goto	l125
  1745   000832                     l2020:
  1746   000832  0E84               	movlw	132
  1747   000834  EF94  F006         	goto	l125
  1748   000838                     l2024:
  1749   000838  0E85               	movlw	133
  1750   00083A  EF94  F006         	goto	l125
  1751   00083E                     l2028:
  1752   00083E  0E86               	movlw	134
  1753   000840  EF94  F006         	goto	l125
  1754   000844                     l2032:
  1755   000844  0E87               	movlw	135
  1756   000846  EF94  F006         	goto	l125
  1757   00084A                     l2036:
  1758   00084A  0E88               	movlw	136
  1759   00084C  EF94  F006         	goto	l125
  1760   000850                     l2040:
  1761   000850  0E89               	movlw	137
  1762   000852  EF94  F006         	goto	l125
  1763   000856                     l2044:
  1764   000856  0E8A               	movlw	138
  1765   000858  EF94  F006         	goto	l125
  1766   00085C                     l2048:
  1767   00085C  0E8B               	movlw	139
  1768   00085E  EF94  F006         	goto	l125
  1769   000862                     l2052:
  1770   000862  0E8C               	movlw	140
  1771   000864  EF94  F006         	goto	l125
  1772   000868                     l2056:
  1773   000868  0E8D               	movlw	141
  1774   00086A  EF94  F006         	goto	l125
  1775   00086E                     l2060:
  1776   00086E  0E8E               	movlw	142
  1777   000870  EF94  F006         	goto	l125
  1778   000874                     l2064:
  1779   000874  0E8F               	movlw	143
  1780   000876  EF94  F006         	goto	l125
  1781   00087A                     l2068:
  1782   00087A  0E90               	movlw	144
  1783   00087C  EF94  F006         	goto	l125
  1784   000880                     l2072:
  1785   000880  0E91               	movlw	145
  1786   000882  EF94  F006         	goto	l125
  1787   000886                     l2076:
  1788   000886  0E92               	movlw	146
  1789   000888  EF94  F006         	goto	l125
  1790   00088C                     l2080:
  1791   00088C  0E93               	movlw	147
  1792   00088E  EF94  F006         	goto	l125
  1793   000892                     l2086:
  1794   000892  C01F  F021         	movff	lcd_pos@col,??_lcd_pos
  1795   000896  C020  F022         	movff	lcd_pos@col+1,??_lcd_pos+1
  1796                           
  1797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 1, Range of values is 0 to 0
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            4     3 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804   00089A  5022               	movf	(??_lcd_pos+1)^0,w,c
  1805   00089C  0A00               	xorlw	0	; case 0
  1806   00089E  B4D8               	btfsc	status,2,c
  1807   0008A0  EF54  F004         	goto	l2458
  1808   0008A4  EF93  F006         	goto	l2344
  1809   0008A8                     l2458:
  1810                           
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 20, Range of values is 1 to 20
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte           61    31 (average)
  1816                           ;	Chosen strategy is simple_byte
  1817   0008A8  5021               	movf	??_lcd_pos^0,w,c
  1818   0008AA  0A01               	xorlw	1	; case 1
  1819   0008AC  B4D8               	btfsc	status,2,c
  1820   0008AE  EF0D  F004         	goto	l2004
  1821   0008B2  0A03               	xorlw	3	; case 2
  1822   0008B4  B4D8               	btfsc	status,2,c
  1823   0008B6  EF10  F004         	goto	l2008
  1824   0008BA  0A01               	xorlw	1	; case 3
  1825   0008BC  B4D8               	btfsc	status,2,c
  1826   0008BE  EF13  F004         	goto	l2012
  1827   0008C2  0A07               	xorlw	7	; case 4
  1828   0008C4  B4D8               	btfsc	status,2,c
  1829   0008C6  EF16  F004         	goto	l2016
  1830   0008CA  0A01               	xorlw	1	; case 5
  1831   0008CC  B4D8               	btfsc	status,2,c
  1832   0008CE  EF19  F004         	goto	l2020
  1833   0008D2  0A03               	xorlw	3	; case 6
  1834   0008D4  B4D8               	btfsc	status,2,c
  1835   0008D6  EF1C  F004         	goto	l2024
  1836   0008DA  0A01               	xorlw	1	; case 7
  1837   0008DC  B4D8               	btfsc	status,2,c
  1838   0008DE  EF1F  F004         	goto	l2028
  1839   0008E2  0A0F               	xorlw	15	; case 8
  1840   0008E4  B4D8               	btfsc	status,2,c
  1841   0008E6  EF22  F004         	goto	l2032
  1842   0008EA  0A01               	xorlw	1	; case 9
  1843   0008EC  B4D8               	btfsc	status,2,c
  1844   0008EE  EF25  F004         	goto	l2036
  1845   0008F2  0A03               	xorlw	3	; case 10
  1846   0008F4  B4D8               	btfsc	status,2,c
  1847   0008F6  EF28  F004         	goto	l2040
  1848   0008FA  0A01               	xorlw	1	; case 11
  1849   0008FC  B4D8               	btfsc	status,2,c
  1850   0008FE  EF2B  F004         	goto	l2044
  1851   000902  0A07               	xorlw	7	; case 12
  1852   000904  B4D8               	btfsc	status,2,c
  1853   000906  EF2E  F004         	goto	l2048
  1854   00090A  0A01               	xorlw	1	; case 13
  1855   00090C  B4D8               	btfsc	status,2,c
  1856   00090E  EF31  F004         	goto	l2052
  1857   000912  0A03               	xorlw	3	; case 14
  1858   000914  B4D8               	btfsc	status,2,c
  1859   000916  EF34  F004         	goto	l2056
  1860   00091A  0A01               	xorlw	1	; case 15
  1861   00091C  B4D8               	btfsc	status,2,c
  1862   00091E  EF37  F004         	goto	l2060
  1863   000922  0A1F               	xorlw	31	; case 16
  1864   000924  B4D8               	btfsc	status,2,c
  1865   000926  EF3A  F004         	goto	l2064
  1866   00092A  0A01               	xorlw	1	; case 17
  1867   00092C  B4D8               	btfsc	status,2,c
  1868   00092E  EF3D  F004         	goto	l2068
  1869   000932  0A03               	xorlw	3	; case 18
  1870   000934  B4D8               	btfsc	status,2,c
  1871   000936  EF40  F004         	goto	l2072
  1872   00093A  0A01               	xorlw	1	; case 19
  1873   00093C  B4D8               	btfsc	status,2,c
  1874   00093E  EF43  F004         	goto	l2076
  1875   000942  0A07               	xorlw	7	; case 20
  1876   000944  B4D8               	btfsc	status,2,c
  1877   000946  EF46  F004         	goto	l2080
  1878   00094A  EF93  F006         	goto	l2344
  1879   00094E                     l2088:
  1880   00094E  0EC0               	movlw	192
  1881   000950  EF94  F006         	goto	l125
  1882   000954                     l2092:
  1883   000954  0EC1               	movlw	193
  1884   000956  EF94  F006         	goto	l125
  1885   00095A                     l2096:
  1886   00095A  0EC2               	movlw	194
  1887   00095C  EF94  F006         	goto	l125
  1888   000960                     l2100:
  1889   000960  0EC3               	movlw	195
  1890   000962  EF94  F006         	goto	l125
  1891   000966                     l2104:
  1892   000966  0EC4               	movlw	196
  1893   000968  EF94  F006         	goto	l125
  1894   00096C                     l2108:
  1895   00096C  0EC5               	movlw	197
  1896   00096E  EF94  F006         	goto	l125
  1897   000972                     l2112:
  1898   000972  0EC6               	movlw	198
  1899   000974  EF94  F006         	goto	l125
  1900   000978                     l2116:
  1901   000978  0EC7               	movlw	199
  1902   00097A  EF94  F006         	goto	l125
  1903   00097E                     l2120:
  1904   00097E  0EC8               	movlw	200
  1905   000980  EF94  F006         	goto	l125
  1906   000984                     l2124:
  1907   000984  0EC9               	movlw	201
  1908   000986  EF94  F006         	goto	l125
  1909   00098A                     l2128:
  1910   00098A  0ECA               	movlw	202
  1911   00098C  EF94  F006         	goto	l125
  1912   000990                     l2132:
  1913   000990  0ECB               	movlw	203
  1914   000992  EF94  F006         	goto	l125
  1915   000996                     l2136:
  1916   000996  0ECC               	movlw	204
  1917   000998  EF94  F006         	goto	l125
  1918   00099C                     l2140:
  1919   00099C  0ECD               	movlw	205
  1920   00099E  EF94  F006         	goto	l125
  1921   0009A2                     l2144:
  1922   0009A2  0ECE               	movlw	206
  1923   0009A4  EF94  F006         	goto	l125
  1924   0009A8                     l2148:
  1925   0009A8  0ECF               	movlw	207
  1926   0009AA  EF94  F006         	goto	l125
  1927   0009AE                     l2152:
  1928   0009AE  0ED0               	movlw	208
  1929   0009B0  EF94  F006         	goto	l125
  1930   0009B4                     l2156:
  1931   0009B4  0ED1               	movlw	209
  1932   0009B6  EF94  F006         	goto	l125
  1933   0009BA                     l2160:
  1934   0009BA  0ED2               	movlw	210
  1935   0009BC  EF94  F006         	goto	l125
  1936   0009C0                     l2164:
  1937   0009C0  0ED3               	movlw	211
  1938   0009C2  EF94  F006         	goto	l125
  1939   0009C6                     l2170:
  1940   0009C6  C01F  F021         	movff	lcd_pos@col,??_lcd_pos
  1941   0009CA  C020  F022         	movff	lcd_pos@col+1,??_lcd_pos+1
  1942                           
  1943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1944                           ; Switch size 1, requested type "simple"
  1945                           ; Number of cases is 1, Range of values is 0 to 0
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte            4     3 (average)
  1949                           ;	Chosen strategy is simple_byte
  1950   0009CE  5022               	movf	(??_lcd_pos+1)^0,w,c
  1951   0009D0  0A00               	xorlw	0	; case 0
  1952   0009D2  B4D8               	btfsc	status,2,c
  1953   0009D4  EFEE  F004         	goto	l2460
  1954   0009D8  EF93  F006         	goto	l2344
  1955   0009DC                     l2460:
  1956                           
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 20, Range of values is 1 to 20
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte           61    31 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963   0009DC  5021               	movf	??_lcd_pos^0,w,c
  1964   0009DE  0A01               	xorlw	1	; case 1
  1965   0009E0  B4D8               	btfsc	status,2,c
  1966   0009E2  EFA7  F004         	goto	l2088
  1967   0009E6  0A03               	xorlw	3	; case 2
  1968   0009E8  B4D8               	btfsc	status,2,c
  1969   0009EA  EFAA  F004         	goto	l2092
  1970   0009EE  0A01               	xorlw	1	; case 3
  1971   0009F0  B4D8               	btfsc	status,2,c
  1972   0009F2  EFAD  F004         	goto	l2096
  1973   0009F6  0A07               	xorlw	7	; case 4
  1974   0009F8  B4D8               	btfsc	status,2,c
  1975   0009FA  EFB0  F004         	goto	l2100
  1976   0009FE  0A01               	xorlw	1	; case 5
  1977   000A00  B4D8               	btfsc	status,2,c
  1978   000A02  EFB3  F004         	goto	l2104
  1979   000A06  0A03               	xorlw	3	; case 6
  1980   000A08  B4D8               	btfsc	status,2,c
  1981   000A0A  EFB6  F004         	goto	l2108
  1982   000A0E  0A01               	xorlw	1	; case 7
  1983   000A10  B4D8               	btfsc	status,2,c
  1984   000A12  EFB9  F004         	goto	l2112
  1985   000A16  0A0F               	xorlw	15	; case 8
  1986   000A18  B4D8               	btfsc	status,2,c
  1987   000A1A  EFBC  F004         	goto	l2116
  1988   000A1E  0A01               	xorlw	1	; case 9
  1989   000A20  B4D8               	btfsc	status,2,c
  1990   000A22  EFBF  F004         	goto	l2120
  1991   000A26  0A03               	xorlw	3	; case 10
  1992   000A28  B4D8               	btfsc	status,2,c
  1993   000A2A  EFC2  F004         	goto	l2124
  1994   000A2E  0A01               	xorlw	1	; case 11
  1995   000A30  B4D8               	btfsc	status,2,c
  1996   000A32  EFC5  F004         	goto	l2128
  1997   000A36  0A07               	xorlw	7	; case 12
  1998   000A38  B4D8               	btfsc	status,2,c
  1999   000A3A  EFC8  F004         	goto	l2132
  2000   000A3E  0A01               	xorlw	1	; case 13
  2001   000A40  B4D8               	btfsc	status,2,c
  2002   000A42  EFCB  F004         	goto	l2136
  2003   000A46  0A03               	xorlw	3	; case 14
  2004   000A48  B4D8               	btfsc	status,2,c
  2005   000A4A  EFCE  F004         	goto	l2140
  2006   000A4E  0A01               	xorlw	1	; case 15
  2007   000A50  B4D8               	btfsc	status,2,c
  2008   000A52  EFD1  F004         	goto	l2144
  2009   000A56  0A1F               	xorlw	31	; case 16
  2010   000A58  B4D8               	btfsc	status,2,c
  2011   000A5A  EFD4  F004         	goto	l2148
  2012   000A5E  0A01               	xorlw	1	; case 17
  2013   000A60  B4D8               	btfsc	status,2,c
  2014   000A62  EFD7  F004         	goto	l2152
  2015   000A66  0A03               	xorlw	3	; case 18
  2016   000A68  B4D8               	btfsc	status,2,c
  2017   000A6A  EFDA  F004         	goto	l2156
  2018   000A6E  0A01               	xorlw	1	; case 19
  2019   000A70  B4D8               	btfsc	status,2,c
  2020   000A72  EFDD  F004         	goto	l2160
  2021   000A76  0A07               	xorlw	7	; case 20
  2022   000A78  B4D8               	btfsc	status,2,c
  2023   000A7A  EFE0  F004         	goto	l2164
  2024   000A7E  EF93  F006         	goto	l2344
  2025   000A82                     l2172:
  2026   000A82  0E94               	movlw	148
  2027   000A84  EF94  F006         	goto	l125
  2028   000A88                     l2176:
  2029   000A88  0E95               	movlw	149
  2030   000A8A  EF94  F006         	goto	l125
  2031   000A8E                     l2180:
  2032   000A8E  0E96               	movlw	150
  2033   000A90  EF94  F006         	goto	l125
  2034   000A94                     l2184:
  2035   000A94  0E97               	movlw	151
  2036   000A96  EF94  F006         	goto	l125
  2037   000A9A                     l2188:
  2038   000A9A  0E98               	movlw	152
  2039   000A9C  EF94  F006         	goto	l125
  2040   000AA0                     l2192:
  2041   000AA0  0E99               	movlw	153
  2042   000AA2  EF94  F006         	goto	l125
  2043   000AA6                     l2196:
  2044   000AA6  0E9A               	movlw	154
  2045   000AA8  EF94  F006         	goto	l125
  2046   000AAC                     l2200:
  2047   000AAC  0E9B               	movlw	155
  2048   000AAE  EF94  F006         	goto	l125
  2049   000AB2                     l2204:
  2050   000AB2  0E9C               	movlw	156
  2051   000AB4  EF94  F006         	goto	l125
  2052   000AB8                     l2208:
  2053   000AB8  0E9D               	movlw	157
  2054   000ABA  EF94  F006         	goto	l125
  2055   000ABE                     l2212:
  2056   000ABE  0E9E               	movlw	158
  2057   000AC0  EF94  F006         	goto	l125
  2058   000AC4                     l2216:
  2059   000AC4  0E9F               	movlw	159
  2060   000AC6  EF94  F006         	goto	l125
  2061   000ACA                     l2220:
  2062   000ACA  0EA0               	movlw	160
  2063   000ACC  EF94  F006         	goto	l125
  2064   000AD0                     l2224:
  2065   000AD0  0EA1               	movlw	161
  2066   000AD2  EF94  F006         	goto	l125
  2067   000AD6                     l2228:
  2068   000AD6  0EA2               	movlw	162
  2069   000AD8  EF94  F006         	goto	l125
  2070   000ADC                     l2232:
  2071   000ADC  0EA3               	movlw	163
  2072   000ADE  EF94  F006         	goto	l125
  2073   000AE2                     l2236:
  2074   000AE2  0EA4               	movlw	164
  2075   000AE4  EF94  F006         	goto	l125
  2076   000AE8                     l2240:
  2077   000AE8  0EA5               	movlw	165
  2078   000AEA  EF94  F006         	goto	l125
  2079   000AEE                     l2244:
  2080   000AEE  0EA6               	movlw	166
  2081   000AF0  EF94  F006         	goto	l125
  2082   000AF4                     l2248:
  2083   000AF4  0EA7               	movlw	167
  2084   000AF6  EF94  F006         	goto	l125
  2085   000AFA                     l2254:
  2086   000AFA  C01F  F021         	movff	lcd_pos@col,??_lcd_pos
  2087   000AFE  C020  F022         	movff	lcd_pos@col+1,??_lcd_pos+1
  2088                           
  2089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2090                           ; Switch size 1, requested type "simple"
  2091                           ; Number of cases is 1, Range of values is 0 to 0
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte            4     3 (average)
  2095                           ;	Chosen strategy is simple_byte
  2096   000B02  5022               	movf	(??_lcd_pos+1)^0,w,c
  2097   000B04  0A00               	xorlw	0	; case 0
  2098   000B06  B4D8               	btfsc	status,2,c
  2099   000B08  EF88  F005         	goto	l2462
  2100   000B0C  EF93  F006         	goto	l2344
  2101   000B10                     l2462:
  2102                           
  2103                           ; Switch size 1, requested type "simple"
  2104                           ; Number of cases is 20, Range of values is 1 to 20
  2105                           ; switch strategies available:
  2106                           ; Name         Instructions Cycles
  2107                           ; simple_byte           61    31 (average)
  2108                           ;	Chosen strategy is simple_byte
  2109   000B10  5021               	movf	??_lcd_pos^0,w,c
  2110   000B12  0A01               	xorlw	1	; case 1
  2111   000B14  B4D8               	btfsc	status,2,c
  2112   000B16  EF41  F005         	goto	l2172
  2113   000B1A  0A03               	xorlw	3	; case 2
  2114   000B1C  B4D8               	btfsc	status,2,c
  2115   000B1E  EF44  F005         	goto	l2176
  2116   000B22  0A01               	xorlw	1	; case 3
  2117   000B24  B4D8               	btfsc	status,2,c
  2118   000B26  EF47  F005         	goto	l2180
  2119   000B2A  0A07               	xorlw	7	; case 4
  2120   000B2C  B4D8               	btfsc	status,2,c
  2121   000B2E  EF4A  F005         	goto	l2184
  2122   000B32  0A01               	xorlw	1	; case 5
  2123   000B34  B4D8               	btfsc	status,2,c
  2124   000B36  EF4D  F005         	goto	l2188
  2125   000B3A  0A03               	xorlw	3	; case 6
  2126   000B3C  B4D8               	btfsc	status,2,c
  2127   000B3E  EF50  F005         	goto	l2192
  2128   000B42  0A01               	xorlw	1	; case 7
  2129   000B44  B4D8               	btfsc	status,2,c
  2130   000B46  EF53  F005         	goto	l2196
  2131   000B4A  0A0F               	xorlw	15	; case 8
  2132   000B4C  B4D8               	btfsc	status,2,c
  2133   000B4E  EF56  F005         	goto	l2200
  2134   000B52  0A01               	xorlw	1	; case 9
  2135   000B54  B4D8               	btfsc	status,2,c
  2136   000B56  EF59  F005         	goto	l2204
  2137   000B5A  0A03               	xorlw	3	; case 10
  2138   000B5C  B4D8               	btfsc	status,2,c
  2139   000B5E  EF5C  F005         	goto	l2208
  2140   000B62  0A01               	xorlw	1	; case 11
  2141   000B64  B4D8               	btfsc	status,2,c
  2142   000B66  EF5F  F005         	goto	l2212
  2143   000B6A  0A07               	xorlw	7	; case 12
  2144   000B6C  B4D8               	btfsc	status,2,c
  2145   000B6E  EF62  F005         	goto	l2216
  2146   000B72  0A01               	xorlw	1	; case 13
  2147   000B74  B4D8               	btfsc	status,2,c
  2148   000B76  EF65  F005         	goto	l2220
  2149   000B7A  0A03               	xorlw	3	; case 14
  2150   000B7C  B4D8               	btfsc	status,2,c
  2151   000B7E  EF68  F005         	goto	l2224
  2152   000B82  0A01               	xorlw	1	; case 15
  2153   000B84  B4D8               	btfsc	status,2,c
  2154   000B86  EF6B  F005         	goto	l2228
  2155   000B8A  0A1F               	xorlw	31	; case 16
  2156   000B8C  B4D8               	btfsc	status,2,c
  2157   000B8E  EF6E  F005         	goto	l2232
  2158   000B92  0A01               	xorlw	1	; case 17
  2159   000B94  B4D8               	btfsc	status,2,c
  2160   000B96  EF71  F005         	goto	l2236
  2161   000B9A  0A03               	xorlw	3	; case 18
  2162   000B9C  B4D8               	btfsc	status,2,c
  2163   000B9E  EF74  F005         	goto	l2240
  2164   000BA2  0A01               	xorlw	1	; case 19
  2165   000BA4  B4D8               	btfsc	status,2,c
  2166   000BA6  EF77  F005         	goto	l2244
  2167   000BAA  0A07               	xorlw	7	; case 20
  2168   000BAC  B4D8               	btfsc	status,2,c
  2169   000BAE  EF7A  F005         	goto	l2248
  2170   000BB2  EF93  F006         	goto	l2344
  2171   000BB6                     l2256:
  2172   000BB6  0ED4               	movlw	212
  2173   000BB8  EF94  F006         	goto	l125
  2174   000BBC                     l2260:
  2175   000BBC  0ED5               	movlw	213
  2176   000BBE  EF94  F006         	goto	l125
  2177   000BC2                     l2264:
  2178   000BC2  0ED6               	movlw	214
  2179   000BC4  EF94  F006         	goto	l125
  2180   000BC8                     l2268:
  2181   000BC8  0ED7               	movlw	215
  2182   000BCA  EF94  F006         	goto	l125
  2183   000BCE                     l2272:
  2184   000BCE  0ED8               	movlw	216
  2185   000BD0  EF94  F006         	goto	l125
  2186   000BD4                     l2276:
  2187   000BD4  0ED9               	movlw	217
  2188   000BD6  EF94  F006         	goto	l125
  2189   000BDA                     l2280:
  2190   000BDA  0EDA               	movlw	218
  2191   000BDC  EF94  F006         	goto	l125
  2192   000BE0                     l2284:
  2193   000BE0  0EDB               	movlw	219
  2194   000BE2  EF94  F006         	goto	l125
  2195   000BE6                     l2288:
  2196   000BE6  0EDC               	movlw	220
  2197   000BE8  EF94  F006         	goto	l125
  2198   000BEC                     l2292:
  2199   000BEC  0EDD               	movlw	221
  2200   000BEE  EF94  F006         	goto	l125
  2201   000BF2                     l2296:
  2202   000BF2  0EDE               	movlw	222
  2203   000BF4  EF94  F006         	goto	l125
  2204   000BF8                     l2300:
  2205   000BF8  0EDF               	movlw	223
  2206   000BFA  EF94  F006         	goto	l125
  2207   000BFE                     l2304:
  2208   000BFE  0EE0               	movlw	224
  2209   000C00  EF94  F006         	goto	l125
  2210   000C04                     l2308:
  2211   000C04  0EE1               	movlw	225
  2212   000C06  EF94  F006         	goto	l125
  2213   000C0A                     l2312:
  2214   000C0A  0EE2               	movlw	226
  2215   000C0C  EF94  F006         	goto	l125
  2216   000C10                     l2316:
  2217   000C10  0EE3               	movlw	227
  2218   000C12  EF94  F006         	goto	l125
  2219   000C16                     l2320:
  2220   000C16  0EE4               	movlw	228
  2221   000C18  EF94  F006         	goto	l125
  2222   000C1C                     l2324:
  2223   000C1C  0EE5               	movlw	229
  2224   000C1E  EF94  F006         	goto	l125
  2225   000C22                     l2328:
  2226   000C22  0EE6               	movlw	230
  2227   000C24  EF94  F006         	goto	l125
  2228   000C28                     l2332:
  2229   000C28  0EE7               	movlw	231
  2230   000C2A  EF94  F006         	goto	l125
  2231   000C2E                     l2338:
  2232   000C2E  C01F  F021         	movff	lcd_pos@col,??_lcd_pos
  2233   000C32  C020  F022         	movff	lcd_pos@col+1,??_lcd_pos+1
  2234                           
  2235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2236                           ; Switch size 1, requested type "simple"
  2237                           ; Number of cases is 1, Range of values is 0 to 0
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte            4     3 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242   000C36  5022               	movf	(??_lcd_pos+1)^0,w,c
  2243   000C38  0A00               	xorlw	0	; case 0
  2244   000C3A  B4D8               	btfsc	status,2,c
  2245   000C3C  EF22  F006         	goto	l2464
  2246   000C40  EF93  F006         	goto	l2344
  2247   000C44                     l2464:
  2248                           
  2249                           ; Switch size 1, requested type "simple"
  2250                           ; Number of cases is 20, Range of values is 1 to 20
  2251                           ; switch strategies available:
  2252                           ; Name         Instructions Cycles
  2253                           ; simple_byte           61    31 (average)
  2254                           ;	Chosen strategy is simple_byte
  2255   000C44  5021               	movf	??_lcd_pos^0,w,c
  2256   000C46  0A01               	xorlw	1	; case 1
  2257   000C48  B4D8               	btfsc	status,2,c
  2258   000C4A  EFDB  F005         	goto	l2256
  2259   000C4E  0A03               	xorlw	3	; case 2
  2260   000C50  B4D8               	btfsc	status,2,c
  2261   000C52  EFDE  F005         	goto	l2260
  2262   000C56  0A01               	xorlw	1	; case 3
  2263   000C58  B4D8               	btfsc	status,2,c
  2264   000C5A  EFE1  F005         	goto	l2264
  2265   000C5E  0A07               	xorlw	7	; case 4
  2266   000C60  B4D8               	btfsc	status,2,c
  2267   000C62  EFE4  F005         	goto	l2268
  2268   000C66  0A01               	xorlw	1	; case 5
  2269   000C68  B4D8               	btfsc	status,2,c
  2270   000C6A  EFE7  F005         	goto	l2272
  2271   000C6E  0A03               	xorlw	3	; case 6
  2272   000C70  B4D8               	btfsc	status,2,c
  2273   000C72  EFEA  F005         	goto	l2276
  2274   000C76  0A01               	xorlw	1	; case 7
  2275   000C78  B4D8               	btfsc	status,2,c
  2276   000C7A  EFED  F005         	goto	l2280
  2277   000C7E  0A0F               	xorlw	15	; case 8
  2278   000C80  B4D8               	btfsc	status,2,c
  2279   000C82  EFF0  F005         	goto	l2284
  2280   000C86  0A01               	xorlw	1	; case 9
  2281   000C88  B4D8               	btfsc	status,2,c
  2282   000C8A  EFF3  F005         	goto	l2288
  2283   000C8E  0A03               	xorlw	3	; case 10
  2284   000C90  B4D8               	btfsc	status,2,c
  2285   000C92  EFF6  F005         	goto	l2292
  2286   000C96  0A01               	xorlw	1	; case 11
  2287   000C98  B4D8               	btfsc	status,2,c
  2288   000C9A  EFF9  F005         	goto	l2296
  2289   000C9E  0A07               	xorlw	7	; case 12
  2290   000CA0  B4D8               	btfsc	status,2,c
  2291   000CA2  EFFC  F005         	goto	l2300
  2292   000CA6  0A01               	xorlw	1	; case 13
  2293   000CA8  B4D8               	btfsc	status,2,c
  2294   000CAA  EFFF  F005         	goto	l2304
  2295   000CAE  0A03               	xorlw	3	; case 14
  2296   000CB0  B4D8               	btfsc	status,2,c
  2297   000CB2  EF02  F006         	goto	l2308
  2298   000CB6  0A01               	xorlw	1	; case 15
  2299   000CB8  B4D8               	btfsc	status,2,c
  2300   000CBA  EF05  F006         	goto	l2312
  2301   000CBE  0A1F               	xorlw	31	; case 16
  2302   000CC0  B4D8               	btfsc	status,2,c
  2303   000CC2  EF08  F006         	goto	l2316
  2304   000CC6  0A01               	xorlw	1	; case 17
  2305   000CC8  B4D8               	btfsc	status,2,c
  2306   000CCA  EF0B  F006         	goto	l2320
  2307   000CCE  0A03               	xorlw	3	; case 18
  2308   000CD0  B4D8               	btfsc	status,2,c
  2309   000CD2  EF0E  F006         	goto	l2324
  2310   000CD6  0A01               	xorlw	1	; case 19
  2311   000CD8  B4D8               	btfsc	status,2,c
  2312   000CDA  EF11  F006         	goto	l2328
  2313   000CDE  0A07               	xorlw	7	; case 20
  2314   000CE0  B4D8               	btfsc	status,2,c
  2315   000CE2  EF14  F006         	goto	l2332
  2316   000CE6  EF93  F006         	goto	l2344
  2317   000CEA                     l2342:
  2318   000CEA  C01D  F021         	movff	lcd_pos@line,??_lcd_pos
  2319   000CEE  C01E  F022         	movff	lcd_pos@line+1,??_lcd_pos+1
  2320                           
  2321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2322                           ; Switch size 1, requested type "simple"
  2323                           ; Number of cases is 1, Range of values is 0 to 0
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte            4     3 (average)
  2327                           ;	Chosen strategy is simple_byte
  2328   000CF2  5022               	movf	(??_lcd_pos+1)^0,w,c
  2329   000CF4  0A00               	xorlw	0	; case 0
  2330   000CF6  B4D8               	btfsc	status,2,c
  2331   000CF8  EF80  F006         	goto	l2466
  2332   000CFC  EF93  F006         	goto	l2344
  2333   000D00                     l2466:
  2334                           
  2335                           ; Switch size 1, requested type "simple"
  2336                           ; Number of cases is 4, Range of values is 1 to 4
  2337                           ; switch strategies available:
  2338                           ; Name         Instructions Cycles
  2339                           ; simple_byte           13     7 (average)
  2340                           ;	Chosen strategy is simple_byte
  2341   000D00  5021               	movf	??_lcd_pos^0,w,c
  2342   000D02  0A01               	xorlw	1	; case 1
  2343   000D04  B4D8               	btfsc	status,2,c
  2344   000D06  EF49  F004         	goto	l2086
  2345   000D0A  0A03               	xorlw	3	; case 2
  2346   000D0C  B4D8               	btfsc	status,2,c
  2347   000D0E  EFE3  F004         	goto	l2170
  2348   000D12  0A01               	xorlw	1	; case 3
  2349   000D14  B4D8               	btfsc	status,2,c
  2350   000D16  EF7D  F005         	goto	l2254
  2351   000D1A  0A07               	xorlw	7	; case 4
  2352   000D1C  B4D8               	btfsc	status,2,c
  2353   000D1E  EF17  F006         	goto	l2338
  2354   000D22  EF93  F006         	goto	l2344
  2355   000D26                     l2344:
  2356                           
  2357                           ;pong.c: 134: return 0;
  2358   000D26  0E00               	movlw	0
  2359   000D28                     l125:
  2360   000D28  0012               	return		;funcret
  2361   000D2A                     __end_of_lcd_pos:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _lcd_init *****************
  2365 ;; Defined at:
  2366 ;;		line 34 in file "../../../Documents/P2/PONG/lcd.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 3
  2387 ;; This function calls:
  2388 ;;		_atraso_ms
  2389 ;;		_lcd_cmd
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text10
  2396   0014CC                     __ptext10:
  2397                           	callstack 0
  2398   0014CC                     _lcd_init:
  2399                           	callstack 27
  2400   0014CC                     
  2401                           ;lcd.c: 36: PORTEbits.RE1=0;
  2402   0014CC  9284               	bcf	132,1,c	;volatile
  2403                           
  2404                           ;lcd.c: 37: PORTEbits.RE0=0;
  2405   0014CE  9084               	bcf	132,0,c	;volatile
  2406   0014D0                     
  2407                           ;lcd.c: 38: atraso_ms(20);
  2408   0014D0  0E00               	movlw	0
  2409   0014D2  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  2410   0014D4  0E14               	movlw	20
  2411   0014D6  6E1D               	movwf	atraso_ms@valor^0,c
  2412   0014D8  ECC0  F00A         	call	_atraso_ms	;wreg free
  2413   0014DC                     
  2414                           ;lcd.c: 39: PORTEbits.RE1=1;
  2415   0014DC  8284               	bsf	132,1,c	;volatile
  2416                           
  2417                           ;lcd.c: 40: lcd_cmd(0x38);
  2418   0014DE  0E38               	movlw	56
  2419   0014E0  EC35  F00B         	call	_lcd_cmd
  2420                           
  2421                           ;lcd.c: 41: atraso_ms(5);
  2422   0014E4  0E00               	movlw	0
  2423   0014E6  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  2424   0014E8  0E05               	movlw	5
  2425   0014EA  6E1D               	movwf	atraso_ms@valor^0,c
  2426   0014EC  ECC0  F00A         	call	_atraso_ms	;wreg free
  2427                           
  2428                           ;lcd.c: 42: lcd_cmd(0x38);
  2429   0014F0  0E38               	movlw	56
  2430   0014F2  EC35  F00B         	call	_lcd_cmd
  2431                           
  2432                           ;lcd.c: 43: atraso_ms(1);
  2433   0014F6  0E00               	movlw	0
  2434   0014F8  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  2435   0014FA  0E01               	movlw	1
  2436   0014FC  6E1D               	movwf	atraso_ms@valor^0,c
  2437   0014FE  ECC0  F00A         	call	_atraso_ms	;wreg free
  2438                           
  2439                           ;lcd.c: 44: lcd_cmd(0x38);
  2440   001502  0E38               	movlw	56
  2441   001504  EC35  F00B         	call	_lcd_cmd
  2442                           
  2443                           ;lcd.c: 45: lcd_cmd(0x08);
  2444   001508  0E08               	movlw	8
  2445   00150A  EC35  F00B         	call	_lcd_cmd
  2446                           
  2447                           ;lcd.c: 46: lcd_cmd(0x0F);
  2448   00150E  0E0F               	movlw	15
  2449   001510  EC35  F00B         	call	_lcd_cmd
  2450                           
  2451                           ;lcd.c: 47: lcd_cmd(0x01);
  2452   001514  0E01               	movlw	1
  2453   001516  EC35  F00B         	call	_lcd_cmd
  2454                           
  2455                           ;lcd.c: 48: lcd_cmd(0x38);
  2456   00151A  0E38               	movlw	56
  2457   00151C  EC35  F00B         	call	_lcd_cmd
  2458                           
  2459                           ;lcd.c: 49: lcd_cmd(0x80);
  2460   001520  0E80               	movlw	128
  2461   001522  EC35  F00B         	call	_lcd_cmd
  2462   001526  0012               	return		;funcret
  2463   001528                     __end_of_lcd_init:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _lcd_cmd *****************
  2467 ;; Defined at:
  2468 ;;		line 10 in file "../../../Documents/P2/PONG/lcd.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  val             1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  val             1    5[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 2
  2489 ;; This function calls:
  2490 ;;		_atraso_ms
  2491 ;;		_lcd_wr
  2492 ;; This function is called by:
  2493 ;;		_lcd_init
  2494 ;;		_lcd_set_cursor
  2495 ;;		_special_char
  2496 ;;		_print_special_character
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text11
  2502   00166A                     __ptext11:
  2503                           	callstack 0
  2504   00166A                     _lcd_cmd:
  2505                           	callstack 27
  2506                           
  2507                           ;incstack = 0
  2508                           ;lcd_cmd@val stored from wreg
  2509   00166A  6E22               	movwf	lcd_cmd@val^0,c
  2510   00166C                     
  2511                           ;lcd.c: 12: PORTEbits.RE1=1;
  2512   00166C  8284               	bsf	132,1,c	;volatile
  2513   00166E                     
  2514                           ;lcd.c: 13: lcd_wr(val);
  2515   00166E  5022               	movf	lcd_cmd@val^0,w,c
  2516   001670  EC73  F00B         	call	_lcd_wr
  2517   001674                     
  2518                           ;lcd.c: 14: PORTEbits.RE0=0;
  2519   001674  9084               	bcf	132,0,c	;volatile
  2520   001676                     
  2521                           ;lcd.c: 15: atraso_ms(4);
  2522   001676  0E00               	movlw	0
  2523   001678  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  2524   00167A  0E04               	movlw	4
  2525   00167C  6E1D               	movwf	atraso_ms@valor^0,c
  2526   00167E  ECC0  F00A         	call	_atraso_ms	;wreg free
  2527   001682                     
  2528                           ;lcd.c: 16: PORTEbits.RE1=0;
  2529   001682  9284               	bcf	132,1,c	;volatile
  2530   001684                     
  2531                           ;lcd.c: 17: atraso_ms(4);
  2532   001684  0E00               	movlw	0
  2533   001686  6E1E               	movwf	(atraso_ms@valor+1)^0,c
  2534   001688  0E04               	movlw	4
  2535   00168A  6E1D               	movwf	atraso_ms@valor^0,c
  2536   00168C  ECC0  F00A         	call	_atraso_ms	;wreg free
  2537   001690                     
  2538                           ;lcd.c: 18: PORTEbits.RE1=1;
  2539   001690  8284               	bsf	132,1,c	;volatile
  2540   001692  0012               	return		;funcret
  2541   001694                     __end_of_lcd_cmd:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _lcd_wr *****************
  2545 ;; Defined at:
  2546 ;;		line 5 in file "../../../Documents/P2/PONG/lcd.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  val             1    wreg     unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  val             1    0[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0
  2561 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2563 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2564 ;;Total ram usage:        1 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_lcd_cmd
  2571 ;;		_lcd_dat
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text12
  2576   0016E6                     __ptext12:
  2577                           	callstack 0
  2578   0016E6                     _lcd_wr:
  2579                           	callstack 27
  2580                           
  2581                           ;incstack = 0
  2582                           ;lcd_wr@val stored from wreg
  2583   0016E6  6E1D               	movwf	lcd_wr@val^0,c
  2584   0016E8                     
  2585                           ;lcd.c: 7: PORTD=val;
  2586   0016E8  C01D  FF83         	movff	lcd_wr@val,3971	;volatile
  2587   0016EC  0012               	return		;funcret
  2588   0016EE                     __end_of_lcd_wr:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function _atraso_ms *****************
  2592 ;; Defined at:
  2593 ;;		line 2 in file "../../../Documents/P2/PONG/atraso.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  valor           2    0[COMRAM] unsigned int 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  i               2    2[COMRAM] unsigned int 
  2598 ;;  j               1    4[COMRAM] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2608 ;;      Params:         2       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2611 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:        5 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_lcd_cmd
  2619 ;;		_lcd_dat
  2620 ;;		_lcd_init
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text13
  2625   001580                     __ptext13:
  2626                           	callstack 0
  2627   001580                     _atraso_ms:
  2628                           	callstack 27
  2629   001580                     
  2630                           ;atraso.c: 4: unsigned int i;;atraso.c: 5: unsigned char j;;atraso.c: 7: for (i =0; i< (
      +                          valor); i++)
  2631   001580  0E00               	movlw	0
  2632   001582  6E20               	movwf	(atraso_ms@i+1)^0,c
  2633   001584  0E00               	movlw	0
  2634   001586  6E1F               	movwf	atraso_ms@i^0,c
  2635   001588  EFD8  F00A         	goto	l1844
  2636   00158C                     l1832:
  2637                           
  2638                           ;atraso.c: 8: {;atraso.c: 10: for (j =0 ; j < 200; j++)
  2639   00158C  0E00               	movlw	0
  2640   00158E  6E21               	movwf	atraso_ms@j^0,c
  2641   001590                     l38:
  2642   001590  0000               	nop		;# 
  2643   001592  0000               	nop		;# 
  2644   001594  0000               	nop		;# 
  2645   001596  0000               	nop		;# 
  2646   001598  0000               	nop		;# 
  2647   00159A  2A21               	incf	atraso_ms@j^0,f,c
  2648   00159C  0EC7               	movlw	199
  2649   00159E  6421               	cpfsgt	atraso_ms@j^0,c
  2650   0015A0  EFD4  F00A         	goto	u551
  2651   0015A4  EFD6  F00A         	goto	u550
  2652   0015A8                     u551:
  2653   0015A8  EFC8  F00A         	goto	l38
  2654   0015AC                     u550:
  2655   0015AC  4A1F               	infsnz	atraso_ms@i^0,f,c
  2656   0015AE  2A20               	incf	(atraso_ms@i+1)^0,f,c
  2657   0015B0                     l1844:
  2658   0015B0  501D               	movf	atraso_ms@valor^0,w,c
  2659   0015B2  5C1F               	subwf	atraso_ms@i^0,w,c
  2660   0015B4  501E               	movf	(atraso_ms@valor+1)^0,w,c
  2661   0015B6  5820               	subwfb	(atraso_ms@i+1)^0,w,c
  2662   0015B8  A0D8               	btfss	status,0,c
  2663   0015BA  EFE1  F00A         	goto	u561
  2664   0015BE  EFE3  F00A         	goto	u560
  2665   0015C2                     u561:
  2666   0015C2  EFC6  F00A         	goto	l1832
  2667   0015C6                     u560:
  2668   0015C6  0012               	return		;funcret
  2669   0015C8                     __end_of_atraso_ms:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _itoa *****************
  2673 ;; Defined at:
  2674 ;;		line 192 in file "../../../Documents/P2/PONG/pong.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  val             2   12[COMRAM] unsigned int 
  2677 ;;  str             1   14[COMRAM] PTR unsigned char 
  2678 ;;		 -> main@buff(3), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      PTR unsigned char 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2690 ;;      Params:         3       0       0       0       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2693 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2694 ;;Total ram usage:        3 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 2
  2697 ;; This function calls:
  2698 ;;		___lwdiv
  2699 ;;		___lwmod
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text14
  2706   001400                     __ptext14:
  2707                           	callstack 0
  2708   001400                     _itoa:
  2709                           	callstack 28
  2710   001400                     
  2711                           ;pong.c: 194: str[0]=((val%100)/10)+0x30;
  2712   001400  502B               	movf	itoa@str^0,w,c
  2713   001402  6ED9               	movwf	fsr2l,c
  2714   001404  6ADA               	clrf	fsr2h,c
  2715   001406  0E00               	movlw	0
  2716   001408  6E20               	movwf	(___lwmod@divisor+1)^0,c
  2717   00140A  0E64               	movlw	100
  2718   00140C  6E1F               	movwf	___lwmod@divisor^0,c
  2719   00140E  C029  F01D         	movff	itoa@val,___lwmod@dividend
  2720   001412  C02A  F01E         	movff	itoa@val+1,___lwmod@dividend+1
  2721   001416  EC34  F00A         	call	___lwmod	;wreg free
  2722   00141A  C01D  F022         	movff	?___lwmod,___lwdiv@dividend
  2723   00141E  C01E  F023         	movff	?___lwmod+1,___lwdiv@dividend+1
  2724   001422  0E00               	movlw	0
  2725   001424  6E25               	movwf	(___lwdiv@divisor+1)^0,c
  2726   001426  0E0A               	movlw	10
  2727   001428  6E24               	movwf	___lwdiv@divisor^0,c
  2728   00142A  EC8F  F009         	call	___lwdiv	;wreg free
  2729   00142E  5022               	movf	?___lwdiv^0,w,c
  2730   001430  0F30               	addlw	48
  2731   001432  6EDF               	movwf	indf2,c
  2732                           
  2733                           ;pong.c: 195: str[1]=(val%10)+0x30;
  2734   001434  502B               	movf	itoa@str^0,w,c
  2735   001436  6ED9               	movwf	fsr2l,c
  2736   001438  6ADA               	clrf	fsr2h,c
  2737   00143A  0E01               	movlw	1
  2738   00143C  26D9               	addwf	fsr2l,f,c
  2739   00143E  C029  F01D         	movff	itoa@val,___lwmod@dividend
  2740   001442  C02A  F01E         	movff	itoa@val+1,___lwmod@dividend+1
  2741   001446  0E00               	movlw	0
  2742   001448  6E20               	movwf	(___lwmod@divisor+1)^0,c
  2743   00144A  0E0A               	movlw	10
  2744   00144C  6E1F               	movwf	___lwmod@divisor^0,c
  2745   00144E  EC34  F00A         	call	___lwmod	;wreg free
  2746   001452  501D               	movf	?___lwmod^0,w,c
  2747   001454  0F30               	addlw	48
  2748   001456  6EDF               	movwf	indf2,c
  2749   001458                     
  2750                           ;pong.c: 196: str[2]=0;
  2751   001458  502B               	movf	itoa@str^0,w,c
  2752   00145A  6ED9               	movwf	fsr2l,c
  2753   00145C  6ADA               	clrf	fsr2h,c
  2754   00145E  0E02               	movlw	2
  2755   001460  26D9               	addwf	fsr2l,f,c
  2756   001462  6ADF               	clrf	indf2,c
  2757   001464                     
  2758                           ;pong.c: 198: return str;
  2759   001464  502B               	movf	itoa@str^0,w,c
  2760   001466  0012               	return		;funcret
  2761   001468                     __end_of_itoa:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function ___lwmod *****************
  2765 ;; Defined at:
  2766 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  dividend        2    0[COMRAM] unsigned int 
  2769 ;;  divisor         2    2[COMRAM] unsigned int 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  counter         1    4[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  2    0[COMRAM] unsigned int 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2781 ;;      Params:         4       0       0       0       0       0       0       0       0
  2782 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2784 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        5 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_itoa
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text15
  2796   001468                     __ptext15:
  2797                           	callstack 0
  2798   001468                     ___lwmod:
  2799                           	callstack 28
  2800   001468  501F               	movf	___lwmod@divisor^0,w,c
  2801   00146A  1020               	iorwf	(___lwmod@divisor+1)^0,w,c
  2802   00146C  B4D8               	btfsc	status,2,c
  2803   00146E  EF3B  F00A         	goto	u661
  2804   001472  EF3D  F00A         	goto	u660
  2805   001476                     u661:
  2806   001476  EF61  F00A         	goto	l768
  2807   00147A                     u660:
  2808   00147A  0E01               	movlw	1
  2809   00147C  6E21               	movwf	___lwmod@counter^0,c
  2810   00147E  EF45  F00A         	goto	l1946
  2811   001482                     l1944:
  2812   001482  90D8               	bcf	status,0,c
  2813   001484  361F               	rlcf	___lwmod@divisor^0,f,c
  2814   001486  3620               	rlcf	(___lwmod@divisor+1)^0,f,c
  2815   001488  2A21               	incf	___lwmod@counter^0,f,c
  2816   00148A                     l1946:
  2817   00148A  AE20               	btfss	(___lwmod@divisor+1)^0,7,c
  2818   00148C  EF4A  F00A         	goto	u671
  2819   001490  EF4C  F00A         	goto	u670
  2820   001494                     u671:
  2821   001494  EF41  F00A         	goto	l1944
  2822   001498                     u670:
  2823   001498                     l1948:
  2824   001498  501F               	movf	___lwmod@divisor^0,w,c
  2825   00149A  5C1D               	subwf	___lwmod@dividend^0,w,c
  2826   00149C  5020               	movf	(___lwmod@divisor+1)^0,w,c
  2827   00149E  581E               	subwfb	(___lwmod@dividend+1)^0,w,c
  2828   0014A0  A0D8               	btfss	status,0,c
  2829   0014A2  EF55  F00A         	goto	u681
  2830   0014A6  EF57  F00A         	goto	u680
  2831   0014AA                     u681:
  2832   0014AA  EF5B  F00A         	goto	l1952
  2833   0014AE                     u680:
  2834   0014AE  501F               	movf	___lwmod@divisor^0,w,c
  2835   0014B0  5E1D               	subwf	___lwmod@dividend^0,f,c
  2836   0014B2  5020               	movf	(___lwmod@divisor+1)^0,w,c
  2837   0014B4  5A1E               	subwfb	(___lwmod@dividend+1)^0,f,c
  2838   0014B6                     l1952:
  2839   0014B6  90D8               	bcf	status,0,c
  2840   0014B8  3220               	rrcf	(___lwmod@divisor+1)^0,f,c
  2841   0014BA  321F               	rrcf	___lwmod@divisor^0,f,c
  2842   0014BC  2E21               	decfsz	___lwmod@counter^0,f,c
  2843   0014BE  EF4C  F00A         	goto	l1948
  2844   0014C2                     l768:
  2845   0014C2  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
  2846   0014C6  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
  2847   0014CA  0012               	return		;funcret
  2848   0014CC                     __end_of___lwmod:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function ___lwdiv *****************
  2852 ;; Defined at:
  2853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  dividend        2    5[COMRAM] unsigned int 
  2856 ;;  divisor         2    7[COMRAM] unsigned int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  quotient        2    9[COMRAM] unsigned int 
  2859 ;;  counter         1   11[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    5[COMRAM] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         4       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        7 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_itoa
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text16
  2884   00131E                     __ptext16:
  2885                           	callstack 0
  2886   00131E                     ___lwdiv:
  2887                           	callstack 28
  2888   00131E  0E00               	movlw	0
  2889   001320  6E27               	movwf	(___lwdiv@quotient+1)^0,c
  2890   001322  0E00               	movlw	0
  2891   001324  6E26               	movwf	___lwdiv@quotient^0,c
  2892   001326  5024               	movf	___lwdiv@divisor^0,w,c
  2893   001328  1025               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2894   00132A  B4D8               	btfsc	status,2,c
  2895   00132C  EF9A  F009         	goto	u631
  2896   001330  EF9C  F009         	goto	u630
  2897   001334                     u631:
  2898   001334  EFC4  F009         	goto	l758
  2899   001338                     u630:
  2900   001338  0E01               	movlw	1
  2901   00133A  6E28               	movwf	___lwdiv@counter^0,c
  2902   00133C  EFA4  F009         	goto	l1926
  2903   001340                     l1924:
  2904   001340  90D8               	bcf	status,0,c
  2905   001342  3624               	rlcf	___lwdiv@divisor^0,f,c
  2906   001344  3625               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2907   001346  2A28               	incf	___lwdiv@counter^0,f,c
  2908   001348                     l1926:
  2909   001348  AE25               	btfss	(___lwdiv@divisor+1)^0,7,c
  2910   00134A  EFA9  F009         	goto	u641
  2911   00134E  EFAB  F009         	goto	u640
  2912   001352                     u641:
  2913   001352  EFA0  F009         	goto	l1924
  2914   001356                     u640:
  2915   001356                     l1928:
  2916   001356  90D8               	bcf	status,0,c
  2917   001358  3626               	rlcf	___lwdiv@quotient^0,f,c
  2918   00135A  3627               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2919   00135C  5024               	movf	___lwdiv@divisor^0,w,c
  2920   00135E  5C22               	subwf	___lwdiv@dividend^0,w,c
  2921   001360  5025               	movf	(___lwdiv@divisor+1)^0,w,c
  2922   001362  5823               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2923   001364  A0D8               	btfss	status,0,c
  2924   001366  EFB7  F009         	goto	u651
  2925   00136A  EFB9  F009         	goto	u650
  2926   00136E                     u651:
  2927   00136E  EFBE  F009         	goto	l1936
  2928   001372                     u650:
  2929   001372  5024               	movf	___lwdiv@divisor^0,w,c
  2930   001374  5E22               	subwf	___lwdiv@dividend^0,f,c
  2931   001376  5025               	movf	(___lwdiv@divisor+1)^0,w,c
  2932   001378  5A23               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2933   00137A  8026               	bsf	___lwdiv@quotient^0,0,c
  2934   00137C                     l1936:
  2935   00137C  90D8               	bcf	status,0,c
  2936   00137E  3225               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2937   001380  3224               	rrcf	___lwdiv@divisor^0,f,c
  2938   001382  2E28               	decfsz	___lwdiv@counter^0,f,c
  2939   001384  EFAB  F009         	goto	l1928
  2940   001388                     l758:
  2941   001388  C026  F022         	movff	___lwdiv@quotient,?___lwdiv
  2942   00138C  C027  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2943   001390  0012               	return		;funcret
  2944   001392                     __end_of___lwdiv:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _init_timer0 *****************
  2948 ;; Defined at:
  2949 ;;		line 150 in file "../../../Documents/P2/PONG/pong.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text17
  2978   0016D8                     __ptext17:
  2979                           	callstack 0
  2980   0016D8                     _init_timer0:
  2981                           	callstack 29
  2982   0016D8                     
  2983                           ;pong.c: 153: T0CON = 0b10000101;
  2984   0016D8  0E85               	movlw	133
  2985   0016DA  6ED5               	movwf	213,c	;volatile
  2986                           
  2987                           ;pong.c: 154: TMR0L = 6;
  2988   0016DC  0E06               	movlw	6
  2989   0016DE  6ED6               	movwf	214,c	;volatile
  2990   0016E0                     
  2991                           ;pong.c: 155: INTCONbits.TMR0IF = 0;
  2992   0016E0  94F2               	bcf	242,2,c	;volatile
  2993   0016E2                     
  2994                           ;pong.c: 156: INTCONbits.TMR0IE = 1;
  2995   0016E2  8AF2               	bsf	242,5,c	;volatile
  2996   0016E4  0012               	return		;funcret
  2997   0016E6                     __end_of_init_timer0:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _init_interrupts *****************
  3001 ;; Defined at:
  3002 ;;		line 144 in file "../../../Documents/P2/PONG/pong.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		None
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text18
  3031   0016EE                     __ptext18:
  3032                           	callstack 0
  3033   0016EE                     _init_interrupts:
  3034                           	callstack 29
  3035   0016EE                     
  3036                           ;pong.c: 145: INTCONbits.GIE = 1;
  3037   0016EE  8EF2               	bsf	242,7,c	;volatile
  3038                           
  3039                           ;pong.c: 146: INTCONbits.PEIE = 1;
  3040   0016F0  8CF2               	bsf	242,6,c	;volatile
  3041   0016F2  0012               	return		;funcret
  3042   0016F4                     __end_of_init_interrupts:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _high_isr *****************
  3046 ;; Defined at:
  3047 ;;		line 159 in file "../../../Documents/P2/PONG/pong.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		Interrupt level 2
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	intcode
  3075   000008                     __pintcode:
  3076                           	callstack 0
  3077   000008                     _high_isr:
  3078                           	callstack 27
  3079                           
  3080                           ;incstack = 0
  3081   000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3082   00000A  ED62  F008         	call	int_func,f	;refresh shadow registers
  3083                           
  3084                           	psect	intcode_body
  3085   0010C4                     __pintcode_body:
  3086                           	callstack 27
  3087   0010C4                     int_func:
  3088                           	callstack 27
  3089   0010C4  0006               	pop		; remove dummy address from shadow register refresh
  3090   0010C6                     
  3091                           ;pong.c: 161: if (INTCONbits.TMR0IF) {
  3092   0010C6  A4F2               	btfss	242,2,c	;volatile
  3093   0010C8  EF68  F008         	goto	i2u39_41
  3094   0010CC  EF6A  F008         	goto	i2u39_40
  3095   0010D0                     i2u39_41:
  3096   0010D0  EFEF  F008         	goto	i2l251
  3097   0010D4                     i2u39_40:
  3098   0010D4                     
  3099                           ;pong.c: 162: TMR0L = 6;
  3100   0010D4  0E06               	movlw	6
  3101   0010D6  6ED6               	movwf	214,c	;volatile
  3102   0010D8                     
  3103                           ;pong.c: 165: ball_x += ball_dir_x;
  3104   0010D8  5003               	movf	_ball_dir_x^0,w,c	;volatile
  3105   0010DA  2607               	addwf	_ball_x^0,f,c	;volatile
  3106   0010DC  5004               	movf	(_ball_dir_x+1)^0,w,c	;volatile
  3107   0010DE  2208               	addwfc	(_ball_x+1)^0,f,c	;volatile
  3108   0010E0                     
  3109                           ;pong.c: 166: ball_y += ball_dir_y;
  3110   0010E0  5001               	movf	_ball_dir_y^0,w,c	;volatile
  3111   0010E2  2605               	addwf	_ball_y^0,f,c	;volatile
  3112   0010E4  5002               	movf	(_ball_dir_y+1)^0,w,c	;volatile
  3113   0010E6  2206               	addwfc	(_ball_y+1)^0,f,c	;volatile
  3114   0010E8                     
  3115                           ;pong.c: 169: if (ball_y == 1 || ball_y == 4) ball_dir_y = -ball_dir_y;
  3116   0010E8  0405               	decf	_ball_y^0,w,c	;volatile
  3117   0010EA  1006               	iorwf	(_ball_y+1)^0,w,c	;volatile
  3118   0010EC  B4D8               	btfsc	status,2,c
  3119   0010EE  EF7B  F008         	goto	i2u40_41
  3120   0010F2  EF7D  F008         	goto	i2u40_40
  3121   0010F6                     i2u40_41:
  3122   0010F6  EF87  F008         	goto	i2l1712
  3123   0010FA                     i2u40_40:
  3124   0010FA  0E04               	movlw	4
  3125   0010FC  1805               	xorwf	_ball_y^0,w,c	;volatile
  3126   0010FE  1006               	iorwf	(_ball_y+1)^0,w,c	;volatile
  3127   001100  A4D8               	btfss	status,2,c
  3128   001102  EF85  F008         	goto	i2u41_41
  3129   001106  EF87  F008         	goto	i2u41_40
  3130   00110A                     i2u41_41:
  3131   00110A  EF8B  F008         	goto	i2l1714
  3132   00110E                     i2u41_40:
  3133   00110E                     i2l1712:
  3134   00110E  6C01               	negf	_ball_dir_y^0,c	;volatile
  3135   001110  1E02               	comf	(_ball_dir_y+1)^0,f,c	;volatile
  3136   001112  B0D8               	btfsc	status,0,c
  3137   001114  2A02               	incf	(_ball_dir_y+1)^0,f,c	;volatile
  3138   001116                     i2l1714:
  3139                           
  3140                           ;pong.c: 172: if (ball_x == 1 && ball_y == player1_pos) ball_dir_x = -ball_dir_x;
  3141   001116  0407               	decf	_ball_x^0,w,c	;volatile
  3142   001118  1008               	iorwf	(_ball_x+1)^0,w,c	;volatile
  3143   00111A  A4D8               	btfss	status,2,c
  3144   00111C  EF92  F008         	goto	i2u42_41
  3145   001120  EF94  F008         	goto	i2u42_40
  3146   001124                     i2u42_41:
  3147   001124  EFA4  F008         	goto	i2l1720
  3148   001128                     i2u42_40:
  3149   001128  500B               	movf	_player1_pos^0,w,c	;volatile
  3150   00112A  1805               	xorwf	_ball_y^0,w,c	;volatile
  3151   00112C  E107               	bnz	i2u43_41
  3152   00112E  500C               	movf	(_player1_pos+1)^0,w,c	;volatile
  3153   001130  1806               	xorwf	(_ball_y+1)^0,w,c	;volatile
  3154   001132  A4D8               	btfss	status,2,c
  3155   001134  EF9E  F008         	goto	i2u43_41
  3156   001138  EFA0  F008         	goto	i2u43_40
  3157   00113C                     i2u43_41:
  3158   00113C  EFA4  F008         	goto	i2l1720
  3159   001140                     i2u43_40:
  3160   001140  6C03               	negf	_ball_dir_x^0,c	;volatile
  3161   001142  1E04               	comf	(_ball_dir_x+1)^0,f,c	;volatile
  3162   001144  B0D8               	btfsc	status,0,c
  3163   001146  2A04               	incf	(_ball_dir_x+1)^0,f,c	;volatile
  3164   001148                     i2l1720:
  3165                           
  3166                           ;pong.c: 173: if (ball_x == 20 && ball_y == player2_pos) ball_dir_x = -ball_dir_x;
  3167   001148  0E14               	movlw	20
  3168   00114A  1807               	xorwf	_ball_x^0,w,c	;volatile
  3169   00114C  1008               	iorwf	(_ball_x+1)^0,w,c	;volatile
  3170   00114E  A4D8               	btfss	status,2,c
  3171   001150  EFAC  F008         	goto	i2u44_41
  3172   001154  EFAE  F008         	goto	i2u44_40
  3173   001158                     i2u44_41:
  3174   001158  EFBE  F008         	goto	i2l1726
  3175   00115C                     i2u44_40:
  3176   00115C  5009               	movf	_player2_pos^0,w,c	;volatile
  3177   00115E  1805               	xorwf	_ball_y^0,w,c	;volatile
  3178   001160  E107               	bnz	i2u45_41
  3179   001162  500A               	movf	(_player2_pos+1)^0,w,c	;volatile
  3180   001164  1806               	xorwf	(_ball_y+1)^0,w,c	;volatile
  3181   001166  A4D8               	btfss	status,2,c
  3182   001168  EFB8  F008         	goto	i2u45_41
  3183   00116C  EFBA  F008         	goto	i2u45_40
  3184   001170                     i2u45_41:
  3185   001170  EFBE  F008         	goto	i2l1726
  3186   001174                     i2u45_40:
  3187   001174  6C03               	negf	_ball_dir_x^0,c	;volatile
  3188   001176  1E04               	comf	(_ball_dir_x+1)^0,f,c	;volatile
  3189   001178  B0D8               	btfsc	status,0,c
  3190   00117A  2A04               	incf	(_ball_dir_x+1)^0,f,c	;volatile
  3191   00117C                     i2l1726:
  3192                           
  3193                           ;pong.c: 176: if (ball_x == 18) {
  3194   00117C  0E12               	movlw	18
  3195   00117E  1807               	xorwf	_ball_x^0,w,c	;volatile
  3196   001180  1008               	iorwf	(_ball_x+1)^0,w,c	;volatile
  3197   001182  A4D8               	btfss	status,2,c
  3198   001184  EFC6  F008         	goto	i2u46_41
  3199   001188  EFC8  F008         	goto	i2u46_40
  3200   00118C                     i2u46_41:
  3201   00118C  EFD6  F008         	goto	i2l1736
  3202   001190                     i2u46_40:
  3203   001190                     
  3204                           ;pong.c: 177: score1++;
  3205   001190  4A39               	infsnz	_score1^0,f,c	;volatile
  3206   001192  2A3A               	incf	(_score1+1)^0,f,c	;volatile
  3207   001194                     
  3208                           ;pong.c: 178: ball_x = 10;
  3209   001194  0E00               	movlw	0
  3210   001196  6E08               	movwf	(_ball_x+1)^0,c	;volatile
  3211   001198  0E0A               	movlw	10
  3212   00119A  6E07               	movwf	_ball_x^0,c	;volatile
  3213   00119C                     
  3214                           ;pong.c: 179: ball_y = 2;
  3215   00119C  0E00               	movlw	0
  3216   00119E  6E06               	movwf	(_ball_y+1)^0,c	;volatile
  3217   0011A0  0E02               	movlw	2
  3218   0011A2  6E05               	movwf	_ball_y^0,c	;volatile
  3219   0011A4                     
  3220                           ;pong.c: 180: ball_dir_x = -1;
  3221   0011A4  6803               	setf	_ball_dir_x^0,c	;volatile
  3222   0011A6  6804               	setf	(_ball_dir_x+1)^0,c	;volatile
  3223                           
  3224                           ;pong.c: 181: } else if (ball_x == 2) {
  3225   0011A8  EFEE  F008         	goto	i2l1746
  3226   0011AC                     i2l1736:
  3227   0011AC  0E02               	movlw	2
  3228   0011AE  1807               	xorwf	_ball_x^0,w,c	;volatile
  3229   0011B0  1008               	iorwf	(_ball_x+1)^0,w,c	;volatile
  3230   0011B2  A4D8               	btfss	status,2,c
  3231   0011B4  EFDE  F008         	goto	i2u47_41
  3232   0011B8  EFE0  F008         	goto	i2u47_40
  3233   0011BC                     i2u47_41:
  3234   0011BC  EFEE  F008         	goto	i2l1746
  3235   0011C0                     i2u47_40:
  3236   0011C0                     
  3237                           ;pong.c: 182: score2++;
  3238   0011C0  4A37               	infsnz	_score2^0,f,c	;volatile
  3239   0011C2  2A38               	incf	(_score2+1)^0,f,c	;volatile
  3240   0011C4                     
  3241                           ;pong.c: 183: ball_x = 10;
  3242   0011C4  0E00               	movlw	0
  3243   0011C6  6E08               	movwf	(_ball_x+1)^0,c	;volatile
  3244   0011C8  0E0A               	movlw	10
  3245   0011CA  6E07               	movwf	_ball_x^0,c	;volatile
  3246   0011CC                     
  3247                           ;pong.c: 184: ball_y = 2;
  3248   0011CC  0E00               	movlw	0
  3249   0011CE  6E06               	movwf	(_ball_y+1)^0,c	;volatile
  3250   0011D0  0E02               	movlw	2
  3251   0011D2  6E05               	movwf	_ball_y^0,c	;volatile
  3252   0011D4                     
  3253                           ;pong.c: 185: ball_dir_x = 1;
  3254   0011D4  0E00               	movlw	0
  3255   0011D6  6E04               	movwf	(_ball_dir_x+1)^0,c	;volatile
  3256   0011D8  0E01               	movlw	1
  3257   0011DA  6E03               	movwf	_ball_dir_x^0,c	;volatile
  3258   0011DC                     i2l1746:
  3259                           
  3260                           ;pong.c: 186: };pong.c: 188: INTCONbits.TMR0IF = 0;
  3261   0011DC  94F2               	bcf	242,2,c	;volatile
  3262   0011DE                     i2l251:
  3263   0011DE  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3264   0011E0  0011               	retfie		f
  3265   0011E2                     __end_of_high_isr:
  3266                           	callstack 0
  3267                           
  3268                           	psect	rparam
  3269   000000                     
  3270                           	psect	temp
  3271   00003D                     btemp:
  3272                           	callstack 0
  3273   00003D                     	ds	1
  3274   000000                     int$flags	set	btemp
  3275   000000                     wtemp8	set	btemp+1
  3276   000000                     ttemp5	set	btemp+1
  3277   000000                     ttemp6	set	btemp+4
  3278   000000                     ttemp7	set	btemp+8
  3279                           
  3280                           	psect	config
  3281                           
  3282                           ;Config register CONFIG1L @ 0x300000
  3283                           ;	PLL Prescaler Selection bits
  3284                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  3285                           ;	System Clock Postscaler Selection bits
  3286                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  3287                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3288                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  3289   300000                     	org	3145728
  3290   300000  29                 	db	41
  3291                           
  3292                           ;Config register CONFIG1H @ 0x300001
  3293                           ;	Oscillator Selection bits
  3294                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
  3295                           ;	Fail-Safe Clock Monitor Enable bit
  3296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3297                           ;	Internal/External Oscillator Switchover bit
  3298                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3299   300001                     	org	3145729
  3300   300001  05                 	db	5
  3301                           
  3302                           ;Config register CONFIG2L @ 0x300002
  3303                           ;	Power-up Timer Enable bit
  3304                           ;	PWRT = ON, PWRT enabled
  3305                           ;	Brown-out Reset Enable bits
  3306                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3307                           ;	Brown-out Reset Voltage bits
  3308                           ;	BORV = 3, Minimum setting 2.05V
  3309                           ;	USB Voltage Regulator Enable bit
  3310                           ;	VREGEN = OFF, USB voltage regulator disabled
  3311   300002                     	org	3145730
  3312   300002  18                 	db	24
  3313                           
  3314                           ;Config register CONFIG2H @ 0x300003
  3315                           ;	Watchdog Timer Enable bit
  3316                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3317                           ;	Watchdog Timer Postscale Select bits
  3318                           ;	WDTPS = 32768, 1:32768
  3319   300003                     	org	3145731
  3320   300003  1E                 	db	30
  3321                           
  3322                           ; Padding undefined space
  3323   300004                     	org	3145732
  3324   300004  FF                 	db	255
  3325                           
  3326                           ;Config register CONFIG3H @ 0x300005
  3327                           ;	CCP2 MUX bit
  3328                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3329                           ;	PORTB A/D Enable bit
  3330                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3331                           ;	Low-Power Timer 1 Oscillator Enable bit
  3332                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3333                           ;	MCLR Pin Enable bit
  3334                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3335   300005                     	org	3145733
  3336   300005  81                 	db	129
  3337                           
  3338                           ;Config register CONFIG4L @ 0x300006
  3339                           ;	Stack Full/Underflow Reset Enable bit
  3340                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3341                           ;	Single-Supply ICSP Enable bit
  3342                           ;	LVP = OFF, Single-Supply ICSP disabled
  3343                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3344                           ;	ICPRT = OFF, ICPORT disabled
  3345                           ;	Extended Instruction Set Enable bit
  3346                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3347                           ;	Background Debugger Enable bit
  3348                           ;	DEBUG = 0x1, unprogrammed default
  3349   300006                     	org	3145734
  3350   300006  80                 	db	128
  3351                           
  3352                           ; Padding undefined space
  3353   300007                     	org	3145735
  3354   300007  FF                 	db	255
  3355                           
  3356                           ;Config register CONFIG5L @ 0x300008
  3357                           ;	Code Protection bit
  3358                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3359                           ;	Code Protection bit
  3360                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3361                           ;	Code Protection bit
  3362                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3363                           ;	Code Protection bit
  3364                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3365   300008                     	org	3145736
  3366   300008  0F                 	db	15
  3367                           
  3368                           ;Config register CONFIG5H @ 0x300009
  3369                           ;	Boot Block Code Protection bit
  3370                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3371                           ;	Data EEPROM Code Protection bit
  3372                           ;	CPD = OFF, Data EEPROM is not code-protected
  3373   300009                     	org	3145737
  3374   300009  C0                 	db	192
  3375                           
  3376                           ;Config register CONFIG6L @ 0x30000A
  3377                           ;	Write Protection bit
  3378                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3379                           ;	Write Protection bit
  3380                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3381                           ;	Write Protection bit
  3382                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3383                           ;	Write Protection bit
  3384                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3385   30000A                     	org	3145738
  3386   30000A  0F                 	db	15
  3387                           
  3388                           ;Config register CONFIG6H @ 0x30000B
  3389                           ;	Configuration Register Write Protection bit
  3390                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3391                           ;	Boot Block Write Protection bit
  3392                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3393                           ;	Data EEPROM Write Protection bit
  3394                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3395   30000B                     	org	3145739
  3396   30000B  E0                 	db	224
  3397                           
  3398                           ;Config register CONFIG7L @ 0x30000C
  3399                           ;	Table Read Protection bit
  3400                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3401                           ;	Table Read Protection bit
  3402                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3403                           ;	Table Read Protection bit
  3404                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3405                           ;	Table Read Protection bit
  3406                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3407   30000C                     	org	3145740
  3408   30000C  0F                 	db	15
  3409                           
  3410                           ;Config register CONFIG7H @ 0x30000D
  3411                           ;	Boot Block Table Read Protection bit
  3412                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3413   30000D                     	org	3145741
  3414   30000D  40                 	db	64
  3415                           tosu	equ	0xFFF
  3416                           tosh	equ	0xFFE
  3417                           tosl	equ	0xFFD
  3418                           stkptr	equ	0xFFC
  3419                           pclatu	equ	0xFFB
  3420                           pclath	equ	0xFFA
  3421                           pcl	equ	0xFF9
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           prodh	equ	0xFF4
  3427                           prodl	equ	0xFF3
  3428                           indf0	equ	0xFEF
  3429                           postinc0	equ	0xFEE
  3430                           postdec0	equ	0xFED
  3431                           preinc0	equ	0xFEC
  3432                           plusw0	equ	0xFEB
  3433                           fsr0h	equ	0xFEA
  3434                           fsr0l	equ	0xFE9
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           postinc1	equ	0xFE6
  3438                           postdec1	equ	0xFE5
  3439                           preinc1	equ	0xFE4
  3440                           plusw1	equ	0xFE3
  3441                           fsr1h	equ	0xFE2
  3442                           fsr1l	equ	0xFE1
  3443                           bsr	equ	0xFE0
  3444                           indf2	equ	0xFDF
  3445                           postinc2	equ	0xFDE
  3446                           postdec2	equ	0xFDD
  3447                           preinc2	equ	0xFDC
  3448                           plusw2	equ	0xFDB
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        28
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(1) Largest target is 3
		 -> main@buff(COMRAM[3]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 18
		 -> main@buff(COMRAM[3]), STR_1(CODE[2]), STR_2(CODE[18]), STR_3(CODE[18]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 3
		 -> main@buff(COMRAM[3]), 

    special_char@data	PTR unsigned char  size(1) Largest target is 8
		 -> data1(COMRAM[8]), data2(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _trata_teclas->_varre_teclas
    _special_char->_lcd_cmd
    _special_char->_lcd_dat
    _print_special_character->___awdiv
    _lcd_str->_itoa
    _lcd_dat->_atraso_ms
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _itoa->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9599
                                             20 COMRAM     6     6      0
                    _init_interrupts
                        _init_timer0
                               _itoa
                            _lcd_cmd
                           _lcd_init
                            _lcd_pos
                     _lcd_set_cursor
                            _lcd_str
            _print_special_character
                       _special_char
                       _trata_teclas
 ---------------------------------------------------------------------------------
 (1) _trata_teclas                                         2     2      0      75
                                              1 COMRAM     2     2      0
                       _varre_teclas
 ---------------------------------------------------------------------------------
 (2) _varre_teclas                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _special_char                                         4     3      1    1564
                                              6 COMRAM     4     3      1
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _print_special_character                              2     1      1    2046
                                              8 COMRAM     2     1      1
                            ___awdiv
                            _lcd_cmd
                            _lcd_dat
                            _lcd_pos (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    1131
                                             15 COMRAM     5     3      2
                               _itoa (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       3     2      1     961
                                              6 COMRAM     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_pos                                              6     2      4     566
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1285
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2     624
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 3     0      3    1213
                                             12 COMRAM     3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_interrupts
   _init_timer0
   _itoa
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_pos
   _lcd_set_cursor
     _lcd_cmd
   _lcd_str
     _itoa (ARG)
     _lcd_dat (ARG)
       _atraso_ms
       _lcd_wr
   _print_special_character
     ___awdiv
     _lcd_cmd
     _lcd_dat
     _lcd_pos (ARG)
   _special_char
     _lcd_cmd
     _lcd_dat
   _trata_teclas
     _varre_teclas

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      3C       1       63.8%
BITBIGSFRhhllhh     2A      0       0      23        0.0%
BITBIGSFRl          21      0       0      27        0.0%
BITBIGSFRhhlh       1B      0       0      21        0.0%
BITBIGSFRhhllhh     13      0       0      22        0.0%
BITBIGSFRhhlll       E      0       0      25        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhllhl      1      0       0      24        0.0%
BITBIGSFRhl          1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      28        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jun 05 22:09:31 2024

                              l41 15C6                                l33 13FE                                l50 16EC  
                              l27 10C2                                l53 1692                                l38 1590  
                              l56 1668                                l65 131C                                l59 1526  
                              l75 157E                                u30 0F8E                                u31 0F8A  
                              u40 0FA0                                u41 0F9C                                u50 0FB2  
                              u51 0FAE                                u60 0FC4                                u61 0FC0  
                              u70 0FE0                                u71 0FDC                                u80 0FF2  
                              u81 0FEE                                u90 1004                                u91 1000  
                    ___awdiv@sign 0022                               l115 1604                               l125 0D28  
                             l118 16BA                               l234 16F2                               l237 16E4  
                             l254 1466                               l510 12A4                               l259 0D6A  
                             l276 0F6A                      _trata_teclas 1392                               l765 1390  
                             l758 1388                               l775 14CA                               l768 14C2  
               ??_init_interrupts 001D                               u100 1016                               u101 1012  
                             u110 1032                               u111 102E                               u120 1044  
                             u121 1040                               u130 1056                               u131 1052  
                             u140 1068                               u141 1064                               u150 1084  
                             u310 13AA                               u151 1080                               u311 13A6  
                             u160 1096                               u320 13BA                               u161 1092  
                             u321 13B6                               u170 10A8                               u330 13CE  
                             u171 10A4                               u331 13CA                               u180 10BA  
                             u340 13F2                               u181 10B6                               u341 13EE  
                             u600 1252                               u601 124E                               u610 126E  
                             u611 126A                               u700 130C                               u620 1294  
                             u621 1290                               u630 1338                               u550 15AC  
                             u710 131C                               u631 1334                               u551 15A8  
                             u711 1318                               u640 1356                               u560 15C6  
                             u720 1604                               u641 1352                               u561 15C2  
                             u721 1600                               u650 1372                               u570 11F4  
                             u730 0E42                               u651 136E                               u707 1302  
                             u571 11F0                               u731 0E3E                               u660 147A  
                             u580 120E                               u740 0E62                               u661 1476  
                             u581 120A                               u741 0E5E                               u670 1498  
                             u590 1234                               u750 0E88                               u671 1494  
                             u591 1230                               u807 0F5A                               u751 0E84  
                             u680 14AE                               u760 0EAC                               u681 14AA  
                             u817 13D4                               u761 0EA8                               u690 12DA  
                             u770 0ED2                               u827 0F7C                               u771 0ECE  
                             u780 0F14                               u837 0FCE                               u781 0F10  
                             u790 0F3C                               u847 1020                               u791 0F38  
                             u697 12D0                               u857 1072                               wreg 0FE8  
                 ?_lcd_set_cursor 0023                       lcd_pos@line 001D                              l1100 1032  
                            l1110 105A                              l1102 1036                              l1040 16E8  
                            l2000 1696                              l1120 1076                              l1112 1068  
                            l1104 1044                              l2002 0816                              l1130 10A8  
                            l1122 1084                              l1114 106C                              l1106 1048  
                            l1050 0F78                              l1042 0F6E                              l2100 0960  
                            l2020 0832                              l2012 0826                              l2004 081A  
                            l1132 10AC                              l1124 1088                              l1116 106E  
                            l1108 1056                              l1060 0FA0                              l1052 0F7A  
                            l1044 0F72                              l1134 10BA                              l1126 1096  
                            l1118 1070                              l1070 0FC8                              l1062 0FA4  
                            l1054 0F80                              l1046 0F74                              l2200 0AAC  
                            l2120 097E                              l2112 0972                              l2104 0966  
                            l2040 0850                              l2032 0844                              l2024 0838  
                            l2016 082C                              l2008 0820                              l1136 10BE  
                            l1128 109A                              l1080 0FE4                              l1072 0FCA  
                            l1064 0FB2                              l1056 0F8E                              l1048 0F76  
                            l1090 1016                              l1082 0FF2                              l1074 0FCC  
                            l1066 0FB6                              l1058 0F92                              l1250 1392  
                            l2300 0BF8                              l2220 0ACA                              l2212 0ABE  
                            l2204 0AB2                              l2140 099C                              l2132 0990  
                            l2124 0984                              l2116 0978                              l2108 096C  
                            l2060 086E                              l2052 0862                              l2044 0856  
                            l2036 084A                              l2028 083E                              l1092 101A  
                            l1084 0FF6                              l1076 0FD2                              l1068 0FC4  
                            l1260 13DE                              l1252 1398                              l1094 101C  
                            l1086 1004                              l1078 0FE0                              l1262 13F2  
                            l1254 13AA                              l2320 0C16                              l2312 0C0A  
                            l2304 0BFE                              l2240 0AE8                              l2232 0ADC  
                            l2224 0AD0                              l2216 0AC4                              l2208 0AB8  
                            l2160 09BA                              l2152 09AE                              l2144 09A2  
                            l2136 0996                              l2128 098A                              l2080 088C  
                            l2072 0880                              l2064 0874                              l2056 0868  
                            l2048 085C                              l1096 101E                              l1088 1008  
                            l1256 13BA                              l2400 0E0E                              l2170 09C6  
                            l1098 1024                              l1258 13CE                              l1266 13F8  
                            l2410 0E62                              l2402 0E2A                              l2332 0C28  
                            l2324 0C1C                              l2316 0C10                              l2308 0C04  
                            l2260 0BBC                              l2244 0AEE                              l2236 0AE2  
                            l2228 0AD6                              l2180 0A8E                              l2172 0A82  
                            l2164 09C0                              l2156 09B4                              l2148 09A8  
                            l2092 0954                              l2076 0886                              l2068 087A  
                            l1268 13FC                              l2420 0EB6                              l2412 0E6C  
                            l2404 0E30                              l2254 0AFA                              l2086 0892  
                            l2342 0CEA                              l2430 0F14                              l2422 0ED2  
                            l2414 0E88                              l2328 0C22                              l2280 0BDA  
                            l2272 0BCE                              l2264 0BC2                              l2256 0BB6  
                            l2248 0AF4                              l2192 0AA0                              l2184 0A94  
                            l2176 0A88                              l2096 095A                              l2088 094E  
                            l2344 0D26                              l2432 0F28                              l2416 0E90  
                            l2408 0E46                              l2370 1458                              l2338 0C2E  
                            l2434 0F3C                              l2418 0EAC                              l2426 0EDA  
                            l2372 1464                              l2292 0BEC                              l2284 0BE0  
                            l2276 0BD4                              l2268 0BC8                              l2196 0AA6  
                            l2188 0A9A                              l2460 09DC                              l1900 1258  
                            l2436 0F50                              l2428 0F00                              l2380 0D42  
                            l1830 1580                              l2462 0B10                              l1902 126E  
                            l1910 1284                              l2390 0D60                              l2382 0D48  
                            l1920 1326                              l2368 1400                              l1840 159C  
                            l1832 158C                              l2464 0C44                              l2296 0BF2  
                            l2288 0BE6                              l1912 1294                              l1904 1276  
                            l2392 0DCE                              l2384 0D4E                              l2376 0D2A  
                            l1690 16E2                              l1930 135C                              l1922 1338  
                            l1842 15AC                              l1850 1674                              l2466 0D00  
                            l2458 08A8                              l1914 129C                              l1906 1278  
                            l2394 0DEA                              l2386 0D52                              l2378 0D3E  
                            l1684 16EE                              l1932 1372                              l1924 1340  
                            l1940 1468                              l1844 15B0                              l1852 1676  
                            l1860 1642                              l1908 127E                              l2396 0DF4  
                            l2388 0D56                              l1686 16D8                              l1934 137A  
                            l1926 1348                              l1918 131E                              l1950 14AE  
                            l1942 147A                              l1838 159A                              l1854 1682  
                            l1846 166C                              l1870 165A                              l1862 1644  
                            l2398 0E04                              l1688 16E0                              l1936 137C  
                            l1928 1356                              l1952 14B6                              l1944 1482  
                            l1856 1684                              l1848 166E                              l1960 14DC  
                            l1872 1666                              l1864 164A                              l1880 11FC  
                            l1938 1382                              l1954 14BC                              l1946 148A  
                            l1858 1690                              l1970 152A                              l1866 164C  
                            l1962 12A6                              l1890 1222                              l1882 1200  
                            l1874 11E2                              l1948 1498                              l1956 14CC  
                            l1972 152E                              l1868 1658                              l1964 12AE  
                            l1892 1234                              l1884 120E                              l1876 11E6  
                            l1958 14D0                              l1974 1536                              l1966 12DE  
                            l1894 123C                              l1886 1216                              l1878 11F4  
                            l1990 15CA                              l1976 153E                              l1984 154E  
                            l1968 12E0                              l1896 1244                              l1888 121A  
                            l1992 15D2                              l1978 1546                              l1986 1574  
                            l1898 1252                              l1994 15DC                              l1988 1578  
                            l1996 15EA                              l1998 15EE                              STR_1 0813  
                            STR_2 0801                              STR_3 0801                              _main 0D2A  
                            _itoa 1400                              fsr0h 0FEA                              indf0 0FEF  
                            fsr2h 0FDA                              fsr0l 0FE9                              indf2 0FDF  
                            fsr1l 0FE1                              fsr2l 0FD9                              btemp 003D  
                            start 000E                      ___param_bank 0000                             ?_main 001D  
                           ?_itoa 0029                   __end_of___awdiv 12A6                             _T0CON 0FD5  
                 ___awdiv@divisor 001F                   __end_of___lwdiv 1392                   __end_of___lwmod 14CC  
                           i2l251 11DE                   ___awdiv@counter 0021                             _TMR0L 0FD6  
                           _PORTB 0F81                             _PORTD 0F83                             _TRISB 0F93  
                           _TRISD 0F95                             _TRISE 0F96                      ?_init_timer0 001D  
                 __end_of_lcd_dat 166A                   __end_of_lcd_cmd 1694                   __end_of_lcd_pos 0D2A  
                 __end_of_lcd_str 131E                             _data1 0015                             _data2 000D  
                           _tecla 003C                             tablat 0FF5                             ttemp5 003E  
                           ttemp6 0041                             ttemp7 0045                             status 0FD8  
                           wtemp8 003E                   __initialization 1606                      __end_of_main 0F6E  
                    __end_of_itoa 1468                            ??_main 0031                            ??_itoa 002C  
                   __activetblptr 0002                            _ADCON1 0FC1                  ___awdiv@dividend 001D  
                          i2l1700 10C6                            i2l1710 10FA                            i2l1702 10D4  
                          i2l1720 1148                            i2l1712 110E                            i2l1704 10D8  
                          i2l1730 1194                            i2l1722 115C                            i2l1714 1116  
                          i2l1706 10E0                            i2l1740 11C4                            i2l1732 119C  
                          i2l1724 1174                            i2l1716 1128                            i2l1708 10E8  
                          i2l1742 11CC                            i2l1734 11A4                            i2l1726 117C  
                          i2l1718 1140                            i2l1744 11D4                            i2l1728 1190  
                          i2l1736 11AC                            i2l1738 11C0                            i2l1746 11DC  
print_special_character@cgram_loc 0026                  __end_of_lcd_init 1528                  __end_of_high_isr 11E2  
                          _ball_x 0007                            _ball_y 0005                         ??___awdiv 0021  
                       ??___lwdiv 0026                         ??___lwmod 0021                            _lcd_wr 16E6  
                 varre_teclas@key 001D                  ___awdiv@quotient 0023                            _score1 0039  
                          _score2 0037                            isa$std 0001                         ??_lcd_dat 0022  
                       ??_lcd_cmd 0022                         ??_lcd_pos 0021                         ??_lcd_str 002E  
                    __pdataCOMRAM 0001           _print_special_character 1694                      __mediumconst 0000  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 1632                     ___rparam_used 0001  
                 _init_interrupts 16EE                    __pcstackCOMRAM 001D                  ??_lcd_set_cursor 0024  
                      _ball_dir_x 0003                        _ball_dir_y 0001                           ?_lcd_wr 001D  
       ??_print_special_character 0026                     trata_teclas@t 001F                           i2u40_40 10FA  
                         i2u40_41 10F6                           i2u41_40 110E                           i2u41_41 110A  
                         i2u42_40 1128                           i2u42_41 1124                           i2u43_40 1140  
                         i2u43_41 113C                           i2u44_40 115C                           i2u44_41 1158  
                         i2u45_40 1174                           i2u45_41 1170                           i2u46_40 1190  
                         i2u46_41 118C                           i2u47_40 11C0                           i2u39_40 10D4  
                         i2u47_41 11BC                           i2u39_41 10D0                         ?_lcd_init 001D  
                       ?_high_isr 001D           __end_of_init_interrupts 16F4                           __Hparam 0000  
                         __Lparam 0000                           ___awdiv 11E2                           ___lwdiv 131E  
                         ___lwmod 1468                 __end_of_atraso_ms 15C8                      __psmallconst 0800  
                         __pcinit 1606                           __ramtop 0800                           __ptext0 0D2A  
                         __ptext1 1392                           __ptext2 0F6E                           __ptext3 15C8  
                         __ptext4 1694                           __ptext5 11E2                           __ptext6 12A6  
                         __ptext7 1640                           __ptext8 1528                           __ptext9 0816  
                         _lcd_dat 1640                           _lcd_cmd 166A                           _lcd_pos 0816  
                         _lcd_str 12A6             special_char@cgram_loc 0024                        ??_lcd_init 0023  
                      ??_high_isr 001D                    __pintcode_body 10C4              end_of_initialization 1632  
                      _tecla_pres 003B   __end_of_print_special_character 16BC                           itoa@val 0029  
                   __Lmediumconst 0000                           itoa@str 002B                           int_func 10C4  
                   ?_special_char 0023                           postdec1 0FE5                           postinc0 0FEE  
                   ?_varre_teclas 001D                         _PORTBbits 0F81                         _PORTEbits 0F84  
                      lcd_dat@val 0022                        lcd_cmd@val 0022                  ?_init_interrupts 001D  
                      lcd_pos@col 001F                    ??_special_char 0024                        lcd_str@str 002C  
                  ??_varre_teclas 001D                        atraso_ms@i 001F                        atraso_ms@j 0021  
                   __pidataCOMRAM 16BC                    __end_of_lcd_wr 16EE                     ?_trata_teclas 001D  
             start_initialization 1606             lcd_set_cursor@address 0025                          ??_lcd_wr 001D  
                  ??_trata_teclas 001E                     ??_init_timer0 001D                       __pbssCOMRAM 0037  
                ___lwdiv@dividend 0022                         __pintcode 0008                          ?___awdiv 001D  
                        ?___lwdiv 0022                          ?___lwmod 001D                          ?_lcd_dat 001D  
                        ?_lcd_cmd 001D                          ?_lcd_pos 001D                          ?_lcd_str 002C  
                       _atraso_ms 1580                       __smallconst 0800              __end_of_special_char 1606  
                ___lwdiv@quotient 0026              __end_of_varre_teclas 10C4               __end_of_init_timer0 16E6  
                  atraso_ms@valor 001D          ?_print_special_character 0025                        ?_atraso_ms 001D  
  print_special_character@lcd_loc 0025                         lcd_wr@val 001D                         copy_data0 161A  
            __end_of_trata_teclas 1400                          __Hrparam 0000                          __Lrparam 0000  
                 main@tecla_atual 0036                       _init_timer0 16D8                   ___lwdiv@divisor 0024  
                 ___lwdiv@counter 0028                          __ptext10 14CC                          __ptext11 166A  
                        __ptext12 16E6                          __ptext13 1580                          __ptext14 1400  
                        __ptext15 1468                          __ptext16 131E                          __ptext17 16D8  
                        __ptext18 16EE                          _lcd_init 14CC                          _high_isr 0008  
                        isa$xinst 0000                          int$flags 003D                          main@buff 0033  
                        lcd_str@i 0030                  special_char@data 0023                       ??_atraso_ms 001F  
                      _INTCONbits 0FF2                       _player1_pos 000B                       _player2_pos 0009  
                        intlevel2 0000                    _lcd_set_cursor 1528                 lcd_set_cursor@col 0024  
               lcd_set_cursor@row 0023                  ___lwmod@dividend 001D                      _special_char 15C8  
                    _varre_teclas 0F6E                   ___lwmod@divisor 001F                   ___lwmod@counter 0021  
          __end_of_lcd_set_cursor 1580                     special_char@j 0025  
