

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jun 10 20:52:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 17/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73                           	psect	idataCOMRAM
    74   001804                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _bullet_y
    78   001804  FFFF               	dw	65535
    79                           
    80                           ;initializer for _bullet_x
    81   001806  FFFF               	dw	65535
    82                           
    83                           ;initializer for _ship_pos_z
    84   001808  0003               	dw	3
    85                           
    86                           ;initializer for _ship_pos_y
    87   00180A  0003               	dw	3
    88                           
    89                           ;initializer for _ship_posz
    90   00180C  0004               	dw	4
    91                           
    92                           ;initializer for _ship_pos
    93   00180E  0003               	dw	3
    94                           
    95                           ;initializer for _data2
    96   001810  04                 	db	4
    97   001811  0E                 	db	14
    98   001812  0E                 	db	14
    99   001813  04                 	db	4
   100   001814  00                 	db	0
   101   001815  1F                 	db	31
   102   001816  0A                 	db	10
   103   001817  00                 	db	0
   104                           
   105                           ;initializer for _data3
   106   001818  03                 	db	3
   107   001819  0F                 	db	15
   108   00181A  1E                 	db	30
   109   00181B  01                 	db	1
   110   00181C  07                 	db	7
   111   00181D  0E                 	db	14
   112   00181E  04                 	db	4
   113   00181F  00                 	db	0
   114                           
   115                           ;initializer for _data1
   116   001820  00                 	db	0
   117   001821  0A                 	db	10
   118   001822  1F                 	db	31
   119   001823  1F                 	db	31
   120   001824  1F                 	db	31
   121   001825  0E                 	db	14
   122   001826  04                 	db	4
   123   001827  00                 	db	0
   124   000000                     _PORTB	set	3969
   125   000000                     _PORTBbits	set	3969
   126   000000                     _PORTD	set	3971
   127   000000                     _TRISB	set	3987
   128   000000                     _T0CON	set	4053
   129   000000                     _INTCONbits	set	4082
   130   000000                     _TMR0L	set	4054
   131   000000                     _TRISD	set	3989
   132   000000                     _ADCON1	set	4033
   133   000000                     _TRISE	set	3990
   134   000000                     _PORTEbits	set	3972
   135                           
   136                           	psect	smallconst
   137   000800                     __psmallconst:
   138                           	callstack 0
   139   000800  00                 	db	0
   140   000801                     STR_1:
   141   000801  2A                 	db	42
   142   000802  00                 	db	0
   143   000803  00                 	db	0	; dummy byte at the end
   144   000000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148   001708                     __pcinit:
   149                           	callstack 0
   150   001708                     start_initialization:
   151                           	callstack 0
   152   001708                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (36 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157   001708  0E04               	movlw	low __pidataCOMRAM
   158   00170A  6EF6               	movwf	tblptrl,c
   159   00170C  0E18               	movlw	high __pidataCOMRAM
   160   00170E  6EF7               	movwf	tblptrh,c
   161   001710  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162   001712  6EF8               	movwf	tblptru,c
   163   001714  EE00  F001         	lfsr	0,__pdataCOMRAM
   164   001718  EE10 F024          	lfsr	1,36
   165   00171C                     copy_data0:
   166   00171C  0009               	tblrd		*+
   167   00171E  CFF5 FFEE          	movff	tablat,postinc0
   168   001722  50E5               	movf	postdec1,w,c
   169   001724  50E1               	movf	fsr1l,w,c
   170   001726  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to BANK0 (54 bytes)
   173   001728  EE00  F060         	lfsr	0,__pbssBANK0
   174   00172C  0E36               	movlw	54
   175   00172E                     clear_0:
   176   00172E  6AEE               	clrf	postinc0,c
   177   001730  06E8               	decf	wreg,f,c
   178   001732  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to COMRAM (4 bytes)
   181   001734  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   182   001736  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   183   001738  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184   00173A  6A49               	clrf	__pbssCOMRAM& (0+255),c
   185   00173C                     end_of_initialization:
   186                           	callstack 0
   187   00173C                     __end_of__initialization:
   188                           	callstack 0
   189   00173C  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190   00173E  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191   001740  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192   001742  6EF8               	movwf	tblptru,c
   193   001744  0100               	movlb	0
   194   001746  EF8C  F006         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000049                     __pbssCOMRAM:
   198                           	callstack 0
   199   000049                     _score:
   200                           	callstack 0
   201   000049                     	ds	2
   202   00004B                     _tecla_pres:
   203                           	callstack 0
   204   00004B                     	ds	1
   205   00004C                     _tecla:
   206                           	callstack 0
   207   00004C                     	ds	1
   208                           
   209                           	psect	dataCOMRAM
   210   000001                     __pdataCOMRAM:
   211                           	callstack 0
   212   000001                     _bullet_y:
   213                           	callstack 0
   214   000001                     	ds	2
   215   000003                     _bullet_x:
   216                           	callstack 0
   217   000003                     	ds	2
   218   000005                     _ship_pos_z:
   219                           	callstack 0
   220   000005                     	ds	2
   221   000007                     _ship_pos_y:
   222                           	callstack 0
   223   000007                     	ds	2
   224   000009                     _ship_posz:
   225                           	callstack 0
   226   000009                     	ds	2
   227   00000B                     _ship_pos:
   228                           	callstack 0
   229   00000B                     	ds	2
   230   00000D                     _data2:
   231                           	callstack 0
   232   00000D                     	ds	8
   233   000015                     _data3:
   234                           	callstack 0
   235   000015                     	ds	8
   236   00001D                     _data1:
   237                           	callstack 0
   238   00001D                     	ds	8
   239                           
   240                           	psect	bssBANK0
   241   000060                     __pbssBANK0:
   242                           	callstack 0
   243   000060                     _invaders:
   244                           	callstack 0
   245   000060                     	ds	54
   246                           
   247                           	psect	cstackCOMRAM
   248   000025                     __pcstackCOMRAM:
   249                           	callstack 0
   250   000025                     ??_high_isr:
   251   000025                     
   252                           ; 1 bytes @ 0x0
   253   000025                     	ds	6
   254   00002B                     high_isr@i:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x6
   258   00002B                     	ds	2
   259   00002D                     ?___awdiv:
   260                           	callstack 0
   261   00002D                     ?___lwmod:
   262                           	callstack 0
   263   00002D                     varre_teclas@key:
   264                           	callstack 0
   265   00002D                     lcd_wr@val:
   266                           	callstack 0
   267   00002D                     atraso_ms@valor:
   268                           	callstack 0
   269   00002D                     lcd_pos@col:
   270                           	callstack 0
   271   00002D                     ___awdiv@dividend:
   272                           	callstack 0
   273   00002D                     ___lwmod@dividend:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   00002D                     	ds	1
   278   00002E                     ??_trata_teclas:
   279                           
   280                           ; 1 bytes @ 0x9
   281   00002E                     	ds	1
   282   00002F                     trata_teclas@t:
   283                           	callstack 0
   284   00002F                     atraso_ms@i:
   285                           	callstack 0
   286   00002F                     lcd_pos@line:
   287                           	callstack 0
   288   00002F                     ___awdiv@divisor:
   289                           	callstack 0
   290   00002F                     ___lwmod@divisor:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xA
   294   00002F                     	ds	2
   295   000031                     ??_lcd_pos:
   296   000031                     atraso_ms@j:
   297                           	callstack 0
   298   000031                     ___awdiv@counter:
   299                           	callstack 0
   300   000031                     ___lwmod@counter:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xC
   304   000031                     	ds	1
   305   000032                     ?___lwdiv:
   306                           	callstack 0
   307   000032                     lcd_cmd@val:
   308                           	callstack 0
   309   000032                     lcd_dat@val:
   310                           	callstack 0
   311   000032                     ___awdiv@sign:
   312                           	callstack 0
   313   000032                     ___lwdiv@dividend:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xD
   317   000032                     	ds	1
   318   000033                     special_char@data:
   319                           	callstack 0
   320   000033                     lcd_set_cursor@row:
   321                           	callstack 0
   322   000033                     ___awdiv@quotient:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xE
   326   000033                     	ds	1
   327   000034                     special_char@cgram_loc:
   328                           	callstack 0
   329   000034                     lcd_set_cursor@col:
   330                           	callstack 0
   331   000034                     ___lwdiv@divisor:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xF
   335   000034                     	ds	1
   336   000035                     print_special_character@lcd_loc:
   337                           	callstack 0
   338   000035                     lcd_set_cursor@address:
   339                           	callstack 0
   340   000035                     special_char@j:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x10
   344   000035                     	ds	1
   345   000036                     print_special_character@cgram_loc:
   346                           	callstack 0
   347   000036                     ___lwdiv@quotient:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x11
   351   000036                     	ds	2
   352   000038                     ___lwdiv@counter:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x13
   356   000038                     	ds	1
   357   000039                     itoa@val:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x14
   361   000039                     	ds	2
   362   00003B                     itoa@str:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x16
   366   00003B                     	ds	1
   367   00003C                     lcd_str@str:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x17
   371   00003C                     	ds	2
   372   00003E                     ??_lcd_str:
   373                           
   374                           ; 1 bytes @ 0x19
   375   00003E                     	ds	2
   376   000040                     lcd_str@i:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x1B
   380   000040                     	ds	1
   381   000041                     ??_main:
   382                           
   383                           ; 1 bytes @ 0x1C
   384   000041                     	ds	2
   385   000043                     main@buff:
   386                           	callstack 0
   387                           
   388                           ; 3 bytes @ 0x1E
   389   000043                     	ds	3
   390   000046                     main@tecla_atual:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x21
   394   000046                     	ds	1
   395   000047                     main@i:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x22
   399   000047                     	ds	2
   400                           
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 230 in file "../invaders.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  i               2   34[COMRAM] int 
   411 ;;  tecla_atual     1   33[COMRAM] unsigned char 
   412 ;;  buff            3   30[COMRAM] unsigned char [3]
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         6       0       0       0       0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0       0       0       0       0
   425 ;;      Totals:         8       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        8 bytes
   427 ;; Hardware stack levels required when called: 4
   428 ;; This function calls:
   429 ;;		_inicializar
   430 ;;		_init_timer0
   431 ;;		_itoa
   432 ;;		_lcd_cmd
   433 ;;		_lcd_init
   434 ;;		_lcd_pos
   435 ;;		_lcd_set_cursor
   436 ;;		_lcd_str
   437 ;;		_print_special_character
   438 ;;		_special_char
   439 ;;		_trata_teclas
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text0
   446   000D18                     __ptext0:
   447                           	callstack 0
   448   000D18                     _main:
   449                           	callstack 27
   450   000D18                     
   451                           ;invaders.c: 232: inicializar();
   452   000D18  EC23  F009         	call	_inicializar	;wreg free
   453   000D1C                     
   454                           ;invaders.c: 233: TRISB = 0xF0;
   455   000D1C  0EF0               	movlw	240
   456   000D1E  6E93               	movwf	147,c	;volatile
   457   000D20                     
   458                           ;invaders.c: 234: PORTB = 0x00;
   459   000D20  0E00               	movlw	0
   460   000D22  6E81               	movwf	129,c	;volatile
   461   000D24                     
   462                           ;invaders.c: 236: TRISD=0x00;
   463   000D24  0E00               	movlw	0
   464   000D26  6E95               	movwf	149,c	;volatile
   465   000D28                     
   466                           ;invaders.c: 237: TRISE=0x00;
   467   000D28  0E00               	movlw	0
   468   000D2A  6E96               	movwf	150,c	;volatile
   469   000D2C                     
   470                           ;invaders.c: 238: ADCON1 = 0x0F;
   471   000D2C  0E0F               	movlw	15
   472   000D2E  6EC1               	movwf	193,c	;volatile
   473   000D30                     
   474                           ;invaders.c: 240: lcd_init();
   475   000D30  EC06  F00B         	call	_lcd_init	;wreg free
   476   000D34                     
   477                           ;invaders.c: 241: lcd_cmd(0x0C);
   478   000D34  0E0C               	movlw	12
   479   000D36  ECD9  F00B         	call	_lcd_cmd
   480   000D3A                     
   481                           ;invaders.c: 242: lcd_cmd(0x01);
   482   000D3A  0E01               	movlw	1
   483   000D3C  ECD9  F00B         	call	_lcd_cmd
   484   000D40                     
   485                           ;invaders.c: 246: init_timer0();
   486   000D40  EC14  F00C         	call	_init_timer0	;wreg free
   487   000D44                     
   488                           ;invaders.c: 248: special_char(64, data1);
   489   000D44  0E1D               	movlw	low _data1
   490   000D46  6E33               	movwf	special_char@data^0,c
   491   000D48  0E40               	movlw	64
   492   000D4A  ECA5  F00B         	call	_special_char
   493   000D4E                     
   494                           ;invaders.c: 249: special_char(64, data3);
   495   000D4E  0E15               	movlw	low _data3
   496   000D50  6E33               	movwf	special_char@data^0,c
   497   000D52  0E40               	movlw	64
   498   000D54  ECA5  F00B         	call	_special_char
   499   000D58                     
   500                           ;invaders.c: 250: special_char(72, data2);
   501   000D58  0E0D               	movlw	low _data2
   502   000D5A  6E33               	movwf	special_char@data^0,c
   503   000D5C  0E48               	movlw	72
   504   000D5E  ECA5  F00B         	call	_special_char
   505   000D62                     l2587:
   506                           
   507                           ;invaders.c: 254: lcd_cmd(0x01);
   508   000D62  0E01               	movlw	1
   509   000D64  ECD9  F00B         	call	_lcd_cmd
   510   000D68                     
   511                           ;invaders.c: 258: print_special_character(64, lcd_pos(ship_pos,ship_pos_y));
   512   000D68  C00B  F02D         	movff	_ship_pos,lcd_pos@col	;volatile
   513   000D6C  C00C  F02E         	movff	_ship_pos+1,lcd_pos@col+1	;volatile
   514   000D70  C007  F02F         	movff	_ship_pos_y,lcd_pos@line	;volatile
   515   000D74  C008  F030         	movff	_ship_pos_y+1,lcd_pos@line+1	;volatile
   516   000D78  EC02  F004         	call	_lcd_pos	;wreg free
   517   000D7C  6E35               	movwf	print_special_character@lcd_loc^0,c
   518   000D7E  0E40               	movlw	64
   519   000D80  ECEE  F00B         	call	_print_special_character
   520   000D84                     
   521                           ;invaders.c: 259: print_special_character(64, lcd_pos(ship_posz,ship_pos_z));
   522   000D84  C009  F02D         	movff	_ship_posz,lcd_pos@col	;volatile
   523   000D88  C00A  F02E         	movff	_ship_posz+1,lcd_pos@col+1	;volatile
   524   000D8C  C005  F02F         	movff	_ship_pos_z,lcd_pos@line	;volatile
   525   000D90  C006  F030         	movff	_ship_pos_z+1,lcd_pos@line+1	;volatile
   526   000D94  EC02  F004         	call	_lcd_pos	;wreg free
   527   000D98  6E35               	movwf	print_special_character@lcd_loc^0,c
   528   000D9A  0E40               	movlw	64
   529   000D9C  ECEE  F00B         	call	_print_special_character
   530   000DA0                     
   531                           ;invaders.c: 261: if (bullet_x > 0) {
   532   000DA0  BE04               	btfsc	(_bullet_x+1)^0,7,c	;volatile
   533   000DA2  EFDB  F006         	goto	u1011
   534   000DA6  5004               	movf	(_bullet_x+1)^0,w,c	;volatile
   535   000DA8  E108               	bnz	u1010
   536   000DAA  0403               	decf	_bullet_x^0,w,c	;volatile
   537   000DAC  A0D8               	btfss	status,0,c
   538   000DAE  EFDB  F006         	goto	u1011
   539   000DB2  EFDD  F006         	goto	u1010
   540   000DB6                     u1011:
   541   000DB6  EFEA  F006         	goto	l2599
   542   000DBA                     u1010:
   543   000DBA                     
   544                           ;invaders.c: 262: lcd_set_cursor(bullet_x, bullet_y);
   545   000DBA  C001  F033         	movff	_bullet_y,lcd_set_cursor@row	;volatile
   546   000DBE  5003               	movf	_bullet_x^0,w,c	;volatile
   547   000DC0  EC34  F00B         	call	_lcd_set_cursor
   548   000DC4                     
   549                           ;invaders.c: 263: lcd_str("*");
   550   000DC4  0E01               	movlw	low STR_1
   551   000DC6  6E3C               	movwf	lcd_str@str^0,c
   552   000DC8  503C               	movf	lcd_str@str^0,w,c
   553   000DCA  A4D8               	btfss	status,2,c
   554   000DCC  0E08               	movlw	high __smallconst
   555   000DCE  6E3D               	movwf	(lcd_str@str+1)^0,c
   556   000DD0  ECF3  F009         	call	_lcd_str	;wreg free
   557   000DD4                     l2599:
   558                           
   559                           ;invaders.c: 264: };invaders.c: 266: for(int i =0; i<9;i++){
   560   000DD4  0E00               	movlw	0
   561   000DD6  6E48               	movwf	(main@i+1)^0,c
   562   000DD8  0E00               	movlw	0
   563   000DDA  6E47               	movwf	main@i^0,c
   564   000DDC                     l2605:
   565                           
   566                           ;invaders.c: 267: if(invaders[i].alive){
   567   000DDC  5047               	movf	main@i^0,w,c
   568   000DDE  0D06               	mullw	6
   569   000DE0  50F3               	movf	243,w,c
   570   000DE2  0F64               	addlw	low (_invaders+4)
   571   000DE4  6ED9               	movwf	fsr2l,c
   572   000DE6  6ADA               	clrf	fsr2h,c
   573   000DE8  50DE               	movf	postinc2,w,c
   574   000DEA  10DE               	iorwf	postinc2,w,c
   575   000DEC  B4D8               	btfsc	status,2,c
   576   000DEE  EFFB  F006         	goto	u1021
   577   000DF2  EFFD  F006         	goto	u1020
   578   000DF6                     u1021:
   579   000DF6  EF17  F007         	goto	l2609
   580   000DFA                     u1020:
   581   000DFA                     
   582                           ;invaders.c: 268: print_special_character(72, lcd_pos(invaders[i].coluna, invaders[i].li
      +                          nha));
   583   000DFA  5047               	movf	main@i^0,w,c
   584   000DFC  0D06               	mullw	6
   585   000DFE  50F3               	movf	243,w,c
   586   000E00  0F62               	addlw	low (_invaders+2)
   587   000E02  6ED9               	movwf	fsr2l,c
   588   000E04  6ADA               	clrf	fsr2h,c
   589   000E06  CFDE F02D          	movff	postinc2,lcd_pos@col
   590   000E0A  CFDD F02E          	movff	postdec2,lcd_pos@col+1
   591   000E0E  5047               	movf	main@i^0,w,c
   592   000E10  0D06               	mullw	6
   593   000E12  50F3               	movf	243,w,c
   594   000E14  0F60               	addlw	low _invaders
   595   000E16  6ED9               	movwf	fsr2l,c
   596   000E18  6ADA               	clrf	fsr2h,c
   597   000E1A  CFDE F02F          	movff	postinc2,lcd_pos@line
   598   000E1E  CFDD F030          	movff	postdec2,lcd_pos@line+1
   599   000E22  EC02  F004         	call	_lcd_pos	;wreg free
   600   000E26  6E35               	movwf	print_special_character@lcd_loc^0,c
   601   000E28  0E48               	movlw	72
   602   000E2A  ECEE  F00B         	call	_print_special_character
   603   000E2E                     l2609:
   604   000E2E  4A47               	infsnz	main@i^0,f,c
   605   000E30  2A48               	incf	(main@i+1)^0,f,c
   606   000E32  BE48               	btfsc	(main@i+1)^0,7,c
   607   000E34  EF25  F007         	goto	u1031
   608   000E38  5048               	movf	(main@i+1)^0,w,c
   609   000E3A  E109               	bnz	u1030
   610   000E3C  0E09               	movlw	9
   611   000E3E  5C47               	subwf	main@i^0,w,c
   612   000E40  A0D8               	btfss	status,0,c
   613   000E42  EF25  F007         	goto	u1031
   614   000E46  EF27  F007         	goto	u1030
   615   000E4A                     u1031:
   616   000E4A  EFEE  F006         	goto	l2605
   617   000E4E                     u1030:
   618   000E4E                     
   619                           ;invaders.c: 269: }};invaders.c: 272: lcd_set_cursor(1, 1);
   620   000E4E  0E01               	movlw	1
   621   000E50  6E33               	movwf	lcd_set_cursor@row^0,c
   622   000E52  0E01               	movlw	1
   623   000E54  EC34  F00B         	call	_lcd_set_cursor
   624   000E58                     
   625                           ;invaders.c: 273: lcd_str(itoa(score, buff));
   626   000E58  C049  F039         	movff	_score,itoa@val	;volatile
   627   000E5C  C04A  F03A         	movff	_score+1,itoa@val+1	;volatile
   628   000E60  0E43               	movlw	low main@buff
   629   000E62  6E3B               	movwf	itoa@str^0,c
   630   000E64  ECA0  F00A         	call	_itoa	;wreg free
   631   000E68  6E41               	movwf	??_main^0,c
   632   000E6A  C041  F03C         	movff	??_main,lcd_str@str
   633   000E6E  6A3D               	clrf	(lcd_str@str+1)^0,c
   634   000E70  ECF3  F009         	call	_lcd_str	;wreg free
   635   000E74                     
   636                           ;invaders.c: 277: char tecla_atual = trata_teclas();
   637   000E74  EC69  F00A         	call	_trata_teclas	;wreg free
   638   000E78  6E46               	movwf	main@tecla_atual^0,c
   639   000E7A                     
   640                           ;invaders.c: 278: if (tecla_atual != ' ') {
   641   000E7A  0E20               	movlw	32
   642   000E7C  1846               	xorwf	main@tecla_atual^0,w,c
   643   000E7E  B4D8               	btfsc	status,2,c
   644   000E80  EF44  F007         	goto	u1041
   645   000E84  EF46  F007         	goto	u1040
   646   000E88                     u1041:
   647   000E88  EFD3  F007         	goto	l2651
   648   000E8C                     u1040:
   649   000E8C  EFB8  F007         	goto	l2649
   650   000E90                     l2623:
   651                           
   652                           ;invaders.c: 282: if (ship_pos_y > 0){
   653   000E90  BE08               	btfsc	(_ship_pos_y+1)^0,7,c	;volatile
   654   000E92  EF53  F007         	goto	u1051
   655   000E96  5008               	movf	(_ship_pos_y+1)^0,w,c	;volatile
   656   000E98  E108               	bnz	u1050
   657   000E9A  0407               	decf	_ship_pos_y^0,w,c	;volatile
   658   000E9C  A0D8               	btfss	status,0,c
   659   000E9E  EF53  F007         	goto	u1051
   660   000EA2  EF55  F007         	goto	u1050
   661   000EA6                     u1051:
   662   000EA6  EFD3  F007         	goto	l2651
   663   000EAA                     u1050:
   664   000EAA                     
   665                           ;invaders.c: 283: ship_pos_y--;
   666   000EAA  0607               	decf	_ship_pos_y^0,f,c	;volatile
   667   000EAC  A0D8               	btfss	status,0,c
   668   000EAE  0608               	decf	(_ship_pos_y+1)^0,f,c	;volatile
   669   000EB0  EFD3  F007         	goto	l2651
   670   000EB4                     l2627:
   671                           
   672                           ;invaders.c: 287: if (ship_pos_y < 4){
   673   000EB4  BE08               	btfsc	(_ship_pos_y+1)^0,7,c	;volatile
   674   000EB6  EF68  F007         	goto	u1060
   675   000EBA  5008               	movf	(_ship_pos_y+1)^0,w,c	;volatile
   676   000EBC  E107               	bnz	u1061
   677   000EBE  0E04               	movlw	4
   678   000EC0  5C07               	subwf	_ship_pos_y^0,w,c	;volatile
   679   000EC2  B0D8               	btfsc	status,0,c
   680   000EC4  EF66  F007         	goto	u1061
   681   000EC8  EF68  F007         	goto	u1060
   682   000ECC                     u1061:
   683   000ECC  EFD3  F007         	goto	l2651
   684   000ED0                     u1060:
   685   000ED0                     
   686                           ;invaders.c: 288: ship_pos_y++;
   687   000ED0  4A07               	infsnz	_ship_pos_y^0,f,c	;volatile
   688   000ED2  2A08               	incf	(_ship_pos_y+1)^0,f,c	;volatile
   689   000ED4  EFD3  F007         	goto	l2651
   690   000ED8                     l2631:
   691                           
   692                           ;invaders.c: 293: if (bullet_y == -1) {
   693   000ED8  2801               	incf	_bullet_y^0,w,c	;volatile
   694   000EDA  E106               	bnz	u1071
   695   000EDC  2802               	incf	(_bullet_y+1)^0,w,c	;volatile
   696   000EDE  A4D8               	btfss	status,2,c
   697   000EE0  EF74  F007         	goto	u1071
   698   000EE4  EF76  F007         	goto	u1070
   699   000EE8                     u1071:
   700   000EE8  EFD3  F007         	goto	l2651
   701   000EEC                     u1070:
   702   000EEC                     
   703                           ;invaders.c: 294: bullet_y = ship_pos_y;
   704   000EEC  C007  F001         	movff	_ship_pos_y,_bullet_y	;volatile
   705   000EF0  C008  F002         	movff	_ship_pos_y+1,_bullet_y+1	;volatile
   706                           
   707                           ;invaders.c: 295: bullet_x = ship_pos;
   708   000EF4  C00B  F003         	movff	_ship_pos,_bullet_x	;volatile
   709   000EF8  C00C  F004         	movff	_ship_pos+1,_bullet_x+1	;volatile
   710   000EFC  EFD3  F007         	goto	l2651
   711   000F00                     l2635:
   712                           
   713                           ;invaders.c: 302: if (ship_pos_z > 0){
   714   000F00  BE06               	btfsc	(_ship_pos_z+1)^0,7,c	;volatile
   715   000F02  EF8B  F007         	goto	u1081
   716   000F06  5006               	movf	(_ship_pos_z+1)^0,w,c	;volatile
   717   000F08  E108               	bnz	u1080
   718   000F0A  0405               	decf	_ship_pos_z^0,w,c	;volatile
   719   000F0C  A0D8               	btfss	status,0,c
   720   000F0E  EF8B  F007         	goto	u1081
   721   000F12  EF8D  F007         	goto	u1080
   722   000F16                     u1081:
   723   000F16  EFD3  F007         	goto	l2651
   724   000F1A                     u1080:
   725   000F1A                     
   726                           ;invaders.c: 303: ship_pos_z--;
   727   000F1A  0605               	decf	_ship_pos_z^0,f,c	;volatile
   728   000F1C  A0D8               	btfss	status,0,c
   729   000F1E  0606               	decf	(_ship_pos_z+1)^0,f,c	;volatile
   730   000F20  EFD3  F007         	goto	l2651
   731   000F24                     l2639:
   732                           
   733                           ;invaders.c: 307: if (ship_pos_z < 4){
   734   000F24  BE06               	btfsc	(_ship_pos_z+1)^0,7,c	;volatile
   735   000F26  EFA0  F007         	goto	u1090
   736   000F2A  5006               	movf	(_ship_pos_z+1)^0,w,c	;volatile
   737   000F2C  E107               	bnz	u1091
   738   000F2E  0E04               	movlw	4
   739   000F30  5C05               	subwf	_ship_pos_z^0,w,c	;volatile
   740   000F32  B0D8               	btfsc	status,0,c
   741   000F34  EF9E  F007         	goto	u1091
   742   000F38  EFA0  F007         	goto	u1090
   743   000F3C                     u1091:
   744   000F3C  EFD3  F007         	goto	l2651
   745   000F40                     u1090:
   746   000F40                     
   747                           ;invaders.c: 308: ship_pos_z++;
   748   000F40  4A05               	infsnz	_ship_pos_z^0,f,c	;volatile
   749   000F42  2A06               	incf	(_ship_pos_z+1)^0,f,c	;volatile
   750   000F44  EFD3  F007         	goto	l2651
   751   000F48                     l2643:
   752                           
   753                           ;invaders.c: 313: if (bullet_y == -1) {
   754   000F48  2801               	incf	_bullet_y^0,w,c	;volatile
   755   000F4A  E106               	bnz	u1101
   756   000F4C  2802               	incf	(_bullet_y+1)^0,w,c	;volatile
   757   000F4E  A4D8               	btfss	status,2,c
   758   000F50  EFAC  F007         	goto	u1101
   759   000F54  EFAE  F007         	goto	u1100
   760   000F58                     u1101:
   761   000F58  EFD3  F007         	goto	l2651
   762   000F5C                     u1100:
   763   000F5C                     
   764                           ;invaders.c: 314: bullet_y = ship_pos_z;
   765   000F5C  C005  F001         	movff	_ship_pos_z,_bullet_y	;volatile
   766   000F60  C006  F002         	movff	_ship_pos_z+1,_bullet_y+1	;volatile
   767                           
   768                           ;invaders.c: 315: bullet_x = ship_posz;
   769   000F64  C009  F003         	movff	_ship_posz,_bullet_x	;volatile
   770   000F68  C00A  F004         	movff	_ship_posz+1,_bullet_x+1	;volatile
   771   000F6C  EFD3  F007         	goto	l2651
   772   000F70                     l2649:
   773   000F70  5046               	movf	main@tecla_atual^0,w,c
   774                           
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 6, Range of values is 49 to 56
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte           19    10 (average)
   780                           ;	Chosen strategy is simple_byte
   781   000F72  0A31               	xorlw	49	; case 49
   782   000F74  B4D8               	btfsc	status,2,c
   783   000F76  EF48  F007         	goto	l2623
   784   000F7A  0A03               	xorlw	3	; case 50
   785   000F7C  B4D8               	btfsc	status,2,c
   786   000F7E  EF5A  F007         	goto	l2627
   787   000F82  0A01               	xorlw	1	; case 51
   788   000F84  B4D8               	btfsc	status,2,c
   789   000F86  EF6C  F007         	goto	l2631
   790   000F8A  0A05               	xorlw	5	; case 54
   791   000F8C  B4D8               	btfsc	status,2,c
   792   000F8E  EF80  F007         	goto	l2635
   793   000F92  0A01               	xorlw	1	; case 55
   794   000F94  B4D8               	btfsc	status,2,c
   795   000F96  EF92  F007         	goto	l2639
   796   000F9A  0A0F               	xorlw	15	; case 56
   797   000F9C  B4D8               	btfsc	status,2,c
   798   000F9E  EFA4  F007         	goto	l2643
   799   000FA2  EFD3  F007         	goto	l2651
   800   000FA6                     l2651:
   801                           
   802                           ;invaders.c: 320: };invaders.c: 321: _delay((unsigned long)((150)*(48000000/4000.0)));
   803   000FA6  0E0A               	movlw	10
   804   000FA8  6E42               	movwf	(??_main+1)^0,c
   805   000FAA  0E22               	movlw	34
   806   000FAC  6E41               	movwf	??_main^0,c
   807   000FAE  0EA1               	movlw	161
   808   000FB0                     u1117:
   809   000FB0  2EE8               	decfsz	wreg,f,c
   810   000FB2  D7FE               	bra	u1117
   811   000FB4  2E41               	decfsz	??_main^0,f,c
   812   000FB6  D7FC               	bra	u1117
   813   000FB8  2E42               	decfsz	(??_main+1)^0,f,c
   814   000FBA  D7FA               	bra	u1117
   815   000FBC  0000               	nop	
   816   000FBE  EFB1  F006         	goto	l2587
   817   000FC2  EF07  F000         	goto	start
   818   000FC6                     __end_of_main:
   819                           	callstack 0
   820                           
   821 ;; *************** function _trata_teclas *****************
   822 ;; Defined at:
   823 ;;		line 51 in file "../16Keys.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  t               1   10[COMRAM] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      unsigned char 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         1       0       0       0       0       0       0       0       0
   839 ;;      Temps:          1       0       0       0       0       0       0       0       0
   840 ;;      Totals:         2       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        2 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 2
   844 ;; This function calls:
   845 ;;		_varre_teclas
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text1
   852   0014D2                     __ptext1:
   853                           	callstack 0
   854   0014D2                     _trata_teclas:
   855                           	callstack 28
   856   0014D2                     
   857                           ;16Keys.c: 52: char t;;16Keys.c: 54: t = varre_teclas();
   858   0014D2  ECE3  F007         	call	_varre_teclas	;wreg free
   859   0014D6  6E2F               	movwf	trata_teclas@t^0,c
   860   0014D8                     
   861                           ;16Keys.c: 55: if ((t != ' ') && (!tecla_pres)) {
   862   0014D8  0E20               	movlw	32
   863   0014DA  182F               	xorwf	trata_teclas@t^0,w,c
   864   0014DC  B4D8               	btfsc	status,2,c
   865   0014DE  EF73  F00A         	goto	u861
   866   0014E2  EF75  F00A         	goto	u860
   867   0014E6                     u861:
   868   0014E6  EF9C  F00A         	goto	l2093
   869   0014EA                     u860:
   870   0014EA  504B               	movf	_tecla_pres^0,w,c
   871   0014EC  A4D8               	btfss	status,2,c
   872   0014EE  EF7B  F00A         	goto	u871
   873   0014F2  EF7D  F00A         	goto	u870
   874   0014F6                     u871:
   875   0014F6  EF9C  F00A         	goto	l2093
   876   0014FA                     u870:
   877   0014FA                     
   878                           ;16Keys.c: 56: tecla_pres = 1;
   879   0014FA  0E01               	movlw	1
   880   0014FC  6E4B               	movwf	_tecla_pres^0,c
   881                           
   882                           ;16Keys.c: 57: if (t != tecla) {
   883   0014FE  502F               	movf	trata_teclas@t^0,w,c
   884   001500  B4D8               	btfsc	status,2,c
   885   001502  EF85  F00A         	goto	u881
   886   001506  EF87  F00A         	goto	u880
   887   00150A                     u881:
   888   00150A  EF9C  F00A         	goto	l2093
   889   00150E                     u880:
   890   00150E                     
   891                           ;16Keys.c: 59: _delay((unsigned long)((10)*(48000000/4000.0)));
   892   00150E  0E9C               	movlw	156
   893   001510  6E2E               	movwf	??_trata_teclas^0,c
   894   001512  0ED7               	movlw	215
   895   001514                     u1127:
   896   001514  2EE8               	decfsz	wreg,f,c
   897   001516  D7FE               	bra	u1127
   898   001518  2E2E               	decfsz	??_trata_teclas^0,f,c
   899   00151A  D7FC               	bra	u1127
   900   00151C  0000               	nop	
   901   00151E                     
   902                           ;16Keys.c: 63: if (varre_teclas() == t) return t;
   903   00151E  ECE3  F007         	call	_varre_teclas	;wreg free
   904   001522  182F               	xorwf	trata_teclas@t^0,w,c
   905   001524  A4D8               	btfss	status,2,c
   906   001526  EF97  F00A         	goto	u891
   907   00152A  EF99  F00A         	goto	u890
   908   00152E                     u891:
   909   00152E  EF9C  F00A         	goto	l2093
   910   001532                     u890:
   911   001532  502F               	movf	trata_teclas@t^0,w,c
   912   001534  EF9F  F00A         	goto	l33
   913   001538                     l2093:
   914                           
   915                           ;16Keys.c: 64: };16Keys.c: 65: };16Keys.c: 66: tecla_pres = 0;
   916   001538  0E00               	movlw	0
   917   00153A  6E4B               	movwf	_tecla_pres^0,c
   918   00153C                     
   919                           ;16Keys.c: 67: return ' ';
   920   00153C  0E20               	movlw	32
   921   00153E                     l33:
   922   00153E  0012               	return		;funcret
   923   001540                     __end_of_trata_teclas:
   924                           	callstack 0
   925                           
   926 ;; *************** function _varre_teclas *****************
   927 ;; Defined at:
   928 ;;		line 17 in file "../16Keys.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  key             1    8[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         0       0       0       0       0       0       0       0       0
   943 ;;      Locals:         1       0       0       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0
   945 ;;      Totals:         1       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:        1 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_trata_teclas
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957   000FC6                     __ptext2:
   958                           	callstack 0
   959   000FC6                     _varre_teclas:
   960                           	callstack 28
   961   000FC6                     
   962                           ;16Keys.c: 18: char key = ' ';
   963   000FC6  0E20               	movlw	32
   964   000FC8  6E2D               	movwf	varre_teclas@key^0,c
   965   000FCA                     
   966                           ;16Keys.c: 22: PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1; PORTBbits.RB0 = 
      +                          0;
   967   000FCA  8681               	bsf	129,3,c	;volatile
   968   000FCC  8481               	bsf	129,2,c	;volatile
   969   000FCE  8281               	bsf	129,1,c	;volatile
   970   000FD0  9081               	bcf	129,0,c	;volatile
   971   000FD2                     
   972                           ;16Keys.c: 23: _delay((unsigned long)((10)*(48000000/4000000.0)));
   973   000FD2  0E28               	movlw	40
   974   000FD4                     u1137:
   975   000FD4  2EE8               	decfsz	wreg,f,c
   976   000FD6  D7FE               	bra	u1137
   977   000FD8                     
   978                           ;16Keys.c: 24: if (!PORTBbits.RB4) key = '1';
   979   000FD8  B881               	btfsc	129,4,c	;volatile
   980   000FDA  EFF1  F007         	goto	u581
   981   000FDE  EFF3  F007         	goto	u580
   982   000FE2                     u581:
   983   000FE2  EFF5  F007         	goto	l1885
   984   000FE6                     u580:
   985   000FE6  0E31               	movlw	49
   986   000FE8  6E2D               	movwf	varre_teclas@key^0,c
   987   000FEA                     l1885:
   988                           
   989                           ;16Keys.c: 25: if (!PORTBbits.RB5) key = '4';
   990   000FEA  BA81               	btfsc	129,5,c	;volatile
   991   000FEC  EFFA  F007         	goto	u591
   992   000FF0  EFFC  F007         	goto	u590
   993   000FF4                     u591:
   994   000FF4  EFFE  F007         	goto	l1889
   995   000FF8                     u590:
   996   000FF8  0E34               	movlw	52
   997   000FFA  6E2D               	movwf	varre_teclas@key^0,c
   998   000FFC                     l1889:
   999                           
  1000                           ;16Keys.c: 26: if (!PORTBbits.RB6) key = '7';
  1001   000FFC  BC81               	btfsc	129,6,c	;volatile
  1002   000FFE  EF03  F008         	goto	u601
  1003   001002  EF05  F008         	goto	u600
  1004   001006                     u601:
  1005   001006  EF07  F008         	goto	l1893
  1006   00100A                     u600:
  1007   00100A  0E37               	movlw	55
  1008   00100C  6E2D               	movwf	varre_teclas@key^0,c
  1009   00100E                     l1893:
  1010                           
  1011                           ;16Keys.c: 27: if (!PORTBbits.RB7) key = '*';
  1012   00100E  BE81               	btfsc	129,7,c	;volatile
  1013   001010  EF0C  F008         	goto	u611
  1014   001014  EF0E  F008         	goto	u610
  1015   001018                     u611:
  1016   001018  EF10  F008         	goto	l1897
  1017   00101C                     u610:
  1018   00101C  0E2A               	movlw	42
  1019   00101E  6E2D               	movwf	varre_teclas@key^0,c
  1020   001020                     l1897:
  1021                           
  1022                           ;16Keys.c: 28: PORTBbits.RB0 = 1; PORTBbits.RB1 = 0;
  1023   001020  8081               	bsf	129,0,c	;volatile
  1024   001022  9281               	bcf	129,1,c	;volatile
  1025   001024                     
  1026                           ;16Keys.c: 29: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1027   001024  0E28               	movlw	40
  1028   001026                     u1147:
  1029   001026  2EE8               	decfsz	wreg,f,c
  1030   001028  D7FE               	bra	u1147
  1031   00102A                     
  1032                           ;16Keys.c: 30: if (!PORTBbits.RB4) key = '2';
  1033   00102A  B881               	btfsc	129,4,c	;volatile
  1034   00102C  EF1A  F008         	goto	u621
  1035   001030  EF1C  F008         	goto	u620
  1036   001034                     u621:
  1037   001034  EF1E  F008         	goto	l1907
  1038   001038                     u620:
  1039   001038  0E32               	movlw	50
  1040   00103A  6E2D               	movwf	varre_teclas@key^0,c
  1041   00103C                     l1907:
  1042                           
  1043                           ;16Keys.c: 31: if (!PORTBbits.RB5) key = '5';
  1044   00103C  BA81               	btfsc	129,5,c	;volatile
  1045   00103E  EF23  F008         	goto	u631
  1046   001042  EF25  F008         	goto	u630
  1047   001046                     u631:
  1048   001046  EF27  F008         	goto	l1911
  1049   00104A                     u630:
  1050   00104A  0E35               	movlw	53
  1051   00104C  6E2D               	movwf	varre_teclas@key^0,c
  1052   00104E                     l1911:
  1053                           
  1054                           ;16Keys.c: 32: if (!PORTBbits.RB6) key = '8';
  1055   00104E  BC81               	btfsc	129,6,c	;volatile
  1056   001050  EF2C  F008         	goto	u641
  1057   001054  EF2E  F008         	goto	u640
  1058   001058                     u641:
  1059   001058  EF30  F008         	goto	l1915
  1060   00105C                     u640:
  1061   00105C  0E38               	movlw	56
  1062   00105E  6E2D               	movwf	varre_teclas@key^0,c
  1063   001060                     l1915:
  1064                           
  1065                           ;16Keys.c: 33: if (!PORTBbits.RB7) key = '0';
  1066   001060  BE81               	btfsc	129,7,c	;volatile
  1067   001062  EF35  F008         	goto	u651
  1068   001066  EF37  F008         	goto	u650
  1069   00106A                     u651:
  1070   00106A  EF39  F008         	goto	l1919
  1071   00106E                     u650:
  1072   00106E  0E30               	movlw	48
  1073   001070  6E2D               	movwf	varre_teclas@key^0,c
  1074   001072                     l1919:
  1075                           
  1076                           ;16Keys.c: 34: PORTBbits.RB1 = 1; PORTBbits.RB2 = 0;
  1077   001072  8281               	bsf	129,1,c	;volatile
  1078   001074  9481               	bcf	129,2,c	;volatile
  1079   001076                     
  1080                           ;16Keys.c: 35: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1081   001076  0E28               	movlw	40
  1082   001078                     u1157:
  1083   001078  2EE8               	decfsz	wreg,f,c
  1084   00107A  D7FE               	bra	u1157
  1085   00107C                     
  1086                           ;16Keys.c: 36: if (!PORTBbits.RB4) key = '3';
  1087   00107C  B881               	btfsc	129,4,c	;volatile
  1088   00107E  EF43  F008         	goto	u661
  1089   001082  EF45  F008         	goto	u660
  1090   001086                     u661:
  1091   001086  EF47  F008         	goto	l1929
  1092   00108A                     u660:
  1093   00108A  0E33               	movlw	51
  1094   00108C  6E2D               	movwf	varre_teclas@key^0,c
  1095   00108E                     l1929:
  1096                           
  1097                           ;16Keys.c: 37: if (!PORTBbits.RB5) key = '6';
  1098   00108E  BA81               	btfsc	129,5,c	;volatile
  1099   001090  EF4C  F008         	goto	u671
  1100   001094  EF4E  F008         	goto	u670
  1101   001098                     u671:
  1102   001098  EF50  F008         	goto	l1933
  1103   00109C                     u670:
  1104   00109C  0E36               	movlw	54
  1105   00109E  6E2D               	movwf	varre_teclas@key^0,c
  1106   0010A0                     l1933:
  1107                           
  1108                           ;16Keys.c: 38: if (!PORTBbits.RB6) key = '9';
  1109   0010A0  BC81               	btfsc	129,6,c	;volatile
  1110   0010A2  EF55  F008         	goto	u681
  1111   0010A6  EF57  F008         	goto	u680
  1112   0010AA                     u681:
  1113   0010AA  EF59  F008         	goto	l1937
  1114   0010AE                     u680:
  1115   0010AE  0E39               	movlw	57
  1116   0010B0  6E2D               	movwf	varre_teclas@key^0,c
  1117   0010B2                     l1937:
  1118                           
  1119                           ;16Keys.c: 39: if (!PORTBbits.RB7) key = '#';
  1120   0010B2  BE81               	btfsc	129,7,c	;volatile
  1121   0010B4  EF5E  F008         	goto	u691
  1122   0010B8  EF60  F008         	goto	u690
  1123   0010BC                     u691:
  1124   0010BC  EF62  F008         	goto	l1941
  1125   0010C0                     u690:
  1126   0010C0  0E23               	movlw	35
  1127   0010C2  6E2D               	movwf	varre_teclas@key^0,c
  1128   0010C4                     l1941:
  1129                           
  1130                           ;16Keys.c: 40: PORTBbits.RB2 = 1; PORTBbits.RB3 = 0;
  1131   0010C4  8481               	bsf	129,2,c	;volatile
  1132   0010C6  9681               	bcf	129,3,c	;volatile
  1133   0010C8                     
  1134                           ;16Keys.c: 41: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1135   0010C8  0E28               	movlw	40
  1136   0010CA                     u1167:
  1137   0010CA  2EE8               	decfsz	wreg,f,c
  1138   0010CC  D7FE               	bra	u1167
  1139   0010CE                     
  1140                           ;16Keys.c: 42: if (!PORTBbits.RB4) key = 'A';
  1141   0010CE  B881               	btfsc	129,4,c	;volatile
  1142   0010D0  EF6C  F008         	goto	u701
  1143   0010D4  EF6E  F008         	goto	u700
  1144   0010D8                     u701:
  1145   0010D8  EF70  F008         	goto	l1951
  1146   0010DC                     u700:
  1147   0010DC  0E41               	movlw	65
  1148   0010DE  6E2D               	movwf	varre_teclas@key^0,c
  1149   0010E0                     l1951:
  1150                           
  1151                           ;16Keys.c: 43: if (!PORTBbits.RB5) key = 'B';
  1152   0010E0  BA81               	btfsc	129,5,c	;volatile
  1153   0010E2  EF75  F008         	goto	u711
  1154   0010E6  EF77  F008         	goto	u710
  1155   0010EA                     u711:
  1156   0010EA  EF79  F008         	goto	l1955
  1157   0010EE                     u710:
  1158   0010EE  0E42               	movlw	66
  1159   0010F0  6E2D               	movwf	varre_teclas@key^0,c
  1160   0010F2                     l1955:
  1161                           
  1162                           ;16Keys.c: 44: if (!PORTBbits.RB6) key = 'C';
  1163   0010F2  BC81               	btfsc	129,6,c	;volatile
  1164   0010F4  EF7E  F008         	goto	u721
  1165   0010F8  EF80  F008         	goto	u720
  1166   0010FC                     u721:
  1167   0010FC  EF82  F008         	goto	l1959
  1168   001100                     u720:
  1169   001100  0E43               	movlw	67
  1170   001102  6E2D               	movwf	varre_teclas@key^0,c
  1171   001104                     l1959:
  1172                           
  1173                           ;16Keys.c: 45: if (!PORTBbits.RB7) key = 'D';
  1174   001104  BE81               	btfsc	129,7,c	;volatile
  1175   001106  EF87  F008         	goto	u731
  1176   00110A  EF89  F008         	goto	u730
  1177   00110E                     u731:
  1178   00110E  EF8B  F008         	goto	l1963
  1179   001112                     u730:
  1180   001112  0E44               	movlw	68
  1181   001114  6E2D               	movwf	varre_teclas@key^0,c
  1182   001116                     l1963:
  1183                           
  1184                           ;16Keys.c: 46: PORTBbits.RB3 = 1;
  1185   001116  8681               	bsf	129,3,c	;volatile
  1186                           
  1187                           ;16Keys.c: 48: return key;
  1188   001118  502D               	movf	varre_teclas@key^0,w,c
  1189   00111A  0012               	return		;funcret
  1190   00111C                     __end_of_varre_teclas:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _special_char *****************
  1194 ;; Defined at:
  1195 ;;		line 18 in file "../invaders.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  cgram_loc       1    wreg     unsigned char 
  1198 ;;  data            1   14[COMRAM] PTR unsigned char 
  1199 ;;		 -> data2(8), data3(8), data1(8), 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  cgram_loc       1   15[COMRAM] unsigned char 
  1202 ;;  j               2   16[COMRAM] unsigned int 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         1       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        4 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 3
  1219 ;; This function calls:
  1220 ;;		_lcd_cmd
  1221 ;;		_lcd_dat
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text3
  1228   00174A                     __ptext3:
  1229                           	callstack 0
  1230   00174A                     _special_char:
  1231                           	callstack 27
  1232                           
  1233                           ;incstack = 0
  1234                           ;special_char@cgram_loc stored from wreg
  1235   00174A  6E34               	movwf	special_char@cgram_loc^0,c
  1236   00174C                     
  1237                           ;invaders.c: 19: unsigned int j = 0;
  1238   00174C  0E00               	movlw	0
  1239   00174E  6E36               	movwf	(special_char@j+1)^0,c
  1240   001750  0E00               	movlw	0
  1241   001752  6E35               	movwf	special_char@j^0,c
  1242   001754                     
  1243                           ;invaders.c: 20: lcd_cmd(cgram_loc);
  1244   001754  5034               	movf	special_char@cgram_loc^0,w,c
  1245   001756  ECD9  F00B         	call	_lcd_cmd
  1246                           
  1247                           ;invaders.c: 21: while(j < 8) {
  1248   00175A  EFB8  F00B         	goto	l2107
  1249   00175E                     l2103:
  1250                           
  1251                           ;invaders.c: 22: lcd_dat(data[j]);
  1252   00175E  5033               	movf	special_char@data^0,w,c
  1253   001760  2435               	addwf	special_char@j^0,w,c
  1254   001762  6ED9               	movwf	fsr2l,c
  1255   001764  6ADA               	clrf	fsr2h,c
  1256   001766  50DF               	movf	indf2,w,c
  1257   001768  ECC4  F00B         	call	_lcd_dat
  1258   00176C                     
  1259                           ;invaders.c: 23: j++;
  1260   00176C  4A35               	infsnz	special_char@j^0,f,c
  1261   00176E  2A36               	incf	(special_char@j+1)^0,f,c
  1262   001770                     l2107:
  1263   001770  5036               	movf	(special_char@j+1)^0,w,c
  1264   001772  E109               	bnz	u900
  1265   001774  0E08               	movlw	8
  1266   001776  5C35               	subwf	special_char@j^0,w,c
  1267   001778  A0D8               	btfss	status,0,c
  1268   00177A  EFC1  F00B         	goto	u901
  1269   00177E  EFC3  F00B         	goto	u900
  1270   001782                     u901:
  1271   001782  EFAF  F00B         	goto	l2103
  1272   001786                     u900:
  1273   001786  0012               	return		;funcret
  1274   001788                     __end_of_special_char:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _print_special_character *****************
  1278 ;; Defined at:
  1279 ;;		line 28 in file "../invaders.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  cgram_loc       1    wreg     unsigned char 
  1282 ;;  lcd_loc         1   16[COMRAM] unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  cgram_loc       1   17[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         1       0       0       0       0       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 3
  1301 ;; This function calls:
  1302 ;;		___awdiv
  1303 ;;		_lcd_cmd
  1304 ;;		_lcd_dat
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text4
  1311   0017DC                     __ptext4:
  1312                           	callstack 0
  1313   0017DC                     _print_special_character:
  1314                           	callstack 27
  1315                           
  1316                           ;incstack = 0
  1317                           ;print_special_character@cgram_loc stored from wreg
  1318   0017DC  6E36               	movwf	print_special_character@cgram_loc^0,c
  1319   0017DE                     
  1320                           ;invaders.c: 29: lcd_cmd(lcd_loc);
  1321   0017DE  5035               	movf	print_special_character@lcd_loc^0,w,c
  1322   0017E0  ECD9  F00B         	call	_lcd_cmd
  1323                           
  1324                           ;invaders.c: 30: lcd_dat((cgram_loc-64)/8);
  1325   0017E4  0EC0               	movlw	192
  1326   0017E6  2436               	addwf	print_special_character@cgram_loc^0,w,c
  1327   0017E8  6E2D               	movwf	___awdiv@dividend^0,c
  1328   0017EA  6A2E               	clrf	(___awdiv@dividend+1)^0,c
  1329   0017EC  0EFF               	movlw	255
  1330   0017EE  222E               	addwfc	(___awdiv@dividend+1)^0,f,c
  1331   0017F0  0E00               	movlw	0
  1332   0017F2  6E30               	movwf	(___awdiv@divisor+1)^0,c
  1333   0017F4  0E08               	movlw	8
  1334   0017F6  6E2F               	movwf	___awdiv@divisor^0,c
  1335   0017F8  EC91  F009         	call	___awdiv	;wreg free
  1336   0017FC  502D               	movf	?___awdiv^0,w,c
  1337   0017FE  ECC4  F00B         	call	_lcd_dat
  1338   001802  0012               	return		;funcret
  1339   001804                     __end_of_print_special_character:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function ___awdiv *****************
  1343 ;; Defined at:
  1344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\awdiv.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  dividend        2    8[COMRAM] int 
  1347 ;;  divisor         2   10[COMRAM] int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  quotient        2   14[COMRAM] int 
  1350 ;;  sign            1   13[COMRAM] unsigned char 
  1351 ;;  counter         1   12[COMRAM] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2    8[COMRAM] int 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1361 ;;      Params:         4       0       0       0       0       0       0       0       0
  1362 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1364 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        8 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_print_special_character
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text5
  1376   001322                     __ptext5:
  1377                           	callstack 0
  1378   001322                     ___awdiv:
  1379                           	callstack 28
  1380   001322  0E00               	movlw	0
  1381   001324  6E32               	movwf	___awdiv@sign^0,c
  1382   001326  BE30               	btfsc	(___awdiv@divisor+1)^0,7,c
  1383   001328  EF9A  F009         	goto	u740
  1384   00132C  EF98  F009         	goto	u741
  1385   001330                     u741:
  1386   001330  EFA0  F009         	goto	l2003
  1387   001334                     u740:
  1388   001334  6C2F               	negf	___awdiv@divisor^0,c
  1389   001336  1E30               	comf	(___awdiv@divisor+1)^0,f,c
  1390   001338  B0D8               	btfsc	status,0,c
  1391   00133A  2A30               	incf	(___awdiv@divisor+1)^0,f,c
  1392   00133C  0E01               	movlw	1
  1393   00133E  6E32               	movwf	___awdiv@sign^0,c
  1394   001340                     l2003:
  1395   001340  BE2E               	btfsc	(___awdiv@dividend+1)^0,7,c
  1396   001342  EFA7  F009         	goto	u750
  1397   001346  EFA5  F009         	goto	u751
  1398   00134A                     u751:
  1399   00134A  EFAD  F009         	goto	l2009
  1400   00134E                     u750:
  1401   00134E  6C2D               	negf	___awdiv@dividend^0,c
  1402   001350  1E2E               	comf	(___awdiv@dividend+1)^0,f,c
  1403   001352  B0D8               	btfsc	status,0,c
  1404   001354  2A2E               	incf	(___awdiv@dividend+1)^0,f,c
  1405   001356  0E01               	movlw	1
  1406   001358  1A32               	xorwf	___awdiv@sign^0,f,c
  1407   00135A                     l2009:
  1408   00135A  0E00               	movlw	0
  1409   00135C  6E34               	movwf	(___awdiv@quotient+1)^0,c
  1410   00135E  0E00               	movlw	0
  1411   001360  6E33               	movwf	___awdiv@quotient^0,c
  1412   001362  502F               	movf	___awdiv@divisor^0,w,c
  1413   001364  1030               	iorwf	(___awdiv@divisor+1)^0,w,c
  1414   001366  B4D8               	btfsc	status,2,c
  1415   001368  EFB8  F009         	goto	u761
  1416   00136C  EFBA  F009         	goto	u760
  1417   001370                     u761:
  1418   001370  EFE2  F009         	goto	l2031
  1419   001374                     u760:
  1420   001374  0E01               	movlw	1
  1421   001376  6E31               	movwf	___awdiv@counter^0,c
  1422   001378  EFC2  F009         	goto	l2017
  1423   00137C                     l2015:
  1424   00137C  90D8               	bcf	status,0,c
  1425   00137E  362F               	rlcf	___awdiv@divisor^0,f,c
  1426   001380  3630               	rlcf	(___awdiv@divisor+1)^0,f,c
  1427   001382  2A31               	incf	___awdiv@counter^0,f,c
  1428   001384                     l2017:
  1429   001384  AE30               	btfss	(___awdiv@divisor+1)^0,7,c
  1430   001386  EFC7  F009         	goto	u771
  1431   00138A  EFC9  F009         	goto	u770
  1432   00138E                     u771:
  1433   00138E  EFBE  F009         	goto	l2015
  1434   001392                     u770:
  1435   001392                     l2019:
  1436   001392  90D8               	bcf	status,0,c
  1437   001394  3633               	rlcf	___awdiv@quotient^0,f,c
  1438   001396  3634               	rlcf	(___awdiv@quotient+1)^0,f,c
  1439   001398  502F               	movf	___awdiv@divisor^0,w,c
  1440   00139A  5C2D               	subwf	___awdiv@dividend^0,w,c
  1441   00139C  5030               	movf	(___awdiv@divisor+1)^0,w,c
  1442   00139E  582E               	subwfb	(___awdiv@dividend+1)^0,w,c
  1443   0013A0  A0D8               	btfss	status,0,c
  1444   0013A2  EFD5  F009         	goto	u781
  1445   0013A6  EFD7  F009         	goto	u780
  1446   0013AA                     u781:
  1447   0013AA  EFDC  F009         	goto	l2027
  1448   0013AE                     u780:
  1449   0013AE  502F               	movf	___awdiv@divisor^0,w,c
  1450   0013B0  5E2D               	subwf	___awdiv@dividend^0,f,c
  1451   0013B2  5030               	movf	(___awdiv@divisor+1)^0,w,c
  1452   0013B4  5A2E               	subwfb	(___awdiv@dividend+1)^0,f,c
  1453   0013B6  8033               	bsf	___awdiv@quotient^0,0,c
  1454   0013B8                     l2027:
  1455   0013B8  90D8               	bcf	status,0,c
  1456   0013BA  3230               	rrcf	(___awdiv@divisor+1)^0,f,c
  1457   0013BC  322F               	rrcf	___awdiv@divisor^0,f,c
  1458   0013BE  2E31               	decfsz	___awdiv@counter^0,f,c
  1459   0013C0  EFC9  F009         	goto	l2019
  1460   0013C4                     l2031:
  1461   0013C4  5032               	movf	___awdiv@sign^0,w,c
  1462   0013C6  B4D8               	btfsc	status,2,c
  1463   0013C8  EFE8  F009         	goto	u791
  1464   0013CC  EFEA  F009         	goto	u790
  1465   0013D0                     u791:
  1466   0013D0  EFEE  F009         	goto	l2035
  1467   0013D4                     u790:
  1468   0013D4  6C33               	negf	___awdiv@quotient^0,c
  1469   0013D6  1E34               	comf	(___awdiv@quotient+1)^0,f,c
  1470   0013D8  B0D8               	btfsc	status,0,c
  1471   0013DA  2A34               	incf	(___awdiv@quotient+1)^0,f,c
  1472   0013DC                     l2035:
  1473   0013DC  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  1474   0013E0  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  1475   0013E4  0012               	return		;funcret
  1476   0013E6                     __end_of___awdiv:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _lcd_str *****************
  1480 ;; Defined at:
  1481 ;;		line 52 in file "../lcd.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  str             2   23[COMRAM] PTR const unsigned char 
  1484 ;;		 -> main@buff(3), STR_1(2), 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  i               1   27[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         2       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        5 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 3
  1503 ;; This function calls:
  1504 ;;		_lcd_dat
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text6
  1511   0013E6                     __ptext6:
  1512                           	callstack 0
  1513   0013E6                     _lcd_str:
  1514                           	callstack 27
  1515   0013E6                     
  1516                           ;lcd.c: 54: unsigned char i=0;
  1517   0013E6  0E00               	movlw	0
  1518   0013E8  6E40               	movwf	lcd_str@i^0,c
  1519                           
  1520                           ;lcd.c: 56: while(str[i] != 0 )
  1521   0013EA  EF10  F00A         	goto	l2527
  1522   0013EE                     l2523:
  1523                           
  1524                           ;lcd.c: 57: {;lcd.c: 58: lcd_dat(str[i]);
  1525   0013EE  5040               	movf	lcd_str@i^0,w,c
  1526   0013F0  243C               	addwf	lcd_str@str^0,w,c
  1527   0013F2  6E3E               	movwf	??_lcd_str^0,c
  1528   0013F4  0E00               	movlw	0
  1529   0013F6  203D               	addwfc	(lcd_str@str+1)^0,w,c
  1530   0013F8  6E3F               	movwf	(??_lcd_str+1)^0,c
  1531   0013FA  C03E  FFF6         	movff	??_lcd_str,tblptrl
  1532   0013FE  C03F  FFF7         	movff	??_lcd_str+1,tblptrh
  1533   001402  6AF8               	clrf	tblptru,c
  1534   001404  0E07               	movlw	(high __ramtop+-1)
  1535   001406  64F7               	cpfsgt	tblptrh,c
  1536   001408  D003               	bra	u917
  1537   00140A  0008               	tblrd		*
  1538   00140C  50F5               	movf	tablat,w,c
  1539   00140E  D005               	bra	u910
  1540   001410                     u917:
  1541   001410  CFF6 FFD9          	movff	tblptrl,fsr2l
  1542   001414  CFF7 FFDA          	movff	tblptrh,fsr2h
  1543   001418  50DF               	movf	indf2,w,c
  1544   00141A                     u910:
  1545   00141A  ECC4  F00B         	call	_lcd_dat
  1546   00141E                     
  1547                           ;lcd.c: 59: i++;
  1548   00141E  2A40               	incf	lcd_str@i^0,f,c
  1549   001420                     l2527:
  1550   001420  5040               	movf	lcd_str@i^0,w,c
  1551   001422  243C               	addwf	lcd_str@str^0,w,c
  1552   001424  6E3E               	movwf	??_lcd_str^0,c
  1553   001426  0E00               	movlw	0
  1554   001428  203D               	addwfc	(lcd_str@str+1)^0,w,c
  1555   00142A  6E3F               	movwf	(??_lcd_str+1)^0,c
  1556   00142C  C03E  FFF6         	movff	??_lcd_str,tblptrl
  1557   001430  C03F  FFF7         	movff	??_lcd_str+1,tblptrh
  1558   001434  6AF8               	clrf	tblptru,c
  1559   001436  0E07               	movlw	(high __ramtop+-1)
  1560   001438  64F7               	cpfsgt	tblptrh,c
  1561   00143A  D003               	bra	u927
  1562   00143C  0008               	tblrd		*
  1563   00143E  50F5               	movf	tablat,w,c
  1564   001440  D005               	bra	u920
  1565   001442                     u927:
  1566   001442  CFF6 FFD9          	movff	tblptrl,fsr2l
  1567   001446  CFF7 FFDA          	movff	tblptrh,fsr2h
  1568   00144A  50DF               	movf	indf2,w,c
  1569   00144C                     u920:
  1570   00144C  0900               	iorlw	0
  1571   00144E  A4D8               	btfss	status,2,c
  1572   001450  EF2C  F00A         	goto	u931
  1573   001454  EF2E  F00A         	goto	u930
  1574   001458                     u931:
  1575   001458  EFF7  F009         	goto	l2523
  1576   00145C                     u930:
  1577   00145C  0012               	return		;funcret
  1578   00145E                     __end_of_lcd_str:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _lcd_dat *****************
  1582 ;; Defined at:
  1583 ;;		line 21 in file "../lcd.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  val             1    wreg     unsigned char 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  val             1   13[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        1 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 2
  1604 ;; This function calls:
  1605 ;;		_atraso_ms
  1606 ;;		_lcd_wr
  1607 ;; This function is called by:
  1608 ;;		_special_char
  1609 ;;		_print_special_character
  1610 ;;		_lcd_str
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text7
  1615   001788                     __ptext7:
  1616                           	callstack 0
  1617   001788                     _lcd_dat:
  1618                           	callstack 27
  1619                           
  1620                           ;incstack = 0
  1621                           ;lcd_dat@val stored from wreg
  1622   001788  6E32               	movwf	lcd_dat@val^0,c
  1623   00178A                     
  1624                           ;lcd.c: 23: PORTEbits.RE1=1;
  1625   00178A  8284               	bsf	132,1,c	;volatile
  1626   00178C                     
  1627                           ;lcd.c: 24: lcd_wr(val);
  1628   00178C  5032               	movf	lcd_dat@val^0,w,c
  1629   00178E  EC1C  F00C         	call	_lcd_wr
  1630   001792                     
  1631                           ;lcd.c: 25: PORTEbits.RE0=1;
  1632   001792  8084               	bsf	132,0,c	;volatile
  1633   001794                     
  1634                           ;lcd.c: 26: atraso_ms(4);
  1635   001794  0E00               	movlw	0
  1636   001796  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  1637   001798  0E04               	movlw	4
  1638   00179A  6E2D               	movwf	atraso_ms@valor^0,c
  1639   00179C  EC60  F00B         	call	_atraso_ms	;wreg free
  1640   0017A0                     
  1641                           ;lcd.c: 27: PORTEbits.RE1=0;
  1642   0017A0  9284               	bcf	132,1,c	;volatile
  1643   0017A2                     
  1644                           ;lcd.c: 28: atraso_ms(4);
  1645   0017A2  0E00               	movlw	0
  1646   0017A4  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  1647   0017A6  0E04               	movlw	4
  1648   0017A8  6E2D               	movwf	atraso_ms@valor^0,c
  1649   0017AA  EC60  F00B         	call	_atraso_ms	;wreg free
  1650   0017AE                     
  1651                           ;lcd.c: 29: PORTEbits.RE1=1;
  1652   0017AE  8284               	bsf	132,1,c	;volatile
  1653   0017B0  0012               	return		;funcret
  1654   0017B2                     __end_of_lcd_dat:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function _lcd_set_cursor *****************
  1658 ;; Defined at:
  1659 ;;		line 63 in file "../lcd.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  col             1    wreg     unsigned char 
  1662 ;;  row             1   14[COMRAM] unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  col             1   15[COMRAM] unsigned char 
  1665 ;;  address         1   16[COMRAM] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1675 ;;      Params:         1       0       0       0       0       0       0       0       0
  1676 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1678 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 3
  1682 ;; This function calls:
  1683 ;;		_lcd_cmd
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text8
  1690   001668                     __ptext8:
  1691                           	callstack 0
  1692   001668                     _lcd_set_cursor:
  1693                           	callstack 27
  1694                           
  1695                           ;incstack = 0
  1696                           ;lcd_set_cursor@col stored from wreg
  1697   001668  6E34               	movwf	lcd_set_cursor@col^0,c
  1698   00166A                     
  1699                           ;lcd.c: 65: unsigned char address;;lcd.c: 67: switch(row)
  1700   00166A  EF47  F00B         	goto	l2515
  1701   00166E                     l2503:
  1702                           
  1703                           ;lcd.c: 70: address = 0x80;
  1704   00166E  0E80               	movlw	128
  1705   001670  6E35               	movwf	lcd_set_cursor@address^0,c
  1706                           
  1707                           ;lcd.c: 71: break;
  1708   001672  EF5A  F00B         	goto	l2517
  1709   001676                     l2505:
  1710                           
  1711                           ;lcd.c: 73: address = 0xC0;
  1712   001676  0EC0               	movlw	192
  1713   001678  6E35               	movwf	lcd_set_cursor@address^0,c
  1714                           
  1715                           ;lcd.c: 74: break;
  1716   00167A  EF5A  F00B         	goto	l2517
  1717   00167E                     l2507:
  1718                           
  1719                           ;lcd.c: 76: address = 0x94;
  1720   00167E  0E94               	movlw	148
  1721   001680  6E35               	movwf	lcd_set_cursor@address^0,c
  1722                           
  1723                           ;lcd.c: 77: break;
  1724   001682  EF5A  F00B         	goto	l2517
  1725   001686                     l2509:
  1726                           
  1727                           ;lcd.c: 79: address = 0xD4;
  1728   001686  0ED4               	movlw	212
  1729   001688  6E35               	movwf	lcd_set_cursor@address^0,c
  1730                           
  1731                           ;lcd.c: 80: break;
  1732   00168A  EF5A  F00B         	goto	l2517
  1733   00168E                     l2515:
  1734   00168E  5033               	movf	lcd_set_cursor@row^0,w,c
  1735                           
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 4, Range of values is 1 to 4
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte           13     7 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742   001690  0A01               	xorlw	1	; case 1
  1743   001692  B4D8               	btfsc	status,2,c
  1744   001694  EF37  F00B         	goto	l2503
  1745   001698  0A03               	xorlw	3	; case 2
  1746   00169A  B4D8               	btfsc	status,2,c
  1747   00169C  EF3B  F00B         	goto	l2505
  1748   0016A0  0A01               	xorlw	1	; case 3
  1749   0016A2  B4D8               	btfsc	status,2,c
  1750   0016A4  EF3F  F00B         	goto	l2507
  1751   0016A8  0A07               	xorlw	7	; case 4
  1752   0016AA  B4D8               	btfsc	status,2,c
  1753   0016AC  EF43  F00B         	goto	l2509
  1754   0016B0  EF37  F00B         	goto	l2503
  1755   0016B4                     l2517:
  1756                           
  1757                           ;lcd.c: 85: address += (col - 1);
  1758   0016B4  0434               	decf	lcd_set_cursor@col^0,w,c
  1759   0016B6  2635               	addwf	lcd_set_cursor@address^0,f,c
  1760   0016B8                     
  1761                           ;lcd.c: 86: lcd_cmd(address);
  1762   0016B8  5035               	movf	lcd_set_cursor@address^0,w,c
  1763   0016BA  ECD9  F00B         	call	_lcd_cmd
  1764   0016BE  0012               	return		;funcret
  1765   0016C0                     __end_of_lcd_set_cursor:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _lcd_pos *****************
  1769 ;; Defined at:
  1770 ;;		line 35 in file "../invaders.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  col             2    8[COMRAM] int 
  1773 ;;  line            2   10[COMRAM] int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      unsigned char 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1785 ;;      Params:         4       0       0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1787 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        6 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text9
  1800   000804                     __ptext9:
  1801                           	callstack 0
  1802   000804                     _lcd_pos:
  1803                           	callstack 29
  1804   000804                     
  1805                           ;invaders.c: 37: switch (line) {
  1806   000804  EF6C  F006         	goto	l2451
  1807   000808                     l2113:
  1808   000808  0E80               	movlw	128
  1809   00080A  EF8B  F006         	goto	l93
  1810   00080E                     l2117:
  1811   00080E  0E81               	movlw	129
  1812   000810  EF8B  F006         	goto	l93
  1813   000814                     l2121:
  1814   000814  0E82               	movlw	130
  1815   000816  EF8B  F006         	goto	l93
  1816   00081A                     l2125:
  1817   00081A  0E83               	movlw	131
  1818   00081C  EF8B  F006         	goto	l93
  1819   000820                     l2129:
  1820   000820  0E84               	movlw	132
  1821   000822  EF8B  F006         	goto	l93
  1822   000826                     l2133:
  1823   000826  0E85               	movlw	133
  1824   000828  EF8B  F006         	goto	l93
  1825   00082C                     l2137:
  1826   00082C  0E86               	movlw	134
  1827   00082E  EF8B  F006         	goto	l93
  1828   000832                     l2141:
  1829   000832  0E87               	movlw	135
  1830   000834  EF8B  F006         	goto	l93
  1831   000838                     l2145:
  1832   000838  0E88               	movlw	136
  1833   00083A  EF8B  F006         	goto	l93
  1834   00083E                     l2149:
  1835   00083E  0E89               	movlw	137
  1836   000840  EF8B  F006         	goto	l93
  1837   000844                     l2153:
  1838   000844  0E8A               	movlw	138
  1839   000846  EF8B  F006         	goto	l93
  1840   00084A                     l2157:
  1841   00084A  0E8B               	movlw	139
  1842   00084C  EF8B  F006         	goto	l93
  1843   000850                     l2161:
  1844   000850  0E8C               	movlw	140
  1845   000852  EF8B  F006         	goto	l93
  1846   000856                     l2165:
  1847   000856  0E8D               	movlw	141
  1848   000858  EF8B  F006         	goto	l93
  1849   00085C                     l2169:
  1850   00085C  0E8E               	movlw	142
  1851   00085E  EF8B  F006         	goto	l93
  1852   000862                     l2173:
  1853   000862  0E8F               	movlw	143
  1854   000864  EF8B  F006         	goto	l93
  1855   000868                     l2177:
  1856   000868  0E90               	movlw	144
  1857   00086A  EF8B  F006         	goto	l93
  1858   00086E                     l2181:
  1859   00086E  0E91               	movlw	145
  1860   000870  EF8B  F006         	goto	l93
  1861   000874                     l2185:
  1862   000874  0E92               	movlw	146
  1863   000876  EF8B  F006         	goto	l93
  1864   00087A                     l2189:
  1865   00087A  0E93               	movlw	147
  1866   00087C  EF8B  F006         	goto	l93
  1867   000880                     l2195:
  1868   000880  C02D  F031         	movff	lcd_pos@col,??_lcd_pos
  1869   000884  C02E  F032         	movff	lcd_pos@col+1,??_lcd_pos+1
  1870                           
  1871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1872                           ; Switch size 1, requested type "simple"
  1873                           ; Number of cases is 1, Range of values is 0 to 0
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte            4     3 (average)
  1877                           ;	Chosen strategy is simple_byte
  1878   000888  5032               	movf	(??_lcd_pos+1)^0,w,c
  1879   00088A  0A00               	xorlw	0	; case 0
  1880   00088C  B4D8               	btfsc	status,2,c
  1881   00088E  EF4B  F004         	goto	l2753
  1882   000892  EF8A  F006         	goto	l2453
  1883   000896                     l2753:
  1884                           
  1885                           ; Switch size 1, requested type "simple"
  1886                           ; Number of cases is 20, Range of values is 1 to 20
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte           61    31 (average)
  1890                           ;	Chosen strategy is simple_byte
  1891   000896  5031               	movf	??_lcd_pos^0,w,c
  1892   000898  0A01               	xorlw	1	; case 1
  1893   00089A  B4D8               	btfsc	status,2,c
  1894   00089C  EF04  F004         	goto	l2113
  1895   0008A0  0A03               	xorlw	3	; case 2
  1896   0008A2  B4D8               	btfsc	status,2,c
  1897   0008A4  EF07  F004         	goto	l2117
  1898   0008A8  0A01               	xorlw	1	; case 3
  1899   0008AA  B4D8               	btfsc	status,2,c
  1900   0008AC  EF0A  F004         	goto	l2121
  1901   0008B0  0A07               	xorlw	7	; case 4
  1902   0008B2  B4D8               	btfsc	status,2,c
  1903   0008B4  EF0D  F004         	goto	l2125
  1904   0008B8  0A01               	xorlw	1	; case 5
  1905   0008BA  B4D8               	btfsc	status,2,c
  1906   0008BC  EF10  F004         	goto	l2129
  1907   0008C0  0A03               	xorlw	3	; case 6
  1908   0008C2  B4D8               	btfsc	status,2,c
  1909   0008C4  EF13  F004         	goto	l2133
  1910   0008C8  0A01               	xorlw	1	; case 7
  1911   0008CA  B4D8               	btfsc	status,2,c
  1912   0008CC  EF16  F004         	goto	l2137
  1913   0008D0  0A0F               	xorlw	15	; case 8
  1914   0008D2  B4D8               	btfsc	status,2,c
  1915   0008D4  EF19  F004         	goto	l2141
  1916   0008D8  0A01               	xorlw	1	; case 9
  1917   0008DA  B4D8               	btfsc	status,2,c
  1918   0008DC  EF1C  F004         	goto	l2145
  1919   0008E0  0A03               	xorlw	3	; case 10
  1920   0008E2  B4D8               	btfsc	status,2,c
  1921   0008E4  EF1F  F004         	goto	l2149
  1922   0008E8  0A01               	xorlw	1	; case 11
  1923   0008EA  B4D8               	btfsc	status,2,c
  1924   0008EC  EF22  F004         	goto	l2153
  1925   0008F0  0A07               	xorlw	7	; case 12
  1926   0008F2  B4D8               	btfsc	status,2,c
  1927   0008F4  EF25  F004         	goto	l2157
  1928   0008F8  0A01               	xorlw	1	; case 13
  1929   0008FA  B4D8               	btfsc	status,2,c
  1930   0008FC  EF28  F004         	goto	l2161
  1931   000900  0A03               	xorlw	3	; case 14
  1932   000902  B4D8               	btfsc	status,2,c
  1933   000904  EF2B  F004         	goto	l2165
  1934   000908  0A01               	xorlw	1	; case 15
  1935   00090A  B4D8               	btfsc	status,2,c
  1936   00090C  EF2E  F004         	goto	l2169
  1937   000910  0A1F               	xorlw	31	; case 16
  1938   000912  B4D8               	btfsc	status,2,c
  1939   000914  EF31  F004         	goto	l2173
  1940   000918  0A01               	xorlw	1	; case 17
  1941   00091A  B4D8               	btfsc	status,2,c
  1942   00091C  EF34  F004         	goto	l2177
  1943   000920  0A03               	xorlw	3	; case 18
  1944   000922  B4D8               	btfsc	status,2,c
  1945   000924  EF37  F004         	goto	l2181
  1946   000928  0A01               	xorlw	1	; case 19
  1947   00092A  B4D8               	btfsc	status,2,c
  1948   00092C  EF3A  F004         	goto	l2185
  1949   000930  0A07               	xorlw	7	; case 20
  1950   000932  B4D8               	btfsc	status,2,c
  1951   000934  EF3D  F004         	goto	l2189
  1952   000938  EF8A  F006         	goto	l2453
  1953   00093C                     l2197:
  1954   00093C  0EC0               	movlw	192
  1955   00093E  EF8B  F006         	goto	l93
  1956   000942                     l2201:
  1957   000942  0EC1               	movlw	193
  1958   000944  EF8B  F006         	goto	l93
  1959   000948                     l2205:
  1960   000948  0EC2               	movlw	194
  1961   00094A  EF8B  F006         	goto	l93
  1962   00094E                     l2209:
  1963   00094E  0EC3               	movlw	195
  1964   000950  EF8B  F006         	goto	l93
  1965   000954                     l2213:
  1966   000954  0EC4               	movlw	196
  1967   000956  EF8B  F006         	goto	l93
  1968   00095A                     l2217:
  1969   00095A  0EC5               	movlw	197
  1970   00095C  EF8B  F006         	goto	l93
  1971   000960                     l2221:
  1972   000960  0EC6               	movlw	198
  1973   000962  EF8B  F006         	goto	l93
  1974   000966                     l2225:
  1975   000966  0EC7               	movlw	199
  1976   000968  EF8B  F006         	goto	l93
  1977   00096C                     l2229:
  1978   00096C  0EC8               	movlw	200
  1979   00096E  EF8B  F006         	goto	l93
  1980   000972                     l2233:
  1981   000972  0EC9               	movlw	201
  1982   000974  EF8B  F006         	goto	l93
  1983   000978                     l2237:
  1984   000978  0ECA               	movlw	202
  1985   00097A  EF8B  F006         	goto	l93
  1986   00097E                     l2241:
  1987   00097E  0ECB               	movlw	203
  1988   000980  EF8B  F006         	goto	l93
  1989   000984                     l2245:
  1990   000984  0ECC               	movlw	204
  1991   000986  EF8B  F006         	goto	l93
  1992   00098A                     l2249:
  1993   00098A  0ECD               	movlw	205
  1994   00098C  EF8B  F006         	goto	l93
  1995   000990                     l2253:
  1996   000990  0ECE               	movlw	206
  1997   000992  EF8B  F006         	goto	l93
  1998   000996                     l2257:
  1999   000996  0ECF               	movlw	207
  2000   000998  EF8B  F006         	goto	l93
  2001   00099C                     l2261:
  2002   00099C  0ED0               	movlw	208
  2003   00099E  EF8B  F006         	goto	l93
  2004   0009A2                     l2265:
  2005   0009A2  0ED1               	movlw	209
  2006   0009A4  EF8B  F006         	goto	l93
  2007   0009A8                     l2269:
  2008   0009A8  0ED2               	movlw	210
  2009   0009AA  EF8B  F006         	goto	l93
  2010   0009AE                     l2273:
  2011   0009AE  0ED3               	movlw	211
  2012   0009B0  EF8B  F006         	goto	l93
  2013   0009B4                     l2279:
  2014   0009B4  C02D  F031         	movff	lcd_pos@col,??_lcd_pos
  2015   0009B8  C02E  F032         	movff	lcd_pos@col+1,??_lcd_pos+1
  2016                           
  2017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 1, Range of values is 0 to 0
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte            4     3 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024   0009BC  5032               	movf	(??_lcd_pos+1)^0,w,c
  2025   0009BE  0A00               	xorlw	0	; case 0
  2026   0009C0  B4D8               	btfsc	status,2,c
  2027   0009C2  EFE5  F004         	goto	l2755
  2028   0009C6  EF8A  F006         	goto	l2453
  2029   0009CA                     l2755:
  2030                           
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 20, Range of values is 1 to 20
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte           61    31 (average)
  2036                           ;	Chosen strategy is simple_byte
  2037   0009CA  5031               	movf	??_lcd_pos^0,w,c
  2038   0009CC  0A01               	xorlw	1	; case 1
  2039   0009CE  B4D8               	btfsc	status,2,c
  2040   0009D0  EF9E  F004         	goto	l2197
  2041   0009D4  0A03               	xorlw	3	; case 2
  2042   0009D6  B4D8               	btfsc	status,2,c
  2043   0009D8  EFA1  F004         	goto	l2201
  2044   0009DC  0A01               	xorlw	1	; case 3
  2045   0009DE  B4D8               	btfsc	status,2,c
  2046   0009E0  EFA4  F004         	goto	l2205
  2047   0009E4  0A07               	xorlw	7	; case 4
  2048   0009E6  B4D8               	btfsc	status,2,c
  2049   0009E8  EFA7  F004         	goto	l2209
  2050   0009EC  0A01               	xorlw	1	; case 5
  2051   0009EE  B4D8               	btfsc	status,2,c
  2052   0009F0  EFAA  F004         	goto	l2213
  2053   0009F4  0A03               	xorlw	3	; case 6
  2054   0009F6  B4D8               	btfsc	status,2,c
  2055   0009F8  EFAD  F004         	goto	l2217
  2056   0009FC  0A01               	xorlw	1	; case 7
  2057   0009FE  B4D8               	btfsc	status,2,c
  2058   000A00  EFB0  F004         	goto	l2221
  2059   000A04  0A0F               	xorlw	15	; case 8
  2060   000A06  B4D8               	btfsc	status,2,c
  2061   000A08  EFB3  F004         	goto	l2225
  2062   000A0C  0A01               	xorlw	1	; case 9
  2063   000A0E  B4D8               	btfsc	status,2,c
  2064   000A10  EFB6  F004         	goto	l2229
  2065   000A14  0A03               	xorlw	3	; case 10
  2066   000A16  B4D8               	btfsc	status,2,c
  2067   000A18  EFB9  F004         	goto	l2233
  2068   000A1C  0A01               	xorlw	1	; case 11
  2069   000A1E  B4D8               	btfsc	status,2,c
  2070   000A20  EFBC  F004         	goto	l2237
  2071   000A24  0A07               	xorlw	7	; case 12
  2072   000A26  B4D8               	btfsc	status,2,c
  2073   000A28  EFBF  F004         	goto	l2241
  2074   000A2C  0A01               	xorlw	1	; case 13
  2075   000A2E  B4D8               	btfsc	status,2,c
  2076   000A30  EFC2  F004         	goto	l2245
  2077   000A34  0A03               	xorlw	3	; case 14
  2078   000A36  B4D8               	btfsc	status,2,c
  2079   000A38  EFC5  F004         	goto	l2249
  2080   000A3C  0A01               	xorlw	1	; case 15
  2081   000A3E  B4D8               	btfsc	status,2,c
  2082   000A40  EFC8  F004         	goto	l2253
  2083   000A44  0A1F               	xorlw	31	; case 16
  2084   000A46  B4D8               	btfsc	status,2,c
  2085   000A48  EFCB  F004         	goto	l2257
  2086   000A4C  0A01               	xorlw	1	; case 17
  2087   000A4E  B4D8               	btfsc	status,2,c
  2088   000A50  EFCE  F004         	goto	l2261
  2089   000A54  0A03               	xorlw	3	; case 18
  2090   000A56  B4D8               	btfsc	status,2,c
  2091   000A58  EFD1  F004         	goto	l2265
  2092   000A5C  0A01               	xorlw	1	; case 19
  2093   000A5E  B4D8               	btfsc	status,2,c
  2094   000A60  EFD4  F004         	goto	l2269
  2095   000A64  0A07               	xorlw	7	; case 20
  2096   000A66  B4D8               	btfsc	status,2,c
  2097   000A68  EFD7  F004         	goto	l2273
  2098   000A6C  EF8A  F006         	goto	l2453
  2099   000A70                     l2281:
  2100   000A70  0E94               	movlw	148
  2101   000A72  EF8B  F006         	goto	l93
  2102   000A76                     l2285:
  2103   000A76  0E95               	movlw	149
  2104   000A78  EF8B  F006         	goto	l93
  2105   000A7C                     l2289:
  2106   000A7C  0E96               	movlw	150
  2107   000A7E  EF8B  F006         	goto	l93
  2108   000A82                     l2293:
  2109   000A82  0E97               	movlw	151
  2110   000A84  EF8B  F006         	goto	l93
  2111   000A88                     l2297:
  2112   000A88  0E98               	movlw	152
  2113   000A8A  EF8B  F006         	goto	l93
  2114   000A8E                     l2301:
  2115   000A8E  0E99               	movlw	153
  2116   000A90  EF8B  F006         	goto	l93
  2117   000A94                     l2305:
  2118   000A94  0E9A               	movlw	154
  2119   000A96  EF8B  F006         	goto	l93
  2120   000A9A                     l2309:
  2121   000A9A  0E9B               	movlw	155
  2122   000A9C  EF8B  F006         	goto	l93
  2123   000AA0                     l2313:
  2124   000AA0  0E9C               	movlw	156
  2125   000AA2  EF8B  F006         	goto	l93
  2126   000AA6                     l2317:
  2127   000AA6  0E9D               	movlw	157
  2128   000AA8  EF8B  F006         	goto	l93
  2129   000AAC                     l2321:
  2130   000AAC  0E9E               	movlw	158
  2131   000AAE  EF8B  F006         	goto	l93
  2132   000AB2                     l2325:
  2133   000AB2  0E9F               	movlw	159
  2134   000AB4  EF8B  F006         	goto	l93
  2135   000AB8                     l2329:
  2136   000AB8  0EA0               	movlw	160
  2137   000ABA  EF8B  F006         	goto	l93
  2138   000ABE                     l2333:
  2139   000ABE  0EA1               	movlw	161
  2140   000AC0  EF8B  F006         	goto	l93
  2141   000AC4                     l2337:
  2142   000AC4  0EA2               	movlw	162
  2143   000AC6  EF8B  F006         	goto	l93
  2144   000ACA                     l2341:
  2145   000ACA  0EA3               	movlw	163
  2146   000ACC  EF8B  F006         	goto	l93
  2147   000AD0                     l2345:
  2148   000AD0  0EA4               	movlw	164
  2149   000AD2  EF8B  F006         	goto	l93
  2150   000AD6                     l2349:
  2151   000AD6  0EA5               	movlw	165
  2152   000AD8  EF8B  F006         	goto	l93
  2153   000ADC                     l2353:
  2154   000ADC  0EA6               	movlw	166
  2155   000ADE  EF8B  F006         	goto	l93
  2156   000AE2                     l2357:
  2157   000AE2  0EA7               	movlw	167
  2158   000AE4  EF8B  F006         	goto	l93
  2159   000AE8                     l2363:
  2160   000AE8  C02D  F031         	movff	lcd_pos@col,??_lcd_pos
  2161   000AEC  C02E  F032         	movff	lcd_pos@col+1,??_lcd_pos+1
  2162                           
  2163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2164                           ; Switch size 1, requested type "simple"
  2165                           ; Number of cases is 1, Range of values is 0 to 0
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte            4     3 (average)
  2169                           ;	Chosen strategy is simple_byte
  2170   000AF0  5032               	movf	(??_lcd_pos+1)^0,w,c
  2171   000AF2  0A00               	xorlw	0	; case 0
  2172   000AF4  B4D8               	btfsc	status,2,c
  2173   000AF6  EF7F  F005         	goto	l2757
  2174   000AFA  EF8A  F006         	goto	l2453
  2175   000AFE                     l2757:
  2176                           
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 20, Range of values is 1 to 20
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte           61    31 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183   000AFE  5031               	movf	??_lcd_pos^0,w,c
  2184   000B00  0A01               	xorlw	1	; case 1
  2185   000B02  B4D8               	btfsc	status,2,c
  2186   000B04  EF38  F005         	goto	l2281
  2187   000B08  0A03               	xorlw	3	; case 2
  2188   000B0A  B4D8               	btfsc	status,2,c
  2189   000B0C  EF3B  F005         	goto	l2285
  2190   000B10  0A01               	xorlw	1	; case 3
  2191   000B12  B4D8               	btfsc	status,2,c
  2192   000B14  EF3E  F005         	goto	l2289
  2193   000B18  0A07               	xorlw	7	; case 4
  2194   000B1A  B4D8               	btfsc	status,2,c
  2195   000B1C  EF41  F005         	goto	l2293
  2196   000B20  0A01               	xorlw	1	; case 5
  2197   000B22  B4D8               	btfsc	status,2,c
  2198   000B24  EF44  F005         	goto	l2297
  2199   000B28  0A03               	xorlw	3	; case 6
  2200   000B2A  B4D8               	btfsc	status,2,c
  2201   000B2C  EF47  F005         	goto	l2301
  2202   000B30  0A01               	xorlw	1	; case 7
  2203   000B32  B4D8               	btfsc	status,2,c
  2204   000B34  EF4A  F005         	goto	l2305
  2205   000B38  0A0F               	xorlw	15	; case 8
  2206   000B3A  B4D8               	btfsc	status,2,c
  2207   000B3C  EF4D  F005         	goto	l2309
  2208   000B40  0A01               	xorlw	1	; case 9
  2209   000B42  B4D8               	btfsc	status,2,c
  2210   000B44  EF50  F005         	goto	l2313
  2211   000B48  0A03               	xorlw	3	; case 10
  2212   000B4A  B4D8               	btfsc	status,2,c
  2213   000B4C  EF53  F005         	goto	l2317
  2214   000B50  0A01               	xorlw	1	; case 11
  2215   000B52  B4D8               	btfsc	status,2,c
  2216   000B54  EF56  F005         	goto	l2321
  2217   000B58  0A07               	xorlw	7	; case 12
  2218   000B5A  B4D8               	btfsc	status,2,c
  2219   000B5C  EF59  F005         	goto	l2325
  2220   000B60  0A01               	xorlw	1	; case 13
  2221   000B62  B4D8               	btfsc	status,2,c
  2222   000B64  EF5C  F005         	goto	l2329
  2223   000B68  0A03               	xorlw	3	; case 14
  2224   000B6A  B4D8               	btfsc	status,2,c
  2225   000B6C  EF5F  F005         	goto	l2333
  2226   000B70  0A01               	xorlw	1	; case 15
  2227   000B72  B4D8               	btfsc	status,2,c
  2228   000B74  EF62  F005         	goto	l2337
  2229   000B78  0A1F               	xorlw	31	; case 16
  2230   000B7A  B4D8               	btfsc	status,2,c
  2231   000B7C  EF65  F005         	goto	l2341
  2232   000B80  0A01               	xorlw	1	; case 17
  2233   000B82  B4D8               	btfsc	status,2,c
  2234   000B84  EF68  F005         	goto	l2345
  2235   000B88  0A03               	xorlw	3	; case 18
  2236   000B8A  B4D8               	btfsc	status,2,c
  2237   000B8C  EF6B  F005         	goto	l2349
  2238   000B90  0A01               	xorlw	1	; case 19
  2239   000B92  B4D8               	btfsc	status,2,c
  2240   000B94  EF6E  F005         	goto	l2353
  2241   000B98  0A07               	xorlw	7	; case 20
  2242   000B9A  B4D8               	btfsc	status,2,c
  2243   000B9C  EF71  F005         	goto	l2357
  2244   000BA0  EF8A  F006         	goto	l2453
  2245   000BA4                     l2365:
  2246   000BA4  0ED4               	movlw	212
  2247   000BA6  EF8B  F006         	goto	l93
  2248   000BAA                     l2369:
  2249   000BAA  0ED5               	movlw	213
  2250   000BAC  EF8B  F006         	goto	l93
  2251   000BB0                     l2373:
  2252   000BB0  0ED6               	movlw	214
  2253   000BB2  EF8B  F006         	goto	l93
  2254   000BB6                     l2377:
  2255   000BB6  0ED7               	movlw	215
  2256   000BB8  EF8B  F006         	goto	l93
  2257   000BBC                     l2381:
  2258   000BBC  0ED8               	movlw	216
  2259   000BBE  EF8B  F006         	goto	l93
  2260   000BC2                     l2385:
  2261   000BC2  0ED9               	movlw	217
  2262   000BC4  EF8B  F006         	goto	l93
  2263   000BC8                     l2389:
  2264   000BC8  0EDA               	movlw	218
  2265   000BCA  EF8B  F006         	goto	l93
  2266   000BCE                     l2393:
  2267   000BCE  0EDB               	movlw	219
  2268   000BD0  EF8B  F006         	goto	l93
  2269   000BD4                     l2397:
  2270   000BD4  0EDC               	movlw	220
  2271   000BD6  EF8B  F006         	goto	l93
  2272   000BDA                     l2401:
  2273   000BDA  0EDD               	movlw	221
  2274   000BDC  EF8B  F006         	goto	l93
  2275   000BE0                     l2405:
  2276   000BE0  0EDE               	movlw	222
  2277   000BE2  EF8B  F006         	goto	l93
  2278   000BE6                     l2409:
  2279   000BE6  0EDF               	movlw	223
  2280   000BE8  EF8B  F006         	goto	l93
  2281   000BEC                     l2413:
  2282   000BEC  0EE0               	movlw	224
  2283   000BEE  EF8B  F006         	goto	l93
  2284   000BF2                     l2417:
  2285   000BF2  0EE1               	movlw	225
  2286   000BF4  EF8B  F006         	goto	l93
  2287   000BF8                     l2421:
  2288   000BF8  0EE2               	movlw	226
  2289   000BFA  EF8B  F006         	goto	l93
  2290   000BFE                     l2425:
  2291   000BFE  0EE3               	movlw	227
  2292   000C00  EF8B  F006         	goto	l93
  2293   000C04                     l2429:
  2294   000C04  0EE4               	movlw	228
  2295   000C06  EF8B  F006         	goto	l93
  2296   000C0A                     l2433:
  2297   000C0A  0EE5               	movlw	229
  2298   000C0C  EF8B  F006         	goto	l93
  2299   000C10                     l2437:
  2300   000C10  0EE6               	movlw	230
  2301   000C12  EF8B  F006         	goto	l93
  2302   000C16                     l2441:
  2303   000C16  0EE7               	movlw	231
  2304   000C18  EF8B  F006         	goto	l93
  2305   000C1C                     l2447:
  2306   000C1C  C02D  F031         	movff	lcd_pos@col,??_lcd_pos
  2307   000C20  C02E  F032         	movff	lcd_pos@col+1,??_lcd_pos+1
  2308                           
  2309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 1, Range of values is 0 to 0
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte            4     3 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316   000C24  5032               	movf	(??_lcd_pos+1)^0,w,c
  2317   000C26  0A00               	xorlw	0	; case 0
  2318   000C28  B4D8               	btfsc	status,2,c
  2319   000C2A  EF19  F006         	goto	l2759
  2320   000C2E  EF8A  F006         	goto	l2453
  2321   000C32                     l2759:
  2322                           
  2323                           ; Switch size 1, requested type "simple"
  2324                           ; Number of cases is 20, Range of values is 1 to 20
  2325                           ; switch strategies available:
  2326                           ; Name         Instructions Cycles
  2327                           ; simple_byte           61    31 (average)
  2328                           ;	Chosen strategy is simple_byte
  2329   000C32  5031               	movf	??_lcd_pos^0,w,c
  2330   000C34  0A01               	xorlw	1	; case 1
  2331   000C36  B4D8               	btfsc	status,2,c
  2332   000C38  EFD2  F005         	goto	l2365
  2333   000C3C  0A03               	xorlw	3	; case 2
  2334   000C3E  B4D8               	btfsc	status,2,c
  2335   000C40  EFD5  F005         	goto	l2369
  2336   000C44  0A01               	xorlw	1	; case 3
  2337   000C46  B4D8               	btfsc	status,2,c
  2338   000C48  EFD8  F005         	goto	l2373
  2339   000C4C  0A07               	xorlw	7	; case 4
  2340   000C4E  B4D8               	btfsc	status,2,c
  2341   000C50  EFDB  F005         	goto	l2377
  2342   000C54  0A01               	xorlw	1	; case 5
  2343   000C56  B4D8               	btfsc	status,2,c
  2344   000C58  EFDE  F005         	goto	l2381
  2345   000C5C  0A03               	xorlw	3	; case 6
  2346   000C5E  B4D8               	btfsc	status,2,c
  2347   000C60  EFE1  F005         	goto	l2385
  2348   000C64  0A01               	xorlw	1	; case 7
  2349   000C66  B4D8               	btfsc	status,2,c
  2350   000C68  EFE4  F005         	goto	l2389
  2351   000C6C  0A0F               	xorlw	15	; case 8
  2352   000C6E  B4D8               	btfsc	status,2,c
  2353   000C70  EFE7  F005         	goto	l2393
  2354   000C74  0A01               	xorlw	1	; case 9
  2355   000C76  B4D8               	btfsc	status,2,c
  2356   000C78  EFEA  F005         	goto	l2397
  2357   000C7C  0A03               	xorlw	3	; case 10
  2358   000C7E  B4D8               	btfsc	status,2,c
  2359   000C80  EFED  F005         	goto	l2401
  2360   000C84  0A01               	xorlw	1	; case 11
  2361   000C86  B4D8               	btfsc	status,2,c
  2362   000C88  EFF0  F005         	goto	l2405
  2363   000C8C  0A07               	xorlw	7	; case 12
  2364   000C8E  B4D8               	btfsc	status,2,c
  2365   000C90  EFF3  F005         	goto	l2409
  2366   000C94  0A01               	xorlw	1	; case 13
  2367   000C96  B4D8               	btfsc	status,2,c
  2368   000C98  EFF6  F005         	goto	l2413
  2369   000C9C  0A03               	xorlw	3	; case 14
  2370   000C9E  B4D8               	btfsc	status,2,c
  2371   000CA0  EFF9  F005         	goto	l2417
  2372   000CA4  0A01               	xorlw	1	; case 15
  2373   000CA6  B4D8               	btfsc	status,2,c
  2374   000CA8  EFFC  F005         	goto	l2421
  2375   000CAC  0A1F               	xorlw	31	; case 16
  2376   000CAE  B4D8               	btfsc	status,2,c
  2377   000CB0  EFFF  F005         	goto	l2425
  2378   000CB4  0A01               	xorlw	1	; case 17
  2379   000CB6  B4D8               	btfsc	status,2,c
  2380   000CB8  EF02  F006         	goto	l2429
  2381   000CBC  0A03               	xorlw	3	; case 18
  2382   000CBE  B4D8               	btfsc	status,2,c
  2383   000CC0  EF05  F006         	goto	l2433
  2384   000CC4  0A01               	xorlw	1	; case 19
  2385   000CC6  B4D8               	btfsc	status,2,c
  2386   000CC8  EF08  F006         	goto	l2437
  2387   000CCC  0A07               	xorlw	7	; case 20
  2388   000CCE  B4D8               	btfsc	status,2,c
  2389   000CD0  EF0B  F006         	goto	l2441
  2390   000CD4  EF8A  F006         	goto	l2453
  2391   000CD8                     l2451:
  2392   000CD8  C02F  F031         	movff	lcd_pos@line,??_lcd_pos
  2393   000CDC  C030  F032         	movff	lcd_pos@line+1,??_lcd_pos+1
  2394                           
  2395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 1, Range of values is 0 to 0
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte            4     3 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402   000CE0  5032               	movf	(??_lcd_pos+1)^0,w,c
  2403   000CE2  0A00               	xorlw	0	; case 0
  2404   000CE4  B4D8               	btfsc	status,2,c
  2405   000CE6  EF77  F006         	goto	l2761
  2406   000CEA  EF8A  F006         	goto	l2453
  2407   000CEE                     l2761:
  2408                           
  2409                           ; Switch size 1, requested type "simple"
  2410                           ; Number of cases is 4, Range of values is 1 to 4
  2411                           ; switch strategies available:
  2412                           ; Name         Instructions Cycles
  2413                           ; simple_byte           13     7 (average)
  2414                           ;	Chosen strategy is simple_byte
  2415   000CEE  5031               	movf	??_lcd_pos^0,w,c
  2416   000CF0  0A01               	xorlw	1	; case 1
  2417   000CF2  B4D8               	btfsc	status,2,c
  2418   000CF4  EF40  F004         	goto	l2195
  2419   000CF8  0A03               	xorlw	3	; case 2
  2420   000CFA  B4D8               	btfsc	status,2,c
  2421   000CFC  EFDA  F004         	goto	l2279
  2422   000D00  0A01               	xorlw	1	; case 3
  2423   000D02  B4D8               	btfsc	status,2,c
  2424   000D04  EF74  F005         	goto	l2363
  2425   000D08  0A07               	xorlw	7	; case 4
  2426   000D0A  B4D8               	btfsc	status,2,c
  2427   000D0C  EF0E  F006         	goto	l2447
  2428   000D10  EF8A  F006         	goto	l2453
  2429   000D14                     l2453:
  2430                           
  2431                           ;invaders.c: 136: return 0;
  2432   000D14  0E00               	movlw	0
  2433   000D16                     l93:
  2434   000D16  0012               	return		;funcret
  2435   000D18                     __end_of_lcd_pos:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _lcd_init *****************
  2439 ;; Defined at:
  2440 ;;		line 34 in file "../lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 3
  2461 ;; This function calls:
  2462 ;;		_atraso_ms
  2463 ;;		_lcd_cmd
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text10
  2470   00160C                     __ptext10:
  2471                           	callstack 0
  2472   00160C                     _lcd_init:
  2473                           	callstack 27
  2474   00160C                     
  2475                           ;lcd.c: 36: PORTEbits.RE1=0;
  2476   00160C  9284               	bcf	132,1,c	;volatile
  2477                           
  2478                           ;lcd.c: 37: PORTEbits.RE0=0;
  2479   00160E  9084               	bcf	132,0,c	;volatile
  2480   001610                     
  2481                           ;lcd.c: 38: atraso_ms(20);
  2482   001610  0E00               	movlw	0
  2483   001612  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  2484   001614  0E14               	movlw	20
  2485   001616  6E2D               	movwf	atraso_ms@valor^0,c
  2486   001618  EC60  F00B         	call	_atraso_ms	;wreg free
  2487   00161C                     
  2488                           ;lcd.c: 39: PORTEbits.RE1=1;
  2489   00161C  8284               	bsf	132,1,c	;volatile
  2490                           
  2491                           ;lcd.c: 40: lcd_cmd(0x38);
  2492   00161E  0E38               	movlw	56
  2493   001620  ECD9  F00B         	call	_lcd_cmd
  2494                           
  2495                           ;lcd.c: 41: atraso_ms(5);
  2496   001624  0E00               	movlw	0
  2497   001626  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  2498   001628  0E05               	movlw	5
  2499   00162A  6E2D               	movwf	atraso_ms@valor^0,c
  2500   00162C  EC60  F00B         	call	_atraso_ms	;wreg free
  2501                           
  2502                           ;lcd.c: 42: lcd_cmd(0x38);
  2503   001630  0E38               	movlw	56
  2504   001632  ECD9  F00B         	call	_lcd_cmd
  2505                           
  2506                           ;lcd.c: 43: atraso_ms(1);
  2507   001636  0E00               	movlw	0
  2508   001638  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  2509   00163A  0E01               	movlw	1
  2510   00163C  6E2D               	movwf	atraso_ms@valor^0,c
  2511   00163E  EC60  F00B         	call	_atraso_ms	;wreg free
  2512                           
  2513                           ;lcd.c: 44: lcd_cmd(0x38);
  2514   001642  0E38               	movlw	56
  2515   001644  ECD9  F00B         	call	_lcd_cmd
  2516                           
  2517                           ;lcd.c: 45: lcd_cmd(0x08);
  2518   001648  0E08               	movlw	8
  2519   00164A  ECD9  F00B         	call	_lcd_cmd
  2520                           
  2521                           ;lcd.c: 46: lcd_cmd(0x0F);
  2522   00164E  0E0F               	movlw	15
  2523   001650  ECD9  F00B         	call	_lcd_cmd
  2524                           
  2525                           ;lcd.c: 47: lcd_cmd(0x01);
  2526   001654  0E01               	movlw	1
  2527   001656  ECD9  F00B         	call	_lcd_cmd
  2528                           
  2529                           ;lcd.c: 48: lcd_cmd(0x38);
  2530   00165A  0E38               	movlw	56
  2531   00165C  ECD9  F00B         	call	_lcd_cmd
  2532                           
  2533                           ;lcd.c: 49: lcd_cmd(0x80);
  2534   001660  0E80               	movlw	128
  2535   001662  ECD9  F00B         	call	_lcd_cmd
  2536   001666  0012               	return		;funcret
  2537   001668                     __end_of_lcd_init:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _lcd_cmd *****************
  2541 ;; Defined at:
  2542 ;;		line 10 in file "../lcd.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  val             1    wreg     unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  val             1   13[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0
  2557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2559 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2560 ;;Total ram usage:        1 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 2
  2563 ;; This function calls:
  2564 ;;		_atraso_ms
  2565 ;;		_lcd_wr
  2566 ;; This function is called by:
  2567 ;;		_special_char
  2568 ;;		_print_special_character
  2569 ;;		_main
  2570 ;;		_lcd_init
  2571 ;;		_lcd_set_cursor
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text11
  2576   0017B2                     __ptext11:
  2577                           	callstack 0
  2578   0017B2                     _lcd_cmd:
  2579                           	callstack 27
  2580                           
  2581                           ;incstack = 0
  2582                           ;lcd_cmd@val stored from wreg
  2583   0017B2  6E32               	movwf	lcd_cmd@val^0,c
  2584   0017B4                     
  2585                           ;lcd.c: 12: PORTEbits.RE1=1;
  2586   0017B4  8284               	bsf	132,1,c	;volatile
  2587   0017B6                     
  2588                           ;lcd.c: 13: lcd_wr(val);
  2589   0017B6  5032               	movf	lcd_cmd@val^0,w,c
  2590   0017B8  EC1C  F00C         	call	_lcd_wr
  2591   0017BC                     
  2592                           ;lcd.c: 14: PORTEbits.RE0=0;
  2593   0017BC  9084               	bcf	132,0,c	;volatile
  2594   0017BE                     
  2595                           ;lcd.c: 15: atraso_ms(4);
  2596   0017BE  0E00               	movlw	0
  2597   0017C0  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  2598   0017C2  0E04               	movlw	4
  2599   0017C4  6E2D               	movwf	atraso_ms@valor^0,c
  2600   0017C6  EC60  F00B         	call	_atraso_ms	;wreg free
  2601   0017CA                     
  2602                           ;lcd.c: 16: PORTEbits.RE1=0;
  2603   0017CA  9284               	bcf	132,1,c	;volatile
  2604   0017CC                     
  2605                           ;lcd.c: 17: atraso_ms(4);
  2606   0017CC  0E00               	movlw	0
  2607   0017CE  6E2E               	movwf	(atraso_ms@valor+1)^0,c
  2608   0017D0  0E04               	movlw	4
  2609   0017D2  6E2D               	movwf	atraso_ms@valor^0,c
  2610   0017D4  EC60  F00B         	call	_atraso_ms	;wreg free
  2611   0017D8                     
  2612                           ;lcd.c: 18: PORTEbits.RE1=1;
  2613   0017D8  8284               	bsf	132,1,c	;volatile
  2614   0017DA  0012               	return		;funcret
  2615   0017DC                     __end_of_lcd_cmd:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _lcd_wr *****************
  2619 ;; Defined at:
  2620 ;;		line 5 in file "../lcd.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  val             1    wreg     unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  val             1    8[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_lcd_cmd
  2645 ;;		_lcd_dat
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text12
  2650   001838                     __ptext12:
  2651                           	callstack 0
  2652   001838                     _lcd_wr:
  2653                           	callstack 27
  2654                           
  2655                           ;incstack = 0
  2656                           ;lcd_wr@val stored from wreg
  2657   001838  6E2D               	movwf	lcd_wr@val^0,c
  2658   00183A                     
  2659                           ;lcd.c: 7: PORTD=val;
  2660   00183A  C02D  FF83         	movff	lcd_wr@val,3971	;volatile
  2661   00183E  0012               	return		;funcret
  2662   001840                     __end_of_lcd_wr:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _atraso_ms *****************
  2666 ;; Defined at:
  2667 ;;		line 2 in file "../atraso.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  valor           2    8[COMRAM] unsigned int 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  i               2   10[COMRAM] unsigned int 
  2672 ;;  j               1   12[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         2       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        5 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_lcd_cmd
  2693 ;;		_lcd_dat
  2694 ;;		_lcd_init
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text13
  2699   0016C0                     __ptext13:
  2700                           	callstack 0
  2701   0016C0                     _atraso_ms:
  2702                           	callstack 27
  2703   0016C0                     
  2704                           ;atraso.c: 4: unsigned int i;;atraso.c: 5: unsigned char j;;atraso.c: 7: for (i =0; i< (
      +                          valor); i++)
  2705   0016C0  0E00               	movlw	0
  2706   0016C2  6E30               	movwf	(atraso_ms@i+1)^0,c
  2707   0016C4  0E00               	movlw	0
  2708   0016C6  6E2F               	movwf	atraso_ms@i^0,c
  2709   0016C8  EF78  F00B         	goto	l1865
  2710   0016CC                     l1853:
  2711                           
  2712                           ;atraso.c: 8: {;atraso.c: 10: for (j =0 ; j < 200; j++)
  2713   0016CC  0E00               	movlw	0
  2714   0016CE  6E31               	movwf	atraso_ms@j^0,c
  2715   0016D0                     l38:
  2716   0016D0  0000               	nop		;# 
  2717   0016D2  0000               	nop		;# 
  2718   0016D4  0000               	nop		;# 
  2719   0016D6  0000               	nop		;# 
  2720   0016D8  0000               	nop		;# 
  2721   0016DA  2A31               	incf	atraso_ms@j^0,f,c
  2722   0016DC  0EC7               	movlw	199
  2723   0016DE  6431               	cpfsgt	atraso_ms@j^0,c
  2724   0016E0  EF74  F00B         	goto	u561
  2725   0016E4  EF76  F00B         	goto	u560
  2726   0016E8                     u561:
  2727   0016E8  EF68  F00B         	goto	l38
  2728   0016EC                     u560:
  2729   0016EC  4A2F               	infsnz	atraso_ms@i^0,f,c
  2730   0016EE  2A30               	incf	(atraso_ms@i+1)^0,f,c
  2731   0016F0                     l1865:
  2732   0016F0  502D               	movf	atraso_ms@valor^0,w,c
  2733   0016F2  5C2F               	subwf	atraso_ms@i^0,w,c
  2734   0016F4  502E               	movf	(atraso_ms@valor+1)^0,w,c
  2735   0016F6  5830               	subwfb	(atraso_ms@i+1)^0,w,c
  2736   0016F8  A0D8               	btfss	status,0,c
  2737   0016FA  EF81  F00B         	goto	u571
  2738   0016FE  EF83  F00B         	goto	u570
  2739   001702                     u571:
  2740   001702  EF66  F00B         	goto	l1853
  2741   001706                     u570:
  2742   001706  0012               	return		;funcret
  2743   001708                     __end_of_atraso_ms:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _itoa *****************
  2747 ;; Defined at:
  2748 ;;		line 221 in file "../invaders.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  val             2   20[COMRAM] unsigned int 
  2751 ;;  str             1   22[COMRAM] PTR unsigned char 
  2752 ;;		 -> main@buff(3), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      PTR unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2764 ;;      Params:         3       0       0       0       0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2767 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 2
  2771 ;; This function calls:
  2772 ;;		___lwdiv
  2773 ;;		___lwmod
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text14
  2780   001540                     __ptext14:
  2781                           	callstack 0
  2782   001540                     _itoa:
  2783                           	callstack 28
  2784   001540                     
  2785                           ;invaders.c: 223: str[0]=((val%100)/10)+0x30;
  2786   001540  503B               	movf	itoa@str^0,w,c
  2787   001542  6ED9               	movwf	fsr2l,c
  2788   001544  6ADA               	clrf	fsr2h,c
  2789   001546  0E00               	movlw	0
  2790   001548  6E30               	movwf	(___lwmod@divisor+1)^0,c
  2791   00154A  0E64               	movlw	100
  2792   00154C  6E2F               	movwf	___lwmod@divisor^0,c
  2793   00154E  C039  F02D         	movff	itoa@val,___lwmod@dividend
  2794   001552  C03A  F02E         	movff	itoa@val+1,___lwmod@dividend+1
  2795   001556  ECD4  F00A         	call	___lwmod	;wreg free
  2796   00155A  C02D  F032         	movff	?___lwmod,___lwdiv@dividend
  2797   00155E  C02E  F033         	movff	?___lwmod+1,___lwdiv@dividend+1
  2798   001562  0E00               	movlw	0
  2799   001564  6E35               	movwf	(___lwdiv@divisor+1)^0,c
  2800   001566  0E0A               	movlw	10
  2801   001568  6E34               	movwf	___lwdiv@divisor^0,c
  2802   00156A  EC2F  F00A         	call	___lwdiv	;wreg free
  2803   00156E  5032               	movf	?___lwdiv^0,w,c
  2804   001570  0F30               	addlw	48
  2805   001572  6EDF               	movwf	indf2,c
  2806                           
  2807                           ;invaders.c: 224: str[1]=(val%10)+0x30;
  2808   001574  503B               	movf	itoa@str^0,w,c
  2809   001576  6ED9               	movwf	fsr2l,c
  2810   001578  6ADA               	clrf	fsr2h,c
  2811   00157A  0E01               	movlw	1
  2812   00157C  26D9               	addwf	fsr2l,f,c
  2813   00157E  C039  F02D         	movff	itoa@val,___lwmod@dividend
  2814   001582  C03A  F02E         	movff	itoa@val+1,___lwmod@dividend+1
  2815   001586  0E00               	movlw	0
  2816   001588  6E30               	movwf	(___lwmod@divisor+1)^0,c
  2817   00158A  0E0A               	movlw	10
  2818   00158C  6E2F               	movwf	___lwmod@divisor^0,c
  2819   00158E  ECD4  F00A         	call	___lwmod	;wreg free
  2820   001592  502D               	movf	?___lwmod^0,w,c
  2821   001594  0F30               	addlw	48
  2822   001596  6EDF               	movwf	indf2,c
  2823   001598                     
  2824                           ;invaders.c: 225: str[2]=0;
  2825   001598  503B               	movf	itoa@str^0,w,c
  2826   00159A  6ED9               	movwf	fsr2l,c
  2827   00159C  6ADA               	clrf	fsr2h,c
  2828   00159E  0E02               	movlw	2
  2829   0015A0  26D9               	addwf	fsr2l,f,c
  2830   0015A2  6ADF               	clrf	indf2,c
  2831   0015A4                     
  2832                           ;invaders.c: 227: return str;
  2833   0015A4  503B               	movf	itoa@str^0,w,c
  2834   0015A6  0012               	return		;funcret
  2835   0015A8                     __end_of_itoa:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function ___lwmod *****************
  2839 ;; Defined at:
  2840 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  dividend        2    8[COMRAM] unsigned int 
  2843 ;;  divisor         2   10[COMRAM] unsigned int 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  counter         1   12[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  2    8[COMRAM] unsigned int 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2855 ;;      Params:         4       0       0       0       0       0       0       0       0
  2856 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2858 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2859 ;;Total ram usage:        5 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_itoa
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text15
  2870   0015A8                     __ptext15:
  2871                           	callstack 0
  2872   0015A8                     ___lwmod:
  2873                           	callstack 28
  2874   0015A8  502F               	movf	___lwmod@divisor^0,w,c
  2875   0015AA  1030               	iorwf	(___lwmod@divisor+1)^0,w,c
  2876   0015AC  B4D8               	btfsc	status,2,c
  2877   0015AE  EFDB  F00A         	goto	u831
  2878   0015B2  EFDD  F00A         	goto	u830
  2879   0015B6                     u831:
  2880   0015B6  EF01  F00B         	goto	l773
  2881   0015BA                     u830:
  2882   0015BA  0E01               	movlw	1
  2883   0015BC  6E31               	movwf	___lwmod@counter^0,c
  2884   0015BE  EFE5  F00A         	goto	l2067
  2885   0015C2                     l2065:
  2886   0015C2  90D8               	bcf	status,0,c
  2887   0015C4  362F               	rlcf	___lwmod@divisor^0,f,c
  2888   0015C6  3630               	rlcf	(___lwmod@divisor+1)^0,f,c
  2889   0015C8  2A31               	incf	___lwmod@counter^0,f,c
  2890   0015CA                     l2067:
  2891   0015CA  AE30               	btfss	(___lwmod@divisor+1)^0,7,c
  2892   0015CC  EFEA  F00A         	goto	u841
  2893   0015D0  EFEC  F00A         	goto	u840
  2894   0015D4                     u841:
  2895   0015D4  EFE1  F00A         	goto	l2065
  2896   0015D8                     u840:
  2897   0015D8                     l2069:
  2898   0015D8  502F               	movf	___lwmod@divisor^0,w,c
  2899   0015DA  5C2D               	subwf	___lwmod@dividend^0,w,c
  2900   0015DC  5030               	movf	(___lwmod@divisor+1)^0,w,c
  2901   0015DE  582E               	subwfb	(___lwmod@dividend+1)^0,w,c
  2902   0015E0  A0D8               	btfss	status,0,c
  2903   0015E2  EFF5  F00A         	goto	u851
  2904   0015E6  EFF7  F00A         	goto	u850
  2905   0015EA                     u851:
  2906   0015EA  EFFB  F00A         	goto	l2073
  2907   0015EE                     u850:
  2908   0015EE  502F               	movf	___lwmod@divisor^0,w,c
  2909   0015F0  5E2D               	subwf	___lwmod@dividend^0,f,c
  2910   0015F2  5030               	movf	(___lwmod@divisor+1)^0,w,c
  2911   0015F4  5A2E               	subwfb	(___lwmod@dividend+1)^0,f,c
  2912   0015F6                     l2073:
  2913   0015F6  90D8               	bcf	status,0,c
  2914   0015F8  3230               	rrcf	(___lwmod@divisor+1)^0,f,c
  2915   0015FA  322F               	rrcf	___lwmod@divisor^0,f,c
  2916   0015FC  2E31               	decfsz	___lwmod@counter^0,f,c
  2917   0015FE  EFEC  F00A         	goto	l2069
  2918   001602                     l773:
  2919   001602  C02D  F02D         	movff	___lwmod@dividend,?___lwmod
  2920   001606  C02E  F02E         	movff	___lwmod@dividend+1,?___lwmod+1
  2921   00160A  0012               	return		;funcret
  2922   00160C                     __end_of___lwmod:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function ___lwdiv *****************
  2926 ;; Defined at:
  2927 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  dividend        2   13[COMRAM] unsigned int 
  2930 ;;  divisor         2   15[COMRAM] unsigned int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  quotient        2   17[COMRAM] unsigned int 
  2933 ;;  counter         1   19[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2   13[COMRAM] unsigned int 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         4       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2946 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        7 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_itoa
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text16
  2958   00145E                     __ptext16:
  2959                           	callstack 0
  2960   00145E                     ___lwdiv:
  2961                           	callstack 28
  2962   00145E  0E00               	movlw	0
  2963   001460  6E37               	movwf	(___lwdiv@quotient+1)^0,c
  2964   001462  0E00               	movlw	0
  2965   001464  6E36               	movwf	___lwdiv@quotient^0,c
  2966   001466  5034               	movf	___lwdiv@divisor^0,w,c
  2967   001468  1035               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2968   00146A  B4D8               	btfsc	status,2,c
  2969   00146C  EF3A  F00A         	goto	u801
  2970   001470  EF3C  F00A         	goto	u800
  2971   001474                     u801:
  2972   001474  EF64  F00A         	goto	l763
  2973   001478                     u800:
  2974   001478  0E01               	movlw	1
  2975   00147A  6E38               	movwf	___lwdiv@counter^0,c
  2976   00147C  EF44  F00A         	goto	l2047
  2977   001480                     l2045:
  2978   001480  90D8               	bcf	status,0,c
  2979   001482  3634               	rlcf	___lwdiv@divisor^0,f,c
  2980   001484  3635               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2981   001486  2A38               	incf	___lwdiv@counter^0,f,c
  2982   001488                     l2047:
  2983   001488  AE35               	btfss	(___lwdiv@divisor+1)^0,7,c
  2984   00148A  EF49  F00A         	goto	u811
  2985   00148E  EF4B  F00A         	goto	u810
  2986   001492                     u811:
  2987   001492  EF40  F00A         	goto	l2045
  2988   001496                     u810:
  2989   001496                     l2049:
  2990   001496  90D8               	bcf	status,0,c
  2991   001498  3636               	rlcf	___lwdiv@quotient^0,f,c
  2992   00149A  3637               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2993   00149C  5034               	movf	___lwdiv@divisor^0,w,c
  2994   00149E  5C32               	subwf	___lwdiv@dividend^0,w,c
  2995   0014A0  5035               	movf	(___lwdiv@divisor+1)^0,w,c
  2996   0014A2  5833               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2997   0014A4  A0D8               	btfss	status,0,c
  2998   0014A6  EF57  F00A         	goto	u821
  2999   0014AA  EF59  F00A         	goto	u820
  3000   0014AE                     u821:
  3001   0014AE  EF5E  F00A         	goto	l2057
  3002   0014B2                     u820:
  3003   0014B2  5034               	movf	___lwdiv@divisor^0,w,c
  3004   0014B4  5E32               	subwf	___lwdiv@dividend^0,f,c
  3005   0014B6  5035               	movf	(___lwdiv@divisor+1)^0,w,c
  3006   0014B8  5A33               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3007   0014BA  8036               	bsf	___lwdiv@quotient^0,0,c
  3008   0014BC                     l2057:
  3009   0014BC  90D8               	bcf	status,0,c
  3010   0014BE  3235               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3011   0014C0  3234               	rrcf	___lwdiv@divisor^0,f,c
  3012   0014C2  2E38               	decfsz	___lwdiv@counter^0,f,c
  3013   0014C4  EF4B  F00A         	goto	l2049
  3014   0014C8                     l763:
  3015   0014C8  C036  F032         	movff	___lwdiv@quotient,?___lwdiv
  3016   0014CC  C037  F033         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3017   0014D0  0012               	return		;funcret
  3018   0014D2                     __end_of___lwdiv:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _init_timer0 *****************
  3022 ;; Defined at:
  3023 ;;		line 186 in file "../invaders.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text17
  3052   001828                     __ptext17:
  3053                           	callstack 0
  3054   001828                     _init_timer0:
  3055                           	callstack 29
  3056   001828                     
  3057                           ;invaders.c: 187: T0CON = 0b10000101;
  3058   001828  0E85               	movlw	133
  3059   00182A  6ED5               	movwf	213,c	;volatile
  3060                           
  3061                           ;invaders.c: 188: TMR0L = 6;
  3062   00182C  0E06               	movlw	6
  3063   00182E  6ED6               	movwf	214,c	;volatile
  3064   001830                     
  3065                           ;invaders.c: 189: INTCONbits.TMR0IF = 0;
  3066   001830  94F2               	bcf	242,2,c	;volatile
  3067   001832                     
  3068                           ;invaders.c: 190: INTCONbits.TMR0IE = 1;
  3069   001832  8AF2               	bsf	242,5,c	;volatile
  3070   001834                     
  3071                           ;invaders.c: 191: INTCONbits.GIE = 1;
  3072   001834  8EF2               	bsf	242,7,c	;volatile
  3073   001836  0012               	return		;funcret
  3074   001838                     __end_of_init_timer0:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _inicializar *****************
  3078 ;; Defined at:
  3079 ;;		line 154 in file "../invaders.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text18
  3108   001246                     __ptext18:
  3109                           	callstack 0
  3110   001246                     _inicializar:
  3111                           	callstack 29
  3112   001246                     
  3113                           ;invaders.c: 155: invaders[0].linha = 1;
  3114   001246  0E00               	movlw	0
  3115   001248  0100               	movlb	0	; () banked
  3116   00124A  6F61               	movwf	(_invaders+1)& (0+255),b	;volatile
  3117   00124C  0E01               	movlw	1
  3118   00124E  6F60               	movwf	_invaders& (0+255),b	;volatile
  3119                           
  3120                           ;invaders.c: 156: invaders[0].coluna = 12;
  3121   001250  0E00               	movlw	0
  3122   001252  6F63               	movwf	(_invaders+3)& (0+255),b	;volatile
  3123   001254  0E0C               	movlw	12
  3124   001256  6F62               	movwf	(_invaders+2)& (0+255),b	;volatile
  3125                           
  3126                           ;invaders.c: 157: invaders[0].alive = 1;
  3127   001258  0E00               	movlw	0
  3128   00125A  6F65               	movwf	(_invaders+5)& (0+255),b	;volatile
  3129   00125C  0E01               	movlw	1
  3130   00125E  6F64               	movwf	(_invaders+4)& (0+255),b	;volatile
  3131                           
  3132                           ;invaders.c: 158: invaders[1].linha = 1;
  3133   001260  0E00               	movlw	0
  3134   001262  6F67               	movwf	(_invaders+7)& (0+255),b	;volatile
  3135   001264  0E01               	movlw	1
  3136   001266  6F66               	movwf	(_invaders+6)& (0+255),b	;volatile
  3137                           
  3138                           ;invaders.c: 159: invaders[1].coluna = 13;
  3139   001268  0E00               	movlw	0
  3140   00126A  6F69               	movwf	(_invaders+9)& (0+255),b	;volatile
  3141   00126C  0E0D               	movlw	13
  3142   00126E  6F68               	movwf	(_invaders+8)& (0+255),b	;volatile
  3143                           
  3144                           ;invaders.c: 160: invaders[1].alive = 1;
  3145   001270  0E00               	movlw	0
  3146   001272  6F6B               	movwf	(_invaders+11)& (0+255),b	;volatile
  3147   001274  0E01               	movlw	1
  3148   001276  6F6A               	movwf	(_invaders+10)& (0+255),b	;volatile
  3149                           
  3150                           ;invaders.c: 161: invaders[2].linha = 3;
  3151   001278  0E00               	movlw	0
  3152   00127A  6F6D               	movwf	(_invaders+13)& (0+255),b	;volatile
  3153   00127C  0E03               	movlw	3
  3154   00127E  6F6C               	movwf	(_invaders+12)& (0+255),b	;volatile
  3155                           
  3156                           ;invaders.c: 162: invaders[2].coluna = 14;
  3157   001280  0E00               	movlw	0
  3158   001282  6F6F               	movwf	(_invaders+15)& (0+255),b	;volatile
  3159   001284  0E0E               	movlw	14
  3160   001286  6F6E               	movwf	(_invaders+14)& (0+255),b	;volatile
  3161                           
  3162                           ;invaders.c: 163: invaders[2].alive = 1;
  3163   001288  0E00               	movlw	0
  3164   00128A  6F71               	movwf	(_invaders+17)& (0+255),b	;volatile
  3165   00128C  0E01               	movlw	1
  3166   00128E  6F70               	movwf	(_invaders+16)& (0+255),b	;volatile
  3167                           
  3168                           ;invaders.c: 164: invaders[3].linha = 1;
  3169   001290  0E00               	movlw	0
  3170   001292  6F73               	movwf	(_invaders+19)& (0+255),b	;volatile
  3171   001294  0E01               	movlw	1
  3172   001296  6F72               	movwf	(_invaders+18)& (0+255),b	;volatile
  3173                           
  3174                           ;invaders.c: 165: invaders[3].coluna =11;
  3175   001298  0E00               	movlw	0
  3176   00129A  6F75               	movwf	(_invaders+21)& (0+255),b	;volatile
  3177   00129C  0E0B               	movlw	11
  3178   00129E  6F74               	movwf	(_invaders+20)& (0+255),b	;volatile
  3179                           
  3180                           ;invaders.c: 166: invaders[3].alive = 1;
  3181   0012A0  0E00               	movlw	0
  3182   0012A2  6F77               	movwf	(_invaders+23)& (0+255),b	;volatile
  3183   0012A4  0E01               	movlw	1
  3184   0012A6  6F76               	movwf	(_invaders+22)& (0+255),b	;volatile
  3185                           
  3186                           ;invaders.c: 167: invaders[4].linha = 1;
  3187   0012A8  0E00               	movlw	0
  3188   0012AA  6F79               	movwf	(_invaders+25)& (0+255),b	;volatile
  3189   0012AC  0E01               	movlw	1
  3190   0012AE  6F78               	movwf	(_invaders+24)& (0+255),b	;volatile
  3191                           
  3192                           ;invaders.c: 168: invaders[4].coluna =16;
  3193   0012B0  0E00               	movlw	0
  3194   0012B2  6F7B               	movwf	(_invaders+27)& (0+255),b	;volatile
  3195   0012B4  0E10               	movlw	16
  3196   0012B6  6F7A               	movwf	(_invaders+26)& (0+255),b	;volatile
  3197                           
  3198                           ;invaders.c: 169: invaders[4].alive = 1;
  3199   0012B8  0E00               	movlw	0
  3200   0012BA  6F7D               	movwf	(_invaders+29)& (0+255),b	;volatile
  3201   0012BC  0E01               	movlw	1
  3202   0012BE  6F7C               	movwf	(_invaders+28)& (0+255),b	;volatile
  3203                           
  3204                           ;invaders.c: 170: invaders[5].linha = 2;
  3205   0012C0  0E00               	movlw	0
  3206   0012C2  6F7F               	movwf	(_invaders+31)& (0+255),b	;volatile
  3207   0012C4  0E02               	movlw	2
  3208   0012C6  6F7E               	movwf	(_invaders+30)& (0+255),b	;volatile
  3209                           
  3210                           ;invaders.c: 171: invaders[5].coluna =17;
  3211   0012C8  0E00               	movlw	0
  3212   0012CA  6F81               	movwf	(_invaders+33)& (0+255),b	;volatile
  3213   0012CC  0E11               	movlw	17
  3214   0012CE  6F80               	movwf	(_invaders+32)& (0+255),b	;volatile
  3215                           
  3216                           ;invaders.c: 172: invaders[5].alive = 1;
  3217   0012D0  0E00               	movlw	0
  3218   0012D2  6F83               	movwf	(_invaders+35)& (0+255),b	;volatile
  3219   0012D4  0E01               	movlw	1
  3220   0012D6  6F82               	movwf	(_invaders+34)& (0+255),b	;volatile
  3221                           
  3222                           ;invaders.c: 173: invaders[6].linha = 2;
  3223   0012D8  0E00               	movlw	0
  3224   0012DA  6F85               	movwf	(_invaders+37)& (0+255),b	;volatile
  3225   0012DC  0E02               	movlw	2
  3226   0012DE  6F84               	movwf	(_invaders+36)& (0+255),b	;volatile
  3227                           
  3228                           ;invaders.c: 174: invaders[6].coluna =18;
  3229   0012E0  0E00               	movlw	0
  3230   0012E2  6F87               	movwf	(_invaders+39)& (0+255),b	;volatile
  3231   0012E4  0E12               	movlw	18
  3232   0012E6  6F86               	movwf	(_invaders+38)& (0+255),b	;volatile
  3233                           
  3234                           ;invaders.c: 175: invaders[6].alive = 1;
  3235   0012E8  0E00               	movlw	0
  3236   0012EA  6F89               	movwf	(_invaders+41)& (0+255),b	;volatile
  3237   0012EC  0E01               	movlw	1
  3238   0012EE  6F88               	movwf	(_invaders+40)& (0+255),b	;volatile
  3239                           
  3240                           ;invaders.c: 176: invaders[7].linha = 2;
  3241   0012F0  0E00               	movlw	0
  3242   0012F2  6F8B               	movwf	(_invaders+43)& (0+255),b	;volatile
  3243   0012F4  0E02               	movlw	2
  3244   0012F6  6F8A               	movwf	(_invaders+42)& (0+255),b	;volatile
  3245                           
  3246                           ;invaders.c: 177: invaders[7].coluna =19;
  3247   0012F8  0E00               	movlw	0
  3248   0012FA  6F8D               	movwf	(_invaders+45)& (0+255),b	;volatile
  3249   0012FC  0E13               	movlw	19
  3250   0012FE  6F8C               	movwf	(_invaders+44)& (0+255),b	;volatile
  3251                           
  3252                           ;invaders.c: 178: invaders[7].alive = 1;
  3253   001300  0E00               	movlw	0
  3254   001302  6F8F               	movwf	(_invaders+47)& (0+255),b	;volatile
  3255   001304  0E01               	movlw	1
  3256   001306  6F8E               	movwf	(_invaders+46)& (0+255),b	;volatile
  3257                           
  3258                           ;invaders.c: 179: invaders[8].linha = 3;
  3259   001308  0E00               	movlw	0
  3260   00130A  6F91               	movwf	(_invaders+49)& (0+255),b	;volatile
  3261   00130C  0E03               	movlw	3
  3262   00130E  6F90               	movwf	(_invaders+48)& (0+255),b	;volatile
  3263                           
  3264                           ;invaders.c: 180: invaders[8].coluna =17;
  3265   001310  0E00               	movlw	0
  3266   001312  6F93               	movwf	(_invaders+51)& (0+255),b	;volatile
  3267   001314  0E11               	movlw	17
  3268   001316  6F92               	movwf	(_invaders+50)& (0+255),b	;volatile
  3269                           
  3270                           ;invaders.c: 181: invaders[8].alive = 1;
  3271   001318  0E00               	movlw	0
  3272   00131A  6F95               	movwf	(_invaders+53)& (0+255),b	;volatile
  3273   00131C  0E01               	movlw	1
  3274   00131E  6F94               	movwf	(_invaders+52)& (0+255),b	;volatile
  3275   001320                     
  3276                           ; BSR set to: 0
  3277   001320  0012               	return		;funcret
  3278   001322                     __end_of_inicializar:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _high_isr *****************
  3282 ;; Defined at:
  3283 ;;		line 194 in file "../invaders.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  i               2    6[COMRAM] int 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0
  3298 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3299 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3300 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        8 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		Interrupt level 2
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	intcode
  3311   000008                     __pintcode:
  3312                           	callstack 0
  3313   000008                     _high_isr:
  3314                           	callstack 27
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;incstack = 0
  3318   000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3319   00000A  ED8E  F008         	call	int_func,f	;refresh shadow registers
  3320                           
  3321                           	psect	intcode_body
  3322   00111C                     __pintcode_body:
  3323                           	callstack 27
  3324   00111C                     int_func:
  3325                           	callstack 27
  3326   00111C  0006               	pop		; remove dummy address from shadow register refresh
  3327   00111E  CFD9 F027          	movff	fsr2l,??_high_isr+2
  3328   001122  CFDA F028          	movff	fsr2h,??_high_isr+3
  3329   001126  CFF3 F029          	movff	prodl,??_high_isr+4
  3330   00112A  CFF4 F02A          	movff	prodh,??_high_isr+5
  3331   00112E                     
  3332                           ;invaders.c: 196: if (INTCONbits.TMR0IF) {
  3333   00112E  A4F2               	btfss	242,2,c	;volatile
  3334   001130  EF9C  F008         	goto	i2u94_41
  3335   001134  EF9E  F008         	goto	i2u94_40
  3336   001138                     i2u94_41:
  3337   001138  EF19  F009         	goto	i2l216
  3338   00113C                     i2u94_40:
  3339   00113C                     
  3340                           ;invaders.c: 197: TMR0L = 6;
  3341   00113C  0E06               	movlw	6
  3342   00113E  6ED6               	movwf	214,c	;volatile
  3343   001140                     
  3344                           ;invaders.c: 200: if (bullet_x > 0 && bullet_x < 20) {
  3345   001140  BE04               	btfsc	(_bullet_x+1)^0,7,c	;volatile
  3346   001142  EFAB  F008         	goto	i2u95_41
  3347   001146  5004               	movf	(_bullet_x+1)^0,w,c	;volatile
  3348   001148  E108               	bnz	i2u95_40
  3349   00114A  0403               	decf	_bullet_x^0,w,c	;volatile
  3350   00114C  A0D8               	btfss	status,0,c
  3351   00114E  EFAB  F008         	goto	i2u95_41
  3352   001152  EFAD  F008         	goto	i2u95_40
  3353   001156                     i2u95_41:
  3354   001156  EFBF  F008         	goto	i2l211
  3355   00115A                     i2u95_40:
  3356   00115A  BE04               	btfsc	(_bullet_x+1)^0,7,c	;volatile
  3357   00115C  EFBB  F008         	goto	i2u96_40
  3358   001160  5004               	movf	(_bullet_x+1)^0,w,c	;volatile
  3359   001162  E107               	bnz	i2u96_41
  3360   001164  0E14               	movlw	20
  3361   001166  5C03               	subwf	_bullet_x^0,w,c	;volatile
  3362   001168  B0D8               	btfsc	status,0,c
  3363   00116A  EFB9  F008         	goto	i2u96_41
  3364   00116E  EFBB  F008         	goto	i2u96_40
  3365   001172                     i2u96_41:
  3366   001172  EFBF  F008         	goto	i2l211
  3367   001176                     i2u96_40:
  3368   001176                     
  3369                           ;invaders.c: 201: bullet_x++;
  3370   001176  4A03               	infsnz	_bullet_x^0,f,c	;volatile
  3371   001178  2A04               	incf	(_bullet_x+1)^0,f,c	;volatile
  3372                           
  3373                           ;invaders.c: 202: } else {
  3374   00117A  EFC3  F008         	goto	i2l2539
  3375   00117E                     i2l211:
  3376                           
  3377                           ;invaders.c: 203: bullet_x = -1;
  3378   00117E  6803               	setf	_bullet_x^0,c	;volatile
  3379   001180  6804               	setf	(_bullet_x+1)^0,c	;volatile
  3380                           
  3381                           ;invaders.c: 204: bullet_y = -1;
  3382   001182  6801               	setf	_bullet_y^0,c	;volatile
  3383   001184  6802               	setf	(_bullet_y+1)^0,c	;volatile
  3384   001186                     i2l2539:
  3385                           
  3386                           ;invaders.c: 205: };invaders.c: 208: for(int i = 0; i<9; i++){
  3387   001186  0E00               	movlw	0
  3388   001188  6E2C               	movwf	(high_isr@i+1)^0,c
  3389   00118A  0E00               	movlw	0
  3390   00118C  6E2B               	movwf	high_isr@i^0,c
  3391   00118E                     i2l2545:
  3392                           
  3393                           ;invaders.c: 209: if(invaders[i].linha == bullet_y && invaders[i].coluna == bullet_x && 
      +                          invaders[i].alive){
  3394   00118E  502B               	movf	high_isr@i^0,w,c
  3395   001190  0D06               	mullw	6
  3396   001192  50F3               	movf	243,w,c
  3397   001194  0F60               	addlw	low _invaders
  3398   001196  6ED9               	movwf	fsr2l,c
  3399   001198  6ADA               	clrf	fsr2h,c
  3400   00119A  5001               	movf	_bullet_y^0,w,c	;volatile
  3401   00119C  18DE               	xorwf	postinc2,w,c
  3402   00119E  E107               	bnz	i2u97_41
  3403   0011A0  5002               	movf	(_bullet_y+1)^0,w,c	;volatile
  3404   0011A2  18DE               	xorwf	postinc2,w,c
  3405   0011A4  A4D8               	btfss	status,2,c
  3406   0011A6  EFD7  F008         	goto	i2u97_41
  3407   0011AA  EFD9  F008         	goto	i2u97_40
  3408   0011AE                     i2u97_41:
  3409   0011AE  EF08  F009         	goto	i2l2557
  3410   0011B2                     i2u97_40:
  3411   0011B2  502B               	movf	high_isr@i^0,w,c
  3412   0011B4  0D06               	mullw	6
  3413   0011B6  50F3               	movf	243,w,c
  3414   0011B8  0F62               	addlw	low (_invaders+2)
  3415   0011BA  6ED9               	movwf	fsr2l,c
  3416   0011BC  6ADA               	clrf	fsr2h,c
  3417   0011BE  5003               	movf	_bullet_x^0,w,c	;volatile
  3418   0011C0  18DE               	xorwf	postinc2,w,c
  3419   0011C2  E107               	bnz	i2u98_41
  3420   0011C4  5004               	movf	(_bullet_x+1)^0,w,c	;volatile
  3421   0011C6  18DE               	xorwf	postinc2,w,c
  3422   0011C8  A4D8               	btfss	status,2,c
  3423   0011CA  EFE9  F008         	goto	i2u98_41
  3424   0011CE  EFEB  F008         	goto	i2u98_40
  3425   0011D2                     i2u98_41:
  3426   0011D2  EF08  F009         	goto	i2l2557
  3427   0011D6                     i2u98_40:
  3428   0011D6  502B               	movf	high_isr@i^0,w,c
  3429   0011D8  0D06               	mullw	6
  3430   0011DA  50F3               	movf	243,w,c
  3431   0011DC  0F64               	addlw	low (_invaders+4)
  3432   0011DE  6ED9               	movwf	fsr2l,c
  3433   0011E0  6ADA               	clrf	fsr2h,c
  3434   0011E2  50DE               	movf	postinc2,w,c
  3435   0011E4  10DE               	iorwf	postinc2,w,c
  3436   0011E6  B4D8               	btfsc	status,2,c
  3437   0011E8  EFF8  F008         	goto	i2u99_41
  3438   0011EC  EFFA  F008         	goto	i2u99_40
  3439   0011F0                     i2u99_41:
  3440   0011F0  EF08  F009         	goto	i2l2557
  3441   0011F4                     i2u99_40:
  3442   0011F4                     
  3443                           ;invaders.c: 210: bullet_x = -1;
  3444   0011F4  6803               	setf	_bullet_x^0,c	;volatile
  3445   0011F6  6804               	setf	(_bullet_x+1)^0,c	;volatile
  3446                           
  3447                           ;invaders.c: 211: bullet_y = -1;
  3448   0011F8  6801               	setf	_bullet_y^0,c	;volatile
  3449   0011FA  6802               	setf	(_bullet_y+1)^0,c	;volatile
  3450   0011FC                     
  3451                           ;invaders.c: 212: score++;
  3452   0011FC  4A49               	infsnz	_score^0,f,c	;volatile
  3453   0011FE  2A4A               	incf	(_score+1)^0,f,c	;volatile
  3454   001200                     
  3455                           ;invaders.c: 213: invaders[i].alive = 0;
  3456   001200  502B               	movf	high_isr@i^0,w,c
  3457   001202  0D06               	mullw	6
  3458   001204  50F3               	movf	243,w,c
  3459   001206  0F64               	addlw	low (_invaders+4)
  3460   001208  6ED9               	movwf	fsr2l,c
  3461   00120A  6ADA               	clrf	fsr2h,c
  3462   00120C  6ADE               	clrf	postinc2,c
  3463   00120E  6ADD               	clrf	postdec2,c
  3464   001210                     i2l2557:
  3465   001210  4A2B               	infsnz	high_isr@i^0,f,c
  3466   001212  2A2C               	incf	(high_isr@i+1)^0,f,c
  3467   001214  BE2C               	btfsc	(high_isr@i+1)^0,7,c
  3468   001216  EF16  F009         	goto	i2u100_41
  3469   00121A  502C               	movf	(high_isr@i+1)^0,w,c
  3470   00121C  E109               	bnz	i2u100_40
  3471   00121E  0E09               	movlw	9
  3472   001220  5C2B               	subwf	high_isr@i^0,w,c
  3473   001222  A0D8               	btfss	status,0,c
  3474   001224  EF16  F009         	goto	i2u100_41
  3475   001228  EF18  F009         	goto	i2u100_40
  3476   00122C                     i2u100_41:
  3477   00122C  EFC7  F008         	goto	i2l2545
  3478   001230                     i2u100_40:
  3479   001230                     
  3480                           ;invaders.c: 214: };invaders.c: 215: };invaders.c: 217: INTCONbits.TMR0IF = 0;
  3481   001230  94F2               	bcf	242,2,c	;volatile
  3482   001232                     i2l216:
  3483   001232  C02A  FFF4         	movff	??_high_isr+5,prodh
  3484   001236  C029  FFF3         	movff	??_high_isr+4,prodl
  3485   00123A  C028  FFDA         	movff	??_high_isr+3,fsr2h
  3486   00123E  C027  FFD9         	movff	??_high_isr+2,fsr2l
  3487   001242  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3488   001244  0011               	retfie		f
  3489   001246                     __end_of_high_isr:
  3490                           	callstack 0
  3491                           
  3492                           	psect	rparam
  3493   000000                     
  3494                           	psect	temp
  3495   00004D                     btemp:
  3496                           	callstack 0
  3497   00004D                     	ds	1
  3498   000000                     int$flags	set	btemp
  3499   000000                     wtemp8	set	btemp+1
  3500   000000                     ttemp5	set	btemp+1
  3501   000000                     ttemp6	set	btemp+4
  3502   000000                     ttemp7	set	btemp+8
  3503                           
  3504                           	psect	config
  3505                           
  3506                           ;Config register CONFIG1L @ 0x300000
  3507                           ;	PLL Prescaler Selection bits
  3508                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  3509                           ;	System Clock Postscaler Selection bits
  3510                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  3511                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3512                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  3513   300000                     	org	3145728
  3514   300000  29                 	db	41
  3515                           
  3516                           ;Config register CONFIG1H @ 0x300001
  3517                           ;	Oscillator Selection bits
  3518                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
  3519                           ;	Fail-Safe Clock Monitor Enable bit
  3520                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3521                           ;	Internal/External Oscillator Switchover bit
  3522                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3523   300001                     	org	3145729
  3524   300001  05                 	db	5
  3525                           
  3526                           ;Config register CONFIG2L @ 0x300002
  3527                           ;	Power-up Timer Enable bit
  3528                           ;	PWRT = ON, PWRT enabled
  3529                           ;	Brown-out Reset Enable bits
  3530                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3531                           ;	Brown-out Reset Voltage bits
  3532                           ;	BORV = 3, Minimum setting 2.05V
  3533                           ;	USB Voltage Regulator Enable bit
  3534                           ;	VREGEN = OFF, USB voltage regulator disabled
  3535   300002                     	org	3145730
  3536   300002  18                 	db	24
  3537                           
  3538                           ;Config register CONFIG2H @ 0x300003
  3539                           ;	Watchdog Timer Enable bit
  3540                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3541                           ;	Watchdog Timer Postscale Select bits
  3542                           ;	WDTPS = 32768, 1:32768
  3543   300003                     	org	3145731
  3544   300003  1E                 	db	30
  3545                           
  3546                           ; Padding undefined space
  3547   300004                     	org	3145732
  3548   300004  FF                 	db	255
  3549                           
  3550                           ;Config register CONFIG3H @ 0x300005
  3551                           ;	CCP2 MUX bit
  3552                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3553                           ;	PORTB A/D Enable bit
  3554                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3555                           ;	Low-Power Timer 1 Oscillator Enable bit
  3556                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3557                           ;	MCLR Pin Enable bit
  3558                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3559   300005                     	org	3145733
  3560   300005  81                 	db	129
  3561                           
  3562                           ;Config register CONFIG4L @ 0x300006
  3563                           ;	Stack Full/Underflow Reset Enable bit
  3564                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3565                           ;	Single-Supply ICSP Enable bit
  3566                           ;	LVP = OFF, Single-Supply ICSP disabled
  3567                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3568                           ;	ICPRT = OFF, ICPORT disabled
  3569                           ;	Extended Instruction Set Enable bit
  3570                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3571                           ;	Background Debugger Enable bit
  3572                           ;	DEBUG = 0x1, unprogrammed default
  3573   300006                     	org	3145734
  3574   300006  80                 	db	128
  3575                           
  3576                           ; Padding undefined space
  3577   300007                     	org	3145735
  3578   300007  FF                 	db	255
  3579                           
  3580                           ;Config register CONFIG5L @ 0x300008
  3581                           ;	Code Protection bit
  3582                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3583                           ;	Code Protection bit
  3584                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3585                           ;	Code Protection bit
  3586                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3587                           ;	Code Protection bit
  3588                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3589   300008                     	org	3145736
  3590   300008  0F                 	db	15
  3591                           
  3592                           ;Config register CONFIG5H @ 0x300009
  3593                           ;	Boot Block Code Protection bit
  3594                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3595                           ;	Data EEPROM Code Protection bit
  3596                           ;	CPD = OFF, Data EEPROM is not code-protected
  3597   300009                     	org	3145737
  3598   300009  C0                 	db	192
  3599                           
  3600                           ;Config register CONFIG6L @ 0x30000A
  3601                           ;	Write Protection bit
  3602                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3603                           ;	Write Protection bit
  3604                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3605                           ;	Write Protection bit
  3606                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3607                           ;	Write Protection bit
  3608                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3609   30000A                     	org	3145738
  3610   30000A  0F                 	db	15
  3611                           
  3612                           ;Config register CONFIG6H @ 0x30000B
  3613                           ;	Configuration Register Write Protection bit
  3614                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3615                           ;	Boot Block Write Protection bit
  3616                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3617                           ;	Data EEPROM Write Protection bit
  3618                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3619   30000B                     	org	3145739
  3620   30000B  E0                 	db	224
  3621                           
  3622                           ;Config register CONFIG7L @ 0x30000C
  3623                           ;	Table Read Protection bit
  3624                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3625                           ;	Table Read Protection bit
  3626                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3627                           ;	Table Read Protection bit
  3628                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3629                           ;	Table Read Protection bit
  3630                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3631   30000C                     	org	3145740
  3632   30000C  0F                 	db	15
  3633                           
  3634                           ;Config register CONFIG7H @ 0x30000D
  3635                           ;	Boot Block Table Read Protection bit
  3636                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3637   30000D                     	org	3145741
  3638   30000D  40                 	db	64
  3639                           tosu	equ	0xFFF
  3640                           tosh	equ	0xFFE
  3641                           tosl	equ	0xFFD
  3642                           stkptr	equ	0xFFC
  3643                           pclatu	equ	0xFFB
  3644                           pclath	equ	0xFFA
  3645                           pcl	equ	0xFF9
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           indf0	equ	0xFEF
  3653                           postinc0	equ	0xFEE
  3654                           postdec0	equ	0xFED
  3655                           preinc0	equ	0xFEC
  3656                           plusw0	equ	0xFEB
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           indf1	equ	0xFE7
  3661                           postinc1	equ	0xFE6
  3662                           postdec1	equ	0xFE5
  3663                           preinc1	equ	0xFE4
  3664                           plusw1	equ	0xFE3
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           bsr	equ	0xFE0
  3668                           indf2	equ	0xFDF
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           preinc2	equ	0xFDC
  3672                           plusw2	equ	0xFDB
  3673                           fsr2h	equ	0xFDA
  3674                           fsr2l	equ	0xFD9
  3675                           status	equ	0xFD8

Data Sizes:
    Strings     2
    Constant    0
    Data        36
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      76
    BANK0           160      0      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(1) Largest target is 3
		 -> main@buff(COMRAM[3]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 3
		 -> main@buff(COMRAM[3]), STR_1(CODE[2]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 3
		 -> main@buff(COMRAM[3]), 

    special_char@data	PTR unsigned char  size(1) Largest target is 8
		 -> data1(COMRAM[8]), data2(COMRAM[8]), data3(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _trata_teclas->_varre_teclas
    _special_char->_lcd_cmd
    _special_char->_lcd_dat
    _print_special_character->___awdiv
    _lcd_str->_itoa
    _lcd_dat->_atraso_ms
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _itoa->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    9418
                                             28 COMRAM     8     8      0
                        _inicializar
                        _init_timer0
                               _itoa
                            _lcd_cmd
                           _lcd_init
                            _lcd_pos
                     _lcd_set_cursor
                            _lcd_str
            _print_special_character
                       _special_char
                       _trata_teclas
 ---------------------------------------------------------------------------------
 (1) _trata_teclas                                         2     2      0     128
                                              9 COMRAM     2     2      0
                       _varre_teclas
 ---------------------------------------------------------------------------------
 (2) _varre_teclas                                         1     1      0      39
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _special_char                                         4     3      1    1654
                                             14 COMRAM     4     3      1
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _print_special_character                              2     1      1    2060
                                             16 COMRAM     2     1      1
                            ___awdiv
                            _lcd_cmd
                            _lcd_dat
                            _lcd_pos (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     910
                                             23 COMRAM     5     3      2
                               _itoa (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0     668
                                             13 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       3     2      1     892
                                             14 COMRAM     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_pos                                              6     2      4     566
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1292
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     668
                                             13 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2     624
                                              8 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 3     0      3    1061
                                             20 COMRAM     3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             8     8      0     134
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _inicializar
   _init_timer0
   _itoa
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_pos
   _lcd_set_cursor
     _lcd_cmd
   _lcd_str
     _itoa (ARG)
     _lcd_dat (ARG)
       _atraso_ms
       _lcd_wr
   _print_special_character
     ___awdiv
     _lcd_cmd
     _lcd_dat
     _lcd_pos (ARG)
   _special_char
     _lcd_cmd
     _lcd_dat
   _trata_teclas
     _varre_teclas

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      36       5       33.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4C       1       80.9%
BITBIGSFRhlhhl      2A      0       0      23        0.0%
BITBIGSFRl          21      0       0      27        0.0%
BITBIGSFRhhl        1B      0       0      21        0.0%
BITBIGSFRhlhhh      13      0       0      22        0.0%
BITBIGSFRhllh        E      0       0      25        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhlhl        1      0       0      24        0.0%
BITBIGSFRhlll        1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      28        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jun 10 20:52:19 2024

                              l41 1706                                l33 153E                                l27 111A  
                              l38 16D0                                l83 1786                                l93 0D16  
                              l86 1802                      ___awdiv@sign 0032                               l202 1320  
                             l205 1836                               l219 15A6                               l262 17B0  
                             l271 145C                               l256 183E                               l265 1666  
                             l281 16BE                               l259 17DA                               l515 13E4  
                    _trata_teclas 14D2                               l770 14D0                               l763 14C8  
                             l780 160A                               l773 1602                               u600 100A  
                             u601 1006                               u610 101C                               u611 1018  
                             u700 10DC                               u620 1038                               u701 10D8  
                             u621 1034                               u710 10EE                               u630 104A  
                             u711 10EA                               u631 1046                               u800 1478  
                             u560 16EC                               u720 1100                               u640 105C  
                             u801 1474                               u561 16E8                               u721 10FC  
                             u641 1058                               u810 1496                               u570 1706  
                             u730 1112                               u650 106E                               u811 1492  
                             u571 1702                               u731 110E                               u651 106A  
                             u820 14B2                               u740 1334                               u900 1786  
                             u660 108A                               u580 0FE6                               u821 14AE  
                             u741 1330                               u901 1782                               u661 1086  
                             u581 0FE2                               u830 15BA                               u910 141A  
                             u750 134E                               u670 109C                               u590 0FF8  
                             u831 15B6                               u751 134A                               u671 1098  
                             u591 0FF4                               u840 15D8                               u920 144C  
                             u760 1374                               u680 10AE                               u841 15D4  
                             u761 1370                               u681 10AA                               u850 15EE  
                             u930 145C                               u770 1392                               u690 10C0  
                             u851 15EA                               u931 1458                               u771 138E  
                             u691 10BC                               u780 13AE                               u860 14EA  
                             u917 1410                               u781 13AA                               u861 14E6  
                             u790 13D4                               u870 14FA                               u927 1442  
                             u791 13D0                               u871 14F6                               u880 150E  
                             u881 150A                               u890 1532                               u891 152E  
                             wreg 0FE8                   ?_lcd_set_cursor 0033                       lcd_pos@line 002F  
                            l2001 133C                              l2011 1362                              l2003 1340  
                            l2021 1398                              l2013 1374                              l2005 134E  
                            l2101 1754                              l2111 0804                              l2023 13AE  
                            l2015 137C                              l2031 13C4                              l2007 1356  
                            l2103 175E                              l2041 1466                              l2201 0942  
                            l2121 0814                              l2113 0808                              l2033 13D4  
                            l2025 13B6                              l2017 1384                              l2009 135A  
                            l2105 176C                              l2051 149C                              l2043 1478  
                            l2035 13DC                              l2027 13B8                              l2019 1392  
                            l2107 1770                              l2053 14B2                              l2045 1480  
                            l2061 15A8                              l2301 0A8E                              l2221 0960  
                            l2213 0954                              l2205 0948                              l2141 0832  
                            l2133 0826                              l2125 081A                              l2117 080E  
                            l2029 13BE                              l2109 17DE                              l2055 14BA  
                            l2047 1488                              l2039 145E                              l2071 15EE  
                            l2063 15BA                              l2057 14BC                              l2049 1496  
                            l2073 15F6                              l2065 15C2                              l2401 0BDA  
                            l2321 0AAC                              l2313 0AA0                              l2305 0A94  
                            l2241 097E                              l2233 0972                              l2225 0966  
                            l2217 095A                              l2209 094E                              l2161 0850  
                            l2153 0844                              l2145 0838                              l2137 082C  
                            l2129 0820                              l2081 14EA                              l2059 14C2  
                            l2075 15FC                              l2067 15CA                              l2083 14FA  
                            l2069 15D8                              l2421 0BF8                              l2413 0BEC  
                            l2405 0BE0                              l2341 0ACA                              l2333 0ABE  
                            l2325 0AB2                              l2317 0AA6                              l2309 0A9A  
                            l2261 099C                              l2253 0990                              l2245 0984  
                            l2237 0978                              l2229 096C                              l2181 086E  
                            l2173 0862                              l2165 0856                              l2157 084A  
                            l2149 083E                              l2501 166A                              l2085 150E  
                            l2093 1538                              l2077 14D2                              l2503 166E  
                            l2095 153C                              l2087 151E                              l2079 14D8  
                            l2441 0C16                              l2433 0C0A                              l2425 0BFE  
                            l2417 0BF2                              l2409 0BE6                              l2353 0ADC  
                            l2345 0AD0                              l2337 0AC4                              l2329 0AB8  
                            l2281 0A70                              l2273 09AE                              l2265 09A2  
                            l2257 0996                              l2249 098A                              l2185 0874  
                            l2177 0868                              l2169 085C                              l2505 1676  
                            l2521 13E6                              l2089 1532                              l2363 0AE8  
                            l2195 0880                              l2451 0CD8                              l2507 167E  
                            l2515 168E                              l2523 13EE                              l2099 174C  
                            l2611 0E32                              l2437 0C10                              l2429 0C04  
                            l2381 0BBC                              l2373 0BB0                              l2365 0BA4  
                            l2357 0AE2                              l2349 0AD6                              l2293 0A82  
                            l2285 0A76                              l2269 09A8                              l2197 093C  
                            l2453 0D14                              l2189 087A                              l2509 1686  
                            l2517 16B4                              l2525 141E                              l1901 1024  
                            l2613 0E4E                              l2605 0DDC                              l2447 0C1C  
                            l2279 09B4                              l2519 16B8                              l2527 1420  
                            l1911 104E                              l1903 102A                              l2631 0ED8  
                            l2623 0E90                              l2615 0E58                              l2607 0DFA  
                            l2481 1830                              l2393 0BCE                              l2385 0BC2  
                            l2377 0BB6                              l2369 0BAA                              l2297 0A88  
                            l2289 0A7C                              l1921 1074                              l1913 105C  
                            l1905 1038                              l2641 0F40                              l2633 0EEC  
                            l2625 0EAA                              l2617 0E74                              l2609 0E2E  
                            l2561 0D18                              l2483 1832                              l2491 15A4  
                            l1851 16C0                              l1931 109C                              l1923 1076  
                            l1915 1060                              l1907 103C                              l2643 0F48  
                            l2635 0F00                              l2627 0EB4                              l2651 0FA6  
                            l2619 0E7A                              l2571 0D2C                              l2563 0D1C  
                            l2477 1246                              l2485 1834                              l1861 16DC  
                            l1853 16CC                              l2397 0BD4                              l2389 0BC8  
                            l1941 10C4                              l1933 10A0                              l1925 107C  
                            l1917 106E                              l1909 104A                              l2645 0F5C  
                            l2637 0F1A                              l2629 0ED0                              l2581 0D44  
                            l2573 0D30                              l2565 0D20                              l2479 1828  
                            l2487 1540                              l1863 16EC                              l2495 160C  
                            l1951 10E0                              l1943 10C6                              l1935 10AE  
                            l1927 108A                              l1919 1072                              l1871 0FCA  
                            l2639 0F24                              l2591 0D84                              l2583 0D4E  
                            l2575 0D34                              l2567 0D24                              l2489 1598  
                            l1865 16F0                              l2497 1610                              l2761 0CEE  
                            l2753 0896                              l1961 1112                              l1953 10EE  
                            l1945 10C8                              l1937 10B2                              l1929 108E  
                            l1881 0FD8                              l1873 0FCC                              l2649 0F70  
                            l2593 0DA0                              l2585 0D58                              l2577 0D3A  
                            l2569 0D28                              l1859 16DA                              l1867 183A  
                            l1971 17BC                              l2499 161C                              l2755 09CA  
                            l1963 1116                              l1955 10F2                              l1947 10CE  
                            l1939 10C0                              l1891 100A                              l1883 0FE6  
                            l1875 0FCE                              l2595 0DBA                              l2587 0D62  
                            l2579 0D40                              l1973 17BE                              l2757 0AFE  
                            l1981 178A                              l1957 1100                              l1949 10DC  
                            l1893 100E                              l1885 0FEA                              l1877 0FD0  
                            l1869 0FC6                              l2597 0DC4                              l2589 0D68  
                            l1975 17CA                              l1967 17B4                              l2759 0C32  
                            l1991 17A2                              l1983 178C                              l1959 1104  
                            l1895 101C                              l1887 0FF8                              l1879 0FD2  
                            l2599 0DD4                              l1977 17CC                              l1969 17B6  
                            l1993 17AE                              l1985 1792                              l1897 1020  
                            l1889 0FFC                              l1979 17D8                              l1987 1794  
                            l1995 1322                              l1899 1022                              l1989 17A0  
                            l1997 1326                              l1999 1334                              STR_1 0801  
                            u1010 0DBA                              u1011 0DB6                              u1100 0F5C  
                            u1020 0DFA                              u1101 0F58                              u1021 0DF6  
                            u1030 0E4E                              u1031 0E4A                              u1040 0E8C  
                            u1041 0E88                              u1050 0EAA                              u1051 0EA6  
                            u1060 0ED0                              u1117 0FB0                              u1061 0ECC  
                            u1070 0EEC                              u1127 1514                              u1071 0EE8  
                            u1080 0F1A                              u1137 0FD4                              u1081 0F16  
                            u1090 0F40                              u1147 1026                              u1091 0F3C  
                            u1157 1078                              u1167 10CA                              _main 0D18  
                            _itoa 1540                              fsr2h 0FDA                              indf2 0FDF  
                            fsr1l 0FE1                              fsr2l 0FD9                              btemp 004D  
                            prodh 0FF4                              prodl 0FF3                              start 000E  
                    ?_inicializar 0025                      ___param_bank 0000                             ?_main 0025  
                           ?_itoa 0039                   __end_of___awdiv 13E6                             _T0CON 0FD5  
                 ___awdiv@divisor 002F                   __end_of___lwdiv 14D2                   __end_of___lwmod 160C  
                           i2l211 117E                             i2l214 1230                             i2l216 1232  
                 ___awdiv@counter 0031                             _TMR0L 0FD6                             _PORTB 0F81  
                           _PORTD 0F83                             _TRISB 0F93                             _TRISD 0F95  
                           _TRISE 0F96                      ?_init_timer0 0025                   __end_of_lcd_dat 17B2  
                 __end_of_lcd_cmd 17DC                   __end_of_lcd_pos 0D18                   __end_of_lcd_str 145E  
                           _data1 001D                             _data2 000D                             _data3 0015  
                           _tecla 004C                             _score 0049                             main@i 0047  
                           tablat 0FF5                             ttemp5 004E                             ttemp6 0051  
                           ttemp7 0055                             status 0FD8                             wtemp8 004E  
                 __initialization 1708                      __end_of_main 0FC6                      __end_of_itoa 15A8  
                          ??_main 0041                            ??_itoa 003C                     __activetblptr 0002  
                          _ADCON1 0FC1                  ___awdiv@dividend 002D                            i2l2531 113C  
                          i2l2533 1140                            i2l2551 11F4                            i2l2535 115A  
                          i2l2553 11FC                            i2l2545 118E                            i2l2537 1176  
                          i2l2529 112E                            i2l2555 1200                            i2l2547 11B2  
                          i2l2539 1186                            i2l2549 11D6                            i2l2557 1210  
                          i2l2559 1214  print_special_character@cgram_loc 0036                  __end_of_lcd_init 1668  
                __end_of_high_isr 1246                         ??___awdiv 0031                         ??___lwdiv 0036  
                       ??___lwmod 0031                            _lcd_wr 1838                   varre_teclas@key 002D  
                          clear_0 172E                  ___awdiv@quotient 0033                            isa$std 0001  
                       ??_lcd_dat 0032                         ??_lcd_cmd 0032                         ??_lcd_pos 0031  
                       ??_lcd_str 003E                      __pdataCOMRAM 0001           _print_special_character 17DC  
                    __mediumconst 0000                            tblptrh 0FF7                            tblptrl 0FF6  
                          tblptru 0FF8                        __accesstop 0060           __end_of__initialization 173C  
                   ___rparam_used 0001                    __pcstackCOMRAM 0025                  ??_lcd_set_cursor 0034  
                      __pbssBANK0 0060                           ?_lcd_wr 0025         ??_print_special_character 0036  
                   trata_teclas@t 002F                           i2u94_40 113C                           i2u94_41 1138  
                         i2u95_40 115A                           i2u95_41 1156                           i2u96_40 1176  
                         i2u96_41 1172                           i2u97_40 11B2                           i2u97_41 11AE  
                         i2u98_40 11D6                           i2u98_41 11D2                           i2u99_40 11F4  
                         i2u99_41 11F0                         ?_lcd_init 0025                         ?_high_isr 0025  
                         __Hparam 0000                           __Lparam 0000                           ___awdiv 1322  
                         ___lwdiv 145E                           ___lwmod 15A8                 __end_of_atraso_ms 1708  
                    __psmallconst 0800                           __pcinit 1708                           __ramtop 0800  
                         __ptext0 0D18                           __ptext1 14D2                           __ptext2 0FC6  
                         __ptext3 174A                           __ptext4 17DC                           __ptext5 1322  
                         __ptext6 13E6                           __ptext7 1788                           __ptext8 1668  
                         __ptext9 0804                           _lcd_dat 1788                           _lcd_cmd 17B2  
                         _lcd_pos 0804                           _lcd_str 13E6             special_char@cgram_loc 0034  
                      ??_lcd_init 0033                        ??_high_isr 0025                    __pintcode_body 111C  
            end_of_initialization 173C                        _tecla_pres 004B   __end_of_print_special_character 1804  
                         itoa@val 0039                     __Lmediumconst 0000                           itoa@str 003B  
                         int_func 111C                     ?_special_char 0033                        _ship_pos_y 0007  
                      _ship_pos_z 0005                           postdec1 0FE5                           postdec2 0FDD  
                         postinc0 0FEE                           postinc2 0FDE                     ?_varre_teclas 0025  
                       _PORTBbits 0F81                         _PORTEbits 0F84                        lcd_dat@val 0032  
                      lcd_cmd@val 0032                        lcd_pos@col 002D                    ??_special_char 0034  
                      lcd_str@str 003C                    ??_varre_teclas 002D                        atraso_ms@i 002F  
                      atraso_ms@j 0031                     __pidataCOMRAM 1804                    __end_of_lcd_wr 1840  
                   ?_trata_teclas 0025               start_initialization 1708             lcd_set_cursor@address 0035  
                   ??_inicializar 002D                          ??_lcd_wr 002D                    ??_trata_teclas 002E  
                   ??_init_timer0 002D                       __pbssCOMRAM 0049                  ___lwdiv@dividend 0032  
                       __pintcode 0008                          ?___awdiv 002D                          ?___lwdiv 0032  
                        ?___lwmod 002D               __end_of_inicializar 1322                          ?_lcd_dat 0025  
                        ?_lcd_cmd 0025                          ?_lcd_pos 002D                          ?_lcd_str 003C  
                       _atraso_ms 16C0                       __smallconst 0800              __end_of_special_char 1788  
                ___lwdiv@quotient 0036              __end_of_varre_teclas 111C               __end_of_init_timer0 1838  
                  atraso_ms@valor 002D                          i2u100_40 1230                          i2u100_41 122C  
                       _ship_posz 0009          ?_print_special_character 0035                        ?_atraso_ms 002D  
  print_special_character@lcd_loc 0035                         high_isr@i 002B                         lcd_wr@val 002D  
                       copy_data0 171C              __end_of_trata_teclas 1540                          __Hrparam 0000  
                     _inicializar 1246                          __Lrparam 0000                   main@tecla_atual 0046  
                     _init_timer0 1828                   ___lwdiv@divisor 0034                   ___lwdiv@counter 0038  
                        __ptext10 160C                          __ptext11 17B2                          __ptext12 1838  
                        __ptext13 16C0                          __ptext14 1540                          __ptext15 15A8  
                        __ptext16 145E                          __ptext17 1828                          __ptext18 1246  
                        _lcd_init 160C                          _high_isr 0008                          _bullet_x 0003  
                        _bullet_y 0001                          _invaders 0060                          _ship_pos 000B  
                        isa$xinst 0000                          int$flags 004D                          main@buff 0043  
                        lcd_str@i 0040                  special_char@data 0033                       ??_atraso_ms 002F  
                      _INTCONbits 0FF2                          intlevel2 0000                    _lcd_set_cursor 1668  
               lcd_set_cursor@col 0034                 lcd_set_cursor@row 0033                  ___lwmod@dividend 002D  
                    _special_char 174A                      _varre_teclas 0FC6                   ___lwmod@divisor 002F  
                 ___lwmod@counter 0031            __end_of_lcd_set_cursor 16C0                     special_char@j 0035  
